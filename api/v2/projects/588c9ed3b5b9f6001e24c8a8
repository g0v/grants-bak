{"_id":"588c9ed3b5b9f6001e24c8a8","title":"CourseMap – 課程知識地圖","description":"# § 請以 80 ~ 120 字簡短地說明這個專案\n「跨界教育」在台灣是個比喻，但不是一個應用方法。該計畫將系統性的整理不同大學的課程數據，尤其各科系、課程、課綱的交互關係。我們主要的成果是一張課程地圖，在視覺上標注出特殊的知識關聯，並以數學及電腦科學方法分析該網絡，提供針對學生與教育工作者的數據接口。\n\n# § 你過去參與過什麼開源開發計畫（open source project）？\n\n1. `顏子祺`: [個人網頁](http://www.junipertcy.info/)、[GitHub](https://github.com/junipertcy)\n\t* 台北市道路施工的分析與視覺化: [DEMO](http://junipertcy.info.s3.amazonaws.com/data_taipei/index.html)\n\t* 紐約市噪音地圖: [GitHub](https://github.com/junipertcy/uwalk)\n\t* 網絡素養教育推廣計畫: [計畫網頁](http://www.uwalks.info/index.html)\n\n2. `林子耘`: [個人網頁](http://tweddielin.com/)、[GitHub](https://github.com/tweddielin)\n\t* 台北市道路施工的分析與視覺化: [DEMO](http://junipertcy.info.s3.amazonaws.com/data_taipei/index.html)\n\t* Open Skill API Workforce Data Initiative: [GitHub](https://github.com/workforce-data-initiative/skills-ml)\n\t* Police Early Intervention System: [GitHub](https://github.com/dssg/police-eis)\n\n\n    [註]: 「台北市道路施工的分析與視覺化」是第一屆臺北市政府開放資料黑客松得獎作品。\n\t\n\n# § 這個計畫要解決什麼問題？\n\n該專案首要完成的事是「整合台灣的大學課程數據，提供可信賴、可直接應用的開放數據資源」。除了數據接口與知識網絡的展示外，我們會用整理過的數據，試著回答這些問題：\n\nQ-1. 某某系提供課程的核心價值是什麼？真的需要學生修這麼多課嗎？\n\nQ-2. 為什麼某些領域跨起來這麼簡單，有些就很難？是不是有些領域之間要相跨，就是「天然難」？\n\nQ-3. 我在中文系修過這些課。如果我想要當記者的話，我最好可以學習什麼課（知識）呢？應該不需要從大一的課開始學起吧？如果我想要增進「量化素養」呢，我可以做什麼？\n\nQ-4. 和這門課（或是這些知識）相近的課（或知識）有什麼呢？\n\n\n# § 你為什麼要做這個計劃 （ 個人動機 ）？\n個人（顏子祺）在台灣接受大學基本教育後，輾轉換了幾次工作，現在在中國從事和大學專業完全不同的軟體工程師工作。即便網路發達的現代，我們已經有了 MOOC, Coursera 等能遠程學習的工具，但是對想要換跑道的年輕求職者來說，該怎麼有效的獲取新知識，依然是困難的問題。我認為其中一個原因，是知識和工作的供需結構在近一二十年已經有很大的轉變；其中，有的領域變得更開放了，有些則變得更封閉了，而傳統我們認為的大學教育基本價值，可能已經過時。\n\n雖然教育的問題脈絡很複雜，我認為第一步是提供一個可信賴的、整理過的大學課程開放資料。這是許多教育應用的基礎建設，在中學或者大學的教育現場，甚至是迫切的需要。這可以幫助相關的討論更踏實、更能有數據支持。\n\n個人發起了[網絡素養教育推廣計畫](www.uwalks.info/networkliteracy.html)，並認為本計劃的問題能用結構化的網絡數據來幫助解決。另外，本專案的靈感，亦發想自兩個獨立的計畫：\n\n* [Hiroki Sayama 博士](http://bingweb.binghamton.edu/~sayama/)在 [NetSciEd5 會議](https://sites.google.com/a/binghamton.edu/netscied5)中的[報告](http://junipe.bitnamiapp.com/mediawiki/images/f/f0/NetSciEd5-sayama.pdf)\n* [MapEquation 網站](http://www.mapequation.org/)\n\n這兩個計畫說明用網絡的觀點看待課程數據的價值。\n\n# § 你預計用什麼方式解決此問題？\n我們希望建構 API，在`coursemap.org`的域名下，提供中文世界的大學課程數據。其中，我們也會設計數據流，讓後端系統容易維護與延展。我們提供的數據包括：\n\n#### 課程相關數據：\n\nA-1. `GET` `/courses` `課程數據（可以分頁檢索）`\n\nA-2. `GET` `/courses/{_id}` `特定課程的數據`\n\nA-3. `GET` `/courses/{_id}/related_courses ` `特定課程的相關課程`\n\nA-4. `GET` `/courses/{_id}/related_terms` `特定課程的相關單詞`\n\nA-5. `GET` `/courses/{_id}/related_values` `特定課程的相關價值`\n\nA-6. `GET` `/courses/autocomplete` `自動補全和特定課程相關的資料`\n\n\n#### 關鍵詞相關數據：\n\nB-1. `GET` `/terms` `單詞的數據（可以分頁檢索）`\n\nB-2. `GET` `/terms/{_id}` `特定單詞的數據`\n\nB-3. `GET` `/terms/{_id}/related_terms` `特定單詞的相關單詞`\n\nB-4. `GET` `/terms/{_id}/related_courses` `特定單詞的相關課程`\n\nB-5. `GET` `/terms/autocomplete ` `自動補全和特定單詞相關的資料`\n\n#### 整合數據：\n\nC-1. `POST` `/courses?courses_taken=COURSES_TAKEN&target_values=TARGET_VALUES` `輸入已上過的課程，返回和特定領域相關的推薦課程`\n\nC-2. `POST` `/courses?courses_taken=COURSES_TAKEN&target_terms=TARGET_TERMS` `輸入已上過的課程，返回和特定關鍵詞相關的推薦課程`\n\nC-3. `GET` `/departments/{_id}/core_courses` `列出特定系所的核心課程`\n\nC-4. `GET` `/departments/{_id}/core_terms` `列出特定系所的核心關鍵詞`\n\nC-5. `GET` `/departments/{_id}/core_values` `列出特定系所的核心價值`\n\n#### 數據來源（暫定台灣六所大專院校，六選三；以數據容易取得程度為優先）：\n\n1. [台大選課輔助程式](http://ntucourse.ericyu.org/)\n2. [清華大學課程網](https://www.ccxp.nthu.edu.tw/ccxp/INQUIRE/JH/6/6.2/6.2.9/JH629001.php)\n3. [交通大學課程網](http://timetable.nctu.edu.tw/)\n4. [成功大學課程網](http://course-query.acad.ncku.edu.tw/qry/)\n5. [政治大學課程網](http://wa.nccu.edu.tw/QryTor/Default.aspx?language=zh-TW)\n6. [中央大學 API](http://ncu-cc.github.io/)\n\n#### 工作流程與可能困難：\n \n    1. 從上述數據來源爬數據。\n\n> 我們已確認至少上述網站的內容皆能使用爬蟲爬下，惟有些網站需要驗證碼，將需要人工驗證，會困難些。另，每個網站都不一樣，我們需要訂製不同爬蟲的代碼。\n \n    2. 取得文字數據後，我們將數據去噪。\n\n> 這裡主要是自然語言處理。我們首先將中文與英文分開來，再來分別分詞。我們會用 [TF-IDF](https://en.wikipedia.org/wiki/Tf%E2%80%93idf) 分數篩選關鍵詞的權重。我們也會人工審視數據的可靠性。例如：人文科系的課程，可能只是討論某些文學作品，不一定能被分詞系統擷取出來，這時候會人為介入。\n\n    3. 去噪後，我們將分為三類數據存在 MongoDB 裡。分別是：\n       靜態數據（去噪後的基礎數據）、\n       關聯性數據（課程–課程的關聯等）、\n       應用類數據（經過演算法處理過的數據）。\n\n> 建立數據的關聯是本工作的重點，有三種方法可以建立數據的基本元素間的關聯。以化學系為例，化學系大一需要上普通化學、大二需要上有機化學。由於`有機`和`普化`都是化學系所開，且一先一後，因此這兩門課之間存在一條關聯。另外，有些課程如`生物化學`，可能在課綱中明白說明需要`先修有機`，這樣子的話，我們也可以在`生物化學`和`有機化學`之間建立關聯。除此之外，兩門課之間也可以因為具有同樣的關鍵詞而有聯繫。如`社會學`和`經濟學`都和`法律`相關，這樣子`社會學`和`經濟學`就能關聯起來。這中間存在數據稀疏的問題，我們會盡量人為介入去檢查「關聯足夠多」，有人為介入者會在數據中標記。\n\n![Data Crawling Logic](http://junipertcy.info.s3.amazonaws.com/coursemap/data-crawling-logic.png)\n\n    4. 存起來的數據，我們將使用 node.js 建立服務，讓用戶方便取用。\n\n#### 後端數據流設計：\n\n我們希望來自不同地方的課程數據，有可複用的數據處理流程。我們將使用 [Airflow](http://airbnb.io/projects/airflow/) 實作，這部份分為以下兩個要點：\n\n1. 我們將從各大課程網站爬下課程數據，我們會統一數據格式，以及定義資料內容（如：課程名稱、學校、老師、對象、大綱、要求、相關書目、人數、開課時間、地點等），將其存起來。其中課程大綱（若有）將保留原始文字檔。這部份將照顧到不同數據取用者的需求，且數據必須夠乾淨，使得未來的機器學習任務可以直接使用（機器學習任務不包括在本提案內容）。\n2. 針對不同的學校，我們設計專屬的數據存放標的。對於新的數據，我們可以更新它。\n\n![Data Pipeline](http://junipertcy.info.s3.amazonaws.com/coursemap/data-pipeline.png)\n\n#### 演算法設計：\n除了 A, B 兩類中規中矩的接口，我們會在 C 類整合數據接口中，提供經演算法處理後的數據。簡介如下：\n\n1. C-1 與 C-2: 當我們將課程與關鍵詞的結構建立好以後，便是一張網絡。問題的輸入是網絡裡特定區域的節點（修過的課/知識, `source`），以及一些特殊的節點（特殊的課, `target`）。我們將會直接從 `source` 往 `target` 搜索最短路徑，讓系統返為這條路徑上，離 `source` 最近的幾個節點。這將幫助回答上述 Q-3 的問題。\n2. C-3 到 C-5: 當課程網絡建立起來後，我們能在其上偵測社群結構（使用 [InfoMap](https://github.com/mapequation/infomap) 或 [Minimum Spanning Tree](https://en.wikipedia.org/wiki/Minimum_spanning_tree)）。這將幫助回答上述 Q-1 與 Q-2 的問題。\n\n這些算法雖然簡單，但我們可以在所作出的視覺化頁面中，檢視其合理性。\n\n\n\n# § 這個計畫的目標對象是誰？\n大學生、高中生與教育工作者。\n\n# § 這個計畫預計跟什麼團體合作？\n暫無。歡迎能直接提供以下數據的單位聯繫： (1) 學校課程數據 (2) 學生匿名後的修課記錄。\n\n# § 過去有作過相關主題的計畫嗎？\n1. `顏子祺`:\n\t* 使用 Node.js/Angular.js/MongoDB 建立 web app\n\t* 使用 D3.js/Linkurious.js 視覺化網絡\n\t* 使用 Python 分析社群網絡\n\n2. `林子耘`:\n\t* 使用 Flask/Postgres/React.js/D3.js 建立 web app\n\t* 使用 AirFlow/gensim/sci-kit learn 建立 Machine Learning Data Pipeline\n\t* 使用 theano、tensorflow 實作 deep neural net 相關應用\n\n3. 第三位工程師不願具名。其具 data mining 經驗，作過 Google 搜尋結果的大型爬蟲。\n\n# § 預計六個月內將花多少小時作這件事？需要多少經費？（30 萬到 50 萬）\n\n##### 系統維護（暫以一年估計）：\n1. AWS server（一年）：1000 元 × 6 個月 + 2000 元（存放數據後）× 6 個月 = 18000 元\n2. 域名（一年）：1000 元\n\n##### 人事（三人；第三人不願具名）：\n1. 演算法實現與接口設計\n2. 數據流架構, 網頁設計（包括維持服務、伺服器管理）\n3. 網頁爬蟲, 數據整理\n\n##### 時間分配：\n* 每週平均 36 小時開發，共 864 小時。\n* 平均一人一週 12 小時開發。以每日 8 小時計，約等於每人全職工作 1.8 個月。\n* 其中時間大致遵照上述人事任務分配；其餘用於社群協作、溝通等。\n\n##### 所需金額：46 萬。包括：\n* AWS 系統維護費用：2 萬\n* 人事費用（每人 13 萬 × 3 人）：39 萬\n* 其他（交通、接洽等雜支）：5 萬\n\n# § 打算如何讓社群參與以及回饋意見？\n\n我們會不定時的將成果展示在 coursemap.org 的網頁裡，並會創建一個 Slack 群組，在該群組內，我們參與大家的意見討論。\n\n# § 請說明專案結束時，會產出的開源軟體套件或開放授權文件（請條列個別元件的輸入輸出或其功能）？\n專案結束後，將提交三份開源軟體套件以及數據。軟體的使用說明以註釋為主，但也會附上獨立的說明，讓新工程師順利接手。產出內容分別是：\n\n1. CourseMap-service: 以 node.js 實作。主要包含上述所提示的 API。\n2. CourseMap-web: 以 angular.js 實作。包含 coursemap.org 的首頁展示，以及課程數據視覺化的頁面。此頁面將包含簡易交互，以能回答上述本計劃要解決的五大問題為主。\n3. CourseMap-utils: 以 Python 實作。包含網頁爬蟲、系統部屬等代碼，並會附上系統設計架構。\n4. Course network data: 提交的數據將會是 MongoDB 匯出的 json 檔。\n\n##### 授權：\n* 程式碼：MIT 授權\n* 課程數據、程式碼說明文件與介面設計：CC-By-4.0 授權\n\n# § 請自行定義計畫的工作里程碑與最後的驗收標準 （若沒有達成這些標準的話，我們會不給你錢喔！)\n\n##### 第一個月：\n*  訂好三大類數據（科系、課程、關鍵詞）的欄位\n*  開發爬蟲\n*  建立 coursemap.org 計畫網站（中文版）\n*  建立 aws 工作環境\n\n> 驗收項目：\n> (1) 數據欄位說明書 (包含數據間的關聯之說明);\n> (2) 工作資料流流程設計圖;\n> (3) 中文版的計畫網站。\n\n##### 第二與第三個月：\n* 使用爬蟲爬下數據（確保至少有三間學校的數據可以擷取出來）\n* 清洗數據（需要大量人工介入）\n* 儲存數據\n* coursemap.org 計畫網站加入了英文版\n* 確保從擷取數據到展示的工作流流暢\n\n> 驗收項目：\n> (1) 整理過的原始數據 (*.json, 可下載);\n> (2) 提出目前所收集數據的統計報告;\n> (3) 資料流的部屬代碼與文檔;\n> (4) 英文版的計畫網站。\n\n##### 第四個月（7/01 大黑客松期中報告）：\n*  完成 A 類與 B 類的接口\n*  能用靜態代碼完成 C 類的整合數據的運算\n*  完成一張視覺化的頁面，說明數據間的關聯\n*  以網站為主，投影片為輔，能在期中報告展示。\n\n> 驗收項目：\n> (1) 完成 A 類與 B 類的接口;\n> (2) 完成一張課程網絡視覺化且可交互的頁面 (包括 C 類數據的結果);\n> (3) 較完整的計畫網站。\n\n##### 第五與六個月：\n*  完成上述的 A, B, C 類所有接口\n*  完善說明書\n*  完善網站\n\n> 驗收項目：\n> (1) 完成 A – C 類的接口;\n> (2) 完成三類程式碼的說明書;\n> (3) 完整的計畫網站（網站將會包括：`回報錯誤`的功能）。\n\n\n# § 未來可能進一步的發展？\n\n我們認為本專案的核心在於整理數據，讓數據的質和量都能達到可直接應用的目標。數據和接口處理完成後，有以下應用：\n\n1. 製作機器學習算法，配合`職缺數據`，用來推薦學生課程（推薦取向：想發展那方面的能力？想從事哪方面的工作？），變成一個獨立的工具。這或許可以改善台灣的大學教育與就業市場學用落差的問題。\n2. 獨立做成網頁服務，收集使用者數據。這些數據也是開放資料的基礎。服務場景如：已經當上社工的學長姐們，他們在大學的時候修過什麼課呢？財金系的熱門修課路徑是什麼？\n3. 教育工作者研究使用。\n\n# § 本計畫目前是否已有、或正在申請其他的資金來源？若有，請說明申請本獎助的內容與原計畫的差異。\n無。\n\n# § 若有專案介紹的投影片，請提供：\n\nhttps://junipertcy.info.s3.amazonaws.com/coursemap/coursemap-proposal.pdf","link":"http://coursemap.org","leader":{"_id":"586b2e2fb46ada001e477f2d","username":"junipertcy","name":"Tzu-Chi Yen","picture":"https://avatars.githubusercontent.com/u/8808414?v=3","provider":"github","bio":"顏子祺，台灣雲林人，大學讀生物，做過物理化學研究，也當過 Web 端的軟體工程師。目前在中國北京的中國科學院當「訪問工程師」，研究複雜網絡。翻譯了《網絡素養》一書，希望可以慢慢在台灣推廣網絡科學教育。\n網絡素養計畫：http://www.uwalks.info/networkliteracy.html\n個人網頁：http://www.junipertcy.info/","created_at":"2017-01-03T04:53:03.488Z","admin_in":[]},"cover":"/uploads/d41dc10a23941adc81ffc2d62a89ac9f.png","domain":"2017spring","created_at":"2017-01-28T13:38:27.499Z","updated_at":"2017-02-13T15:59:18.209Z","tags":["開放資料","社群基礎建設","教育"],"finalist":false,"awarded":false,"followers":[{"_id":"588cc34d82223f001e0228a5","username":"Ching-Ting Wu","name":"Ching-Ting Wu","picture":"https://fb-s-c-a.akamaihd.net/h-ak-xap1/v/t1.0-1/p50x50/11403458_914702385219105_8549882794443895870_n.jpg?oh=ddf84a6c3f3f1a96abf04ce9fa8d494e&oe=59102CD3&__gda__=1495067619_4a0f10c8fb6c82833bd2a882b85ceafc","provider":"facebook","created_at":"2017-01-28T16:14:05.669Z","admin_in":[]},{"_id":"588ceb2282223f001e0228a8","username":"Meng-Ting Chung","name":"Meng-Ting Chung","picture":"https://fb-s-d-a.akamaihd.net/h-ak-xft1/v/t1.0-1/p50x50/11752603_932773346764579_1175645686568482175_n.jpg?oh=415a9afcb8a418e9dd6d8f0b6fdd1a1c&oe=59499944&__gda__=1493005398_685e610b2be36ea10e296c70eddf6502","provider":"facebook","created_at":"2017-01-28T19:04:02.079Z","admin_in":[]},{"_id":"588889d229941d001ebebee5","username":"Chung-Huey Wu","name":"Chung-Huey Wu","picture":"https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=50","provider":"google","created_at":"2017-01-25T11:19:46.352Z","admin_in":[]},{"_id":"586e429c6901c8001e1c6a0d","username":"kjohn01","name":"KJohn","picture":"https://avatars.githubusercontent.com/u/8452056?v=3","provider":"github","bio":"Hello world!","created_at":"2017-01-05T12:57:00.988Z","admin_in":[]},{"_id":"586b9ae6b46ada001e477f2f","username":"Willy Lan","name":"Willy Lan","picture":"https://fb-s-c-a.akamaihd.net/h-ak-fbx/v/t1.0-1/p50x50/14907661_1503780316305595_1636986440891099046_n.jpg?oh=36382618700767afd3f6035ea391d0fa&oe=5A077F8A&__gda__=1508634066_a346b8e7aeca3617eb2abfd5ea5014cf","provider":"facebook","bio":"目前是台大生醫電資所研究生，大學主修電子。曾經只在意如何有個溫拿人生，但於碩班擔任社會創新社幹部，在校園推廣社會創新的一年多，認識了許多為台灣各個社會議題在努力實踐的人們。 於是開始思考我的未來要如何跟這個社會產生連結？我可以拿幸運做什麼？\n\n而在去年聽了許多朋友辛酸的實習經驗，剛好想起一句話\n「改變世界不是一個人做了很多，而是每個人都做了一點點。」\n於是希望盡些心力使這些資訊透明化，在去年12月發起匿名的問卷調查“實習中肯資訊搜查”。\n\n目前正與朋友致力推動實習資訊的透明化，希冀讓台灣實習環境變得更好。\n\n","created_at":"2017-01-03T12:36:54.539Z","admin_in":[]},{"_id":"5895cc8417c6f6001e440f8f","username":"Eson Lai","name":"Eson Lai","picture":"https://fb-s-d-a.akamaihd.net/h-ak-xpt1/v/t1.0-1/p50x50/15319211_10209287373160450_8573630841364280138_n.jpg?oh=c5edda9846c1d854f2d194b57758f951&oe=591484D7&__gda__=1498174667_04b223ecb75bd8e1784ecee074ba7641","provider":"facebook","created_at":"2017-02-04T12:43:48.330Z","admin_in":[]},{"_id":"587d7e9aa4aa78002b650b5c","username":"Philip Chen","name":"Philip Chen","picture":"https://scontent.xx.fbcdn.net/v/t1.0-1/p50x50/14520428_10210812082523478_7188980639151325817_n.jpg?oh=8ac17564023091fc66354f398175f3b2&oe=5B10A588","provider":"facebook","created_at":"2017-01-17T02:16:58.902Z","admin_in":[]},{"_id":"58909be4725c74001e881875","username":"LucienLee","name":"Lucien Lee","picture":"https://avatars.githubusercontent.com/u/1758453?v=3","provider":"github","created_at":"2017-01-31T14:15:00.364Z","admin_in":[]},{"_id":"586a0e698891f3001ea69b01","username":"frankhu1089","name":"frankhu1089","picture":"https://avatars.githubusercontent.com/u/16701800?v=3","provider":"github","bio":"Hi Hi","created_at":"2017-01-02T08:25:13.015Z","admin_in":[]},{"_id":"58bd3551111ee6001edc6874","username":"superjk","name":"superjk","picture":"https://avatars2.githubusercontent.com/u/12201076?v=3","provider":"github","created_at":"2017-03-06T10:09:21.336Z","admin_in":[]}],"contributors":[{"_id":"586b2e2fb46ada001e477f2d","username":"junipertcy","name":"Tzu-Chi Yen","picture":"https://avatars.githubusercontent.com/u/8808414?v=3","provider":"github","bio":"顏子祺，台灣雲林人，大學讀生物，做過物理化學研究，也當過 Web 端的軟體工程師。目前在中國北京的中國科學院當「訪問工程師」，研究複雜網絡。翻譯了《網絡素養》一書，希望可以慢慢在台灣推廣網絡科學教育。\n網絡素養計畫：http://www.uwalks.info/networkliteracy.html\n個人網頁：http://www.junipertcy.info/","created_at":"2017-01-03T04:53:03.488Z","admin_in":[]}],"status":"brainstorming","revisions":[{"description":"# § 請以 80 ~ 120 字簡短地說明這個專案\n「跨界教育」在台灣是個比喻，但不是一個應用方法。該計畫將系統性的整理不同大學的課程數據，尤其各科系、課程、課綱的交互關係。我們主要的成果是一張課程地圖，在視覺上標注出特殊的知識關聯，並以數學及電腦科學方法分析該網絡，提供針對學生與教育工作者的數據接口。\n\n# § 你過去參與過什麼開源開發計畫（open source project）？\n\n1. `顏子祺`: [個人網頁](http://www.junipertcy.info/)、[GitHub](https://github.com/junipertcy)\n\t* 台北市道路施工的分析與視覺化: [DEMO](http://junipertcy.info.s3.amazonaws.com/data_taipei/index.html)\n\t* 紐約市噪音地圖: [GitHub](https://github.com/junipertcy/uwalk)\n\t* 網絡素養教育推廣計畫: [計畫網頁](http://www.uwalks.info/index.html)\n\n2. `林子耘`: [個人網頁](http://tweddielin.com/)、[GitHub](https://github.com/tweddielin)\n\t* 台北市道路施工的分析與視覺化: [DEMO](http://junipertcy.info.s3.amazonaws.com/data_taipei/index.html)\n\t* Open Skill API Workforce Data Initiative: [GitHub](https://github.com/workforce-data-initiative/skills-ml)\n\t* Police Early Intervention System: [GitHub](https://github.com/dssg/police-eis)\n\n\t[註]: 「台北市道路施工的分析與視覺化」是第一屆臺北市政府開放資料黑客松得獎作品。\n\t\n\n# § 這個計畫要解決什麼問題？\n\n該專案首要完成的事是「整合台灣的大學課程數據，提供可信賴、可直接應用的開放數據資源」。除了數據接口與知識網絡的展示外，我們會用整理過的數據，試著回答這些問題：\n\nQ-1. 某某系提供課程的核心價值是什麼？真的需要學生修這麼多課嗎？\n\nQ-2. 為什麼某些領域跨起來這麼簡單，有些就很難？是不是有些領域之間要相跨，就是「天然難」？\n\nQ-3. 我在中文系修過這些課。如果我想要當記者的話，我最好可以學習什麼課（知識）呢？應該不需要從大一的課開始學起吧？如果我想要增進「量化素養」呢，我可以做什麼？\n\nQ-4. 和這門課（或是這些知識）相近的課（或知識）有什麼呢？\n\n\n# § 你為什麼要做這個計劃 （ 個人動機 ）？\n個人（顏子祺）在台灣接受大學基本教育後，輾轉換了幾次工作，現在在中國從事和大學專業完全不同的軟體工程師工作。即便網路發達的現代，我們已經有了 MOOC, Coursera 等能遠程學習的工具，但是對想要換跑道的年輕求職者來說，該怎麼有效的獲取新知識，依然是困難的問題。我認為其中一個原因，是知識和工作的供需結構在近一二十年已經有很大的轉變；其中，有的領域變得更開放了，有些則變得更封閉了，而傳統我們認為的大學教育基本價值，可能已經過時。\n\n雖然教育的問題脈絡很複雜，我認為第一步是提供一個可信賴的、整理過的大學課程開放資料。這是許多教育應用的基礎建設，在中學或者大學的教育現場，甚至是迫切的需要。這可以幫助相關的討論更踏實、更能有數據支持。\n\n個人發起了[網絡素養教育推廣計畫](www.uwalks.info/networkliteracy.html)，並認為本計劃的問題能用結構化的網絡數據來幫助解決。另外，本專案的靈感，亦發想自兩個獨立的計畫：\n\n* [Hiroki Sayama 博士](http://bingweb.binghamton.edu/~sayama/)在 [NetSciEd5 會議](https://sites.google.com/a/binghamton.edu/netscied5)中的[報告](http://junipe.bitnamiapp.com/mediawiki/images/f/f0/NetSciEd5-sayama.pdf)\n* [MapEquation 網站](http://www.mapequation.org/)\n\n這兩個計畫說明用網絡的觀點看待課程數據的價值。\n\n# § 你預計用什麼方式解決此問題？\n我們希望建構 API，在`coursemap.net (暫定)`的域名下，提供中文世界的大學課程數據。其中，我們也會設計數據流，讓後端系統容易維護與延展。我們提供的數據包括：\n\n#### 課程相關數據：\n\nA-1. `GET` `/courses` `課程數據（可以分頁檢索）`\n\nA-2. `GET` `/courses/{_id}` `特定課程的數據`\n\nA-3. `GET` `/courses/{_id}/related_courses ` `特定課程的相關課程`\n\nA-4. `GET` `/courses/{_id}/related_terms` `特定課程的相關單詞`\n\nA-5. `GET` `/courses/{_id}/related_values` `特定課程的相關價值`\n\nA-6. `GET` `/courses/autocomplete` `自動補全和特定課程相關的資料`\n\n\n#### 關鍵詞相關數據：\n\nB-1. `GET` `/terms` `單詞的數據（可以分頁檢索）`\n\nB-2. `GET` `/terms/{_id}` `特定單詞的數據`\n\nB-3. `GET` `/terms/{_id}/related_terms` `特定單詞的相關單詞`\n\nB-4. `GET` `/terms/{_id}/related_courses` `特定單詞的相關課程`\n\nB-5. `GET` `/terms/autocomplete ` `自動補全和特定單詞相關的資料`\n\n#### 整合數據：\n\nC-1. `POST` `/courses?courses_taken=COURSES_TAKEN&target_values=TARGET_VALUES` `輸入已上過的課程，返回和特定領域相關的推薦課程`\n\nC-2. `POST` `/courses?courses_taken=COURSES_TAKEN&target_terms=TARGET_TERMS` `輸入已上過的課程，返回和特定關鍵詞相關的推薦課程`\n\nC-3. `GET` `/departments/{_id}/core_courses` `列出特定系所的核心課程`\n\nC-4. `GET` `/departments/{_id}/core_terms` `列出特定系所的核心關鍵詞`\n\nC-5. `GET` `/departments/{_id}/core_values` `列出特定系所的核心價值`\n\n#### 數據來源（暫定台灣五所大專院校）：\n\n1. [台大選課輔助程式](http://ntucourse.ericyu.org/)\n2. [清華大學課程網](https://www.ccxp.nthu.edu.tw/ccxp/INQUIRE/JH/6/6.2/6.2.9/JH629001.php)\n3. [交通大學課程網](http://timetable.nctu.edu.tw/)\n4. [成功大學課程網](http://course-query.acad.ncku.edu.tw/qry/)\n5. [政治大學課程網](http://wa.nccu.edu.tw/QryTor/Default.aspx?language=zh-TW)\n\n#### 工作流程與可能困難：\n \n    1. 從上述數據來源爬數據。\n > 我們已確認至少上述網站的內容皆能使用爬蟲爬下，惟有些網站需要驗證碼，將需要人工驗證，會困難些。另，每個網站都不一樣，我們需要訂製不同爬蟲的代碼。\n \n    2. 取得文字數據後，我們將數據去噪。\n\n> 這裡主要是自然語言處理。我們首先將中文與英文分開來，再來分別分詞。我們會用 [TF-IDF](https://en.wikipedia.org/wiki/Tf%E2%80%93idf) 分數篩選關鍵詞的權重。我們也會人工審視數據的可靠性。例如：人文科系的課程，可能只是討論某些文學作品，不一定能被分詞系統擷取出來，這時候會人為介入。\n\n    3. 去噪後，我們將分為三類數據存在 MongoDB 裡。分別是：\n       靜態數據（去噪後的基礎數據）、\n       關聯性數據（課程–課程的關聯等）、\n       應用類數據（經過演算法處理過的數據）。\n\n> 建立數據的關聯是本工作的重點，有三種方法可以建立數據的基本元素間的關聯。以化學系為例，化學系大一需要上普通化學、大二需要上有機化學。由於`有機`和`普化`都是化學系所開，且一先一後，因此這兩門課之間存在一條關聯。另外，有些課程如`生物化學`，可能在課綱中明白說明需要`先修有機`，這樣子的話，我們也可以在`生物化學`和`有機化學`之間建立關聯。除此之外，兩門課之間也可以因為具有同樣的關鍵詞而有聯繫。如`社會學`和`經濟學`都和`法律`相關，這樣子`社會學`和`經濟學`就能關聯起來。這中間存在數據稀疏的問題，我們會盡量人為介入去檢查「關聯足夠多」，有人為介入者會在數據中標記。\n\n    4. 存起來的數據，我們將使用 node.js 建立服務，讓用戶方便取用。\n\n#### 後端數據流設計：\n\n我們希望來自不同地方的課程數據，有可複用的數據處理流程。我們將使用 [Airflow](http://airbnb.io/projects/airflow/) 實作，這部份分為以下兩個要點：\n\n1. 我們將從各大課程網站爬下課程數據，我們會統一數據格式，以及定義資料內容（如：課程名稱、學校、老師、對象、大綱、要求、相關書目、人數、開課時間、地點等），將其存起來。其中課程大綱（若有）將保留原始文字檔。這部份將照顧到不同數據取用者的需求，且數據必須夠乾淨，使得未來的機器學習任務可以直接使用（機器學習任務不包括在本提案內容）。\n2. 針對不同的學校，我們設計專屬的數據存放標的。對於新的數據，我們可以更新它。\n\n#### 演算法設計：\n除了 A, B 兩類中規中矩的接口，我們會在 C 類整合數據接口中，提供經演算法處理後的數據。簡介如下：\n\n1. C-1 與 C-2: 當我們將課程與關鍵詞的結構建立好以後，便是一張網絡。問題的輸入是網絡裡特定區域的節點（修過的課/知識, `source`），以及一些特殊的節點（特殊的課, `target`）。我們將會直接從 `source` 往 `target` 搜索最短路徑，讓系統返為這條路徑上，離 `source` 最近的幾個節點。這將幫助回答上述 Q-3 的問題。\n2. C-3 到 C-5: 當課程網絡建立起來後，我們能在其上偵測社群結構（使用 [InfoMap](https://github.com/mapequation/infomap) 或 [Minimum Spanning Tree](https://en.wikipedia.org/wiki/Minimum_spanning_tree)）。這將幫助回答上述 Q-1 與 Q-2 的問題。\n\n這些算法雖然簡單，但我們可以在所作出的視覺化頁面中，檢視其合理性。\n\n# § 這個計畫的目標對象是誰？\n大學生、高中生與教育工作者。\n\n# § 這個計畫預計跟什麼團體合作？\n暫無。歡迎能直接提供以下數據的單位聯繫： (1) 學校課程數據 (2) 學生匿名後的修課記錄。\n\n# § 過去有作過相關主題的計畫嗎？\n1. `顏子祺`:\n\t* 使用 Node.js/Angular.js/MongoDB 建立 web app\n\t* 使用 D3.js/Linkurious.js 視覺化網絡\n\t* 使用 Python 分析社群網絡\n\n2. `林子耘`:\n\t* 使用 Flask/Postgres/React.js/D3.js 建立 web app\n\t* 使用 AirFlow/gensim/sci-kit learn 建立 Machine Learning Data Pipeline\n\t* 使用 theano、tensorflow 實作 deep neural net 相關應用\n\n3. 第三位工程師不願具名。其具 data mining 經驗，作過 Google 搜尋結果的大型爬蟲。\n\n# § 預計六個月內將花多少小時作這件事？需要多少經費？（30 萬到 50 萬）\n\n##### 系統維護（暫以一年估計）：\n1. AWS server（一年）：1000 * 6 + 2000（存放數據後） * 6 = 18000\n2. 域名（一年）：1000\n\n##### 人事（三人；第三人不願具名）：\n1. 演算法實現與接口設計\n2. 數據流架構, 網頁設計（包括維持服務、伺服器管理）\n3. 網頁爬蟲, 數據整理\n\n##### 時間分配：\n* 每週平均 36 小時開發，共 864 小時。\n* 平均一人一週 12 小時開發。以每日 8 小時計，約等於每人全職工作 1.8 個月。\n* 其中時間大致遵照上述人事任務分配；其餘用於社群協作、溝通等。\n\n##### 所需金額：46 萬。包括：\n* AWS 系統維護費用：2 萬\n* 人事費用（每人 13 萬 * 3 人）：39 萬\n* 其他（交通、接洽等雜支）：5 萬\n\n# § 打算如何讓社群參與以及回饋意見？\n\n我們會不定時的將成果展示在 coursemap.net 的網頁裡，並會創建一個 Slack 群組，在該群組內，我們參與大家的意見討論。\n\n# § 請說明專案結束時，會產出的開源軟體套件或開放授權文件（請條列個別元件的輸入輸出或其功能）？\n專案結束後，將提交三份開源軟體套件以及數據。軟體的使用說明以註釋為主，但也會附上獨立的說明，讓新工程師順利接手。產出內容分別是：\n\n1. CourseMap-service: 以 node.js 實作。主要包含上述所提示的 API。\n2. CourseMap-web: 以 angular.js 實作。包含 coursemap.net 的首頁展示，以及課程數據視覺化的頁面。此頁面將包含簡易交互，以能回答上述本計劃要解決的五大問題為主。\n3. CourseMap-utils: 以 Python 實作。包含網頁爬蟲、系統部屬等代碼，並會附上系統設計架構。\n4. Course network data: 提交的數據將會是 MongoDB 匯出的 json 檔。\n\n##### 授權：\n* 程式碼：MIT 授權\n* 課程數據、程式碼說明文件與介面設計：CC-By-4.0 授權\n\n# § 請自行定義計畫的工作里程碑與最後的驗收標準 （若沒有達成這些標準的話，我們會不給你錢喔！)\n\n##### 第一個月：\n*  訂好三大類數據（科系、課程、關鍵詞）的欄位\n*  開發爬蟲\n*  建立 coursemap.net 計畫網站（中文版）\n*  建立 aws 工作環境\n\n> 驗收項目：\n> (1) 數據欄位說明書 (包含數據間的關聯之說明);\n> (2) 工作資料流流程設計圖;\n> (3) 中文版的計畫網站。\n\n##### 第二與第三個月：\n* 使用爬蟲爬下數據（確保至少有五間學校的數據可以擷取出來）\n* 清洗數據（需要大量人工介入）\n* 儲存數據\n* coursemap.net 計畫網站加入了英文版\n* 確保從擷取數據到展示的工作流流暢\n\n> 驗收項目：\n> (1) 整理過的原始數據 (*.json, 可下載);\n> (2) 提出目前所收集數據的統計報告;\n> (3) 資料流的部屬代碼與文檔;\n> (4) 英文版的計畫網站。\n\n##### 第四個月（7/01 大黑客松期中報告）：\n*  完成 A 類與 B 類的接口\n*  能用靜態代碼完成 C 類的整合數據的運算\n*  完成一張視覺化的頁面，說明數據間的關聯\n*  以網站為主，投影片為輔，能在期中報告展示。\n\n> 驗收項目：\n> (1) 完成 A 類與 B 類的接口;\n> (2) 完成一張課程網絡視覺化且可交互的頁面 (包括 C 類數據的結果);\n> (3) 較完整的計畫網站。\n\n##### 第五與六個月：\n*  完成上述的 A, B, C 類所有接口\n*  完善說明書\n*  完善網站\n\n> 驗收項目：\n> (1) 完成 A – C 類的接口;\n> (2) 完成三類程式碼的說明書;\n> (3) 完整的計畫網站（網站將會包括：`回報錯誤`的功能）。\n\n\n# § 未來可能進一步的發展？\n\n我們認為本專案的核心在於整理數據，讓數據的質和量都能達到可直接應用的目標。數據和接口處理完成後，有以下應用：\n\n1. 製作機器學習算法，配合`職缺數據`，用來推薦學生課程（推薦取向：想發展那方面的能力？想從事哪方面的工作？），變成一個獨立的工具。這或許可以改善台灣的大學教育與就業市場學用落差的問題。\n2. 獨立做成網頁服務，收集使用者數據。這些數據也是開放資料的基礎。服務場景如：已經當上社工的學長姐們，他們在大學的時候修過什麼課呢？財金系的熱門修課路徑是什麼？\n3. 教育工作者研究使用。\n\n# § 本計畫目前是否已有、或正在申請其他的資金來源？若有，請說明申請本獎助的內容與原計畫的差異。\n無。\n\n# § 若有專案介紹的投影片，請提供：\n預計 2/3 前上傳更新。將撰寫 10 – 20 頁的投影片，介紹 (1) 專案目標 (2) 動機 (3) 執行人簡介 (4) 執行方法等。","timestamp":"2017-01-28T13:39:30.916Z","_id":"588c9f12b5b9f6001e24c8a9"},{"description":"# § 請以 80 ~ 120 字簡短地說明這個專案\n「跨界教育」在台灣是個比喻，但不是一個應用方法。該計畫將系統性的整理不同大學的課程數據，尤其各科系、課程、課綱的交互關係。我們主要的成果是一張課程地圖，在視覺上標注出特殊的知識關聯，並以數學及電腦科學方法分析該網絡，提供針對學生與教育工作者的數據接口。\n\n# § 你過去參與過什麼開源開發計畫（open source project）？\n\n1. `顏子祺`: [個人網頁](http://www.junipertcy.info/)、[GitHub](https://github.com/junipertcy)\n\t* 台北市道路施工的分析與視覺化: [DEMO](http://junipertcy.info.s3.amazonaws.com/data_taipei/index.html)\n\t* 紐約市噪音地圖: [GitHub](https://github.com/junipertcy/uwalk)\n\t* 網絡素養教育推廣計畫: [計畫網頁](http://www.uwalks.info/index.html)\n\n2. `林子耘`: [個人網頁](http://tweddielin.com/)、[GitHub](https://github.com/tweddielin)\n\t* 台北市道路施工的分析與視覺化: [DEMO](http://junipertcy.info.s3.amazonaws.com/data_taipei/index.html)\n\t* Open Skill API Workforce Data Initiative: [GitHub](https://github.com/workforce-data-initiative/skills-ml)\n\t* Police Early Intervention System: [GitHub](https://github.com/dssg/police-eis)\n\n\t[註]: 「台北市道路施工的分析與視覺化」是第一屆臺北市政府開放資料黑客松得獎作品。\n\t\n\n# § 這個計畫要解決什麼問題？\n\n該專案首要完成的事是「整合台灣的大學課程數據，提供可信賴、可直接應用的開放數據資源」。除了數據接口與知識網絡的展示外，我們會用整理過的數據，試著回答這些問題：\n\nQ-1. 某某系提供課程的核心價值是什麼？真的需要學生修這麼多課嗎？\n\nQ-2. 為什麼某些領域跨起來這麼簡單，有些就很難？是不是有些領域之間要相跨，就是「天然難」？\n\nQ-3. 我在中文系修過這些課。如果我想要當記者的話，我最好可以學習什麼課（知識）呢？應該不需要從大一的課開始學起吧？如果我想要增進「量化素養」呢，我可以做什麼？\n\nQ-4. 和這門課（或是這些知識）相近的課（或知識）有什麼呢？\n\n\n# § 你為什麼要做這個計劃 （ 個人動機 ）？\n個人（顏子祺）在台灣接受大學基本教育後，輾轉換了幾次工作，現在在中國從事和大學專業完全不同的軟體工程師工作。即便網路發達的現代，我們已經有了 MOOC, Coursera 等能遠程學習的工具，但是對想要換跑道的年輕求職者來說，該怎麼有效的獲取新知識，依然是困難的問題。我認為其中一個原因，是知識和工作的供需結構在近一二十年已經有很大的轉變；其中，有的領域變得更開放了，有些則變得更封閉了，而傳統我們認為的大學教育基本價值，可能已經過時。\n\n雖然教育的問題脈絡很複雜，我認為第一步是提供一個可信賴的、整理過的大學課程開放資料。這是許多教育應用的基礎建設，在中學或者大學的教育現場，甚至是迫切的需要。這可以幫助相關的討論更踏實、更能有數據支持。\n\n個人發起了[網絡素養教育推廣計畫](www.uwalks.info/networkliteracy.html)，並認為本計劃的問題能用結構化的網絡數據來幫助解決。另外，本專案的靈感，亦發想自兩個獨立的計畫：\n\n* [Hiroki Sayama 博士](http://bingweb.binghamton.edu/~sayama/)在 [NetSciEd5 會議](https://sites.google.com/a/binghamton.edu/netscied5)中的[報告](http://junipe.bitnamiapp.com/mediawiki/images/f/f0/NetSciEd5-sayama.pdf)\n* [MapEquation 網站](http://www.mapequation.org/)\n\n這兩個計畫說明用網絡的觀點看待課程數據的價值。\n\n# § 你預計用什麼方式解決此問題？\n我們希望建構 API，在`coursemap.net (暫定)`的域名下，提供中文世界的大學課程數據。其中，我們也會設計數據流，讓後端系統容易維護與延展。我們提供的數據包括：\n\n#### 課程相關數據：\n\nA-1. `GET` `/courses` `課程數據（可以分頁檢索）`\n\nA-2. `GET` `/courses/{_id}` `特定課程的數據`\n\nA-3. `GET` `/courses/{_id}/related_courses ` `特定課程的相關課程`\n\nA-4. `GET` `/courses/{_id}/related_terms` `特定課程的相關單詞`\n\nA-5. `GET` `/courses/{_id}/related_values` `特定課程的相關價值`\n\nA-6. `GET` `/courses/autocomplete` `自動補全和特定課程相關的資料`\n\n\n#### 關鍵詞相關數據：\n\nB-1. `GET` `/terms` `單詞的數據（可以分頁檢索）`\n\nB-2. `GET` `/terms/{_id}` `特定單詞的數據`\n\nB-3. `GET` `/terms/{_id}/related_terms` `特定單詞的相關單詞`\n\nB-4. `GET` `/terms/{_id}/related_courses` `特定單詞的相關課程`\n\nB-5. `GET` `/terms/autocomplete ` `自動補全和特定單詞相關的資料`\n\n#### 整合數據：\n\nC-1. `POST` `/courses?courses_taken=COURSES_TAKEN&target_values=TARGET_VALUES` `輸入已上過的課程，返回和特定領域相關的推薦課程`\n\nC-2. `POST` `/courses?courses_taken=COURSES_TAKEN&target_terms=TARGET_TERMS` `輸入已上過的課程，返回和特定關鍵詞相關的推薦課程`\n\nC-3. `GET` `/departments/{_id}/core_courses` `列出特定系所的核心課程`\n\nC-4. `GET` `/departments/{_id}/core_terms` `列出特定系所的核心關鍵詞`\n\nC-5. `GET` `/departments/{_id}/core_values` `列出特定系所的核心價值`\n\n#### 數據來源（暫定台灣五所大專院校）：\n\n1. [台大選課輔助程式](http://ntucourse.ericyu.org/)\n2. [清華大學課程網](https://www.ccxp.nthu.edu.tw/ccxp/INQUIRE/JH/6/6.2/6.2.9/JH629001.php)\n3. [交通大學課程網](http://timetable.nctu.edu.tw/)\n4. [成功大學課程網](http://course-query.acad.ncku.edu.tw/qry/)\n5. [政治大學課程網](http://wa.nccu.edu.tw/QryTor/Default.aspx?language=zh-TW)\n\n#### 工作流程與可能困難：\n \n    1. 從上述數據來源爬數據。\n\n> 我們已確認至少上述網站的內容皆能使用爬蟲爬下，惟有些網站需要驗證碼，將需要人工驗證，會困難些。另，每個網站都不一樣，我們需要訂製不同爬蟲的代碼。\n \n    2. 取得文字數據後，我們將數據去噪。\n\n> 這裡主要是自然語言處理。我們首先將中文與英文分開來，再來分別分詞。我們會用 [TF-IDF](https://en.wikipedia.org/wiki/Tf%E2%80%93idf) 分數篩選關鍵詞的權重。我們也會人工審視數據的可靠性。例如：人文科系的課程，可能只是討論某些文學作品，不一定能被分詞系統擷取出來，這時候會人為介入。\n\n    3. 去噪後，我們將分為三類數據存在 MongoDB 裡。分別是：\n       靜態數據（去噪後的基礎數據）、\n       關聯性數據（課程–課程的關聯等）、\n       應用類數據（經過演算法處理過的數據）。\n\n> 建立數據的關聯是本工作的重點，有三種方法可以建立數據的基本元素間的關聯。以化學系為例，化學系大一需要上普通化學、大二需要上有機化學。由於`有機`和`普化`都是化學系所開，且一先一後，因此這兩門課之間存在一條關聯。另外，有些課程如`生物化學`，可能在課綱中明白說明需要`先修有機`，這樣子的話，我們也可以在`生物化學`和`有機化學`之間建立關聯。除此之外，兩門課之間也可以因為具有同樣的關鍵詞而有聯繫。如`社會學`和`經濟學`都和`法律`相關，這樣子`社會學`和`經濟學`就能關聯起來。這中間存在數據稀疏的問題，我們會盡量人為介入去檢查「關聯足夠多」，有人為介入者會在數據中標記。\n\n    4. 存起來的數據，我們將使用 node.js 建立服務，讓用戶方便取用。\n\n#### 後端數據流設計：\n\n我們希望來自不同地方的課程數據，有可複用的數據處理流程。我們將使用 [Airflow](http://airbnb.io/projects/airflow/) 實作，這部份分為以下兩個要點：\n\n1. 我們將從各大課程網站爬下課程數據，我們會統一數據格式，以及定義資料內容（如：課程名稱、學校、老師、對象、大綱、要求、相關書目、人數、開課時間、地點等），將其存起來。其中課程大綱（若有）將保留原始文字檔。這部份將照顧到不同數據取用者的需求，且數據必須夠乾淨，使得未來的機器學習任務可以直接使用（機器學習任務不包括在本提案內容）。\n2. 針對不同的學校，我們設計專屬的數據存放標的。對於新的數據，我們可以更新它。\n\n#### 演算法設計：\n除了 A, B 兩類中規中矩的接口，我們會在 C 類整合數據接口中，提供經演算法處理後的數據。簡介如下：\n\n1. C-1 與 C-2: 當我們將課程與關鍵詞的結構建立好以後，便是一張網絡。問題的輸入是網絡裡特定區域的節點（修過的課/知識, `source`），以及一些特殊的節點（特殊的課, `target`）。我們將會直接從 `source` 往 `target` 搜索最短路徑，讓系統返為這條路徑上，離 `source` 最近的幾個節點。這將幫助回答上述 Q-3 的問題。\n2. C-3 到 C-5: 當課程網絡建立起來後，我們能在其上偵測社群結構（使用 [InfoMap](https://github.com/mapequation/infomap) 或 [Minimum Spanning Tree](https://en.wikipedia.org/wiki/Minimum_spanning_tree)）。這將幫助回答上述 Q-1 與 Q-2 的問題。\n\n這些算法雖然簡單，但我們可以在所作出的視覺化頁面中，檢視其合理性。\n\n# § 這個計畫的目標對象是誰？\n大學生、高中生與教育工作者。\n\n# § 這個計畫預計跟什麼團體合作？\n暫無。歡迎能直接提供以下數據的單位聯繫： (1) 學校課程數據 (2) 學生匿名後的修課記錄。\n\n# § 過去有作過相關主題的計畫嗎？\n1. `顏子祺`:\n\t* 使用 Node.js/Angular.js/MongoDB 建立 web app\n\t* 使用 D3.js/Linkurious.js 視覺化網絡\n\t* 使用 Python 分析社群網絡\n\n2. `林子耘`:\n\t* 使用 Flask/Postgres/React.js/D3.js 建立 web app\n\t* 使用 AirFlow/gensim/sci-kit learn 建立 Machine Learning Data Pipeline\n\t* 使用 theano、tensorflow 實作 deep neural net 相關應用\n\n3. 第三位工程師不願具名。其具 data mining 經驗，作過 Google 搜尋結果的大型爬蟲。\n\n# § 預計六個月內將花多少小時作這件事？需要多少經費？（30 萬到 50 萬）\n\n##### 系統維護（暫以一年估計）：\n1. AWS server（一年）：1000 * 6 + 2000（存放數據後） * 6 = 18000\n2. 域名（一年）：1000\n\n##### 人事（三人；第三人不願具名）：\n1. 演算法實現與接口設計\n2. 數據流架構, 網頁設計（包括維持服務、伺服器管理）\n3. 網頁爬蟲, 數據整理\n\n##### 時間分配：\n* 每週平均 36 小時開發，共 864 小時。\n* 平均一人一週 12 小時開發。以每日 8 小時計，約等於每人全職工作 1.8 個月。\n* 其中時間大致遵照上述人事任務分配；其餘用於社群協作、溝通等。\n\n##### 所需金額：46 萬。包括：\n* AWS 系統維護費用：2 萬\n* 人事費用（每人 13 萬 * 3 人）：39 萬\n* 其他（交通、接洽等雜支）：5 萬\n\n# § 打算如何讓社群參與以及回饋意見？\n\n我們會不定時的將成果展示在 coursemap.net 的網頁裡，並會創建一個 Slack 群組，在該群組內，我們參與大家的意見討論。\n\n# § 請說明專案結束時，會產出的開源軟體套件或開放授權文件（請條列個別元件的輸入輸出或其功能）？\n專案結束後，將提交三份開源軟體套件以及數據。軟體的使用說明以註釋為主，但也會附上獨立的說明，讓新工程師順利接手。產出內容分別是：\n\n1. CourseMap-service: 以 node.js 實作。主要包含上述所提示的 API。\n2. CourseMap-web: 以 angular.js 實作。包含 coursemap.net 的首頁展示，以及課程數據視覺化的頁面。此頁面將包含簡易交互，以能回答上述本計劃要解決的五大問題為主。\n3. CourseMap-utils: 以 Python 實作。包含網頁爬蟲、系統部屬等代碼，並會附上系統設計架構。\n4. Course network data: 提交的數據將會是 MongoDB 匯出的 json 檔。\n\n##### 授權：\n* 程式碼：MIT 授權\n* 課程數據、程式碼說明文件與介面設計：CC-By-4.0 授權\n\n# § 請自行定義計畫的工作里程碑與最後的驗收標準 （若沒有達成這些標準的話，我們會不給你錢喔！)\n\n##### 第一個月：\n*  訂好三大類數據（科系、課程、關鍵詞）的欄位\n*  開發爬蟲\n*  建立 coursemap.net 計畫網站（中文版）\n*  建立 aws 工作環境\n\n> 驗收項目：\n> (1) 數據欄位說明書 (包含數據間的關聯之說明);\n> (2) 工作資料流流程設計圖;\n> (3) 中文版的計畫網站。\n\n##### 第二與第三個月：\n* 使用爬蟲爬下數據（確保至少有五間學校的數據可以擷取出來）\n* 清洗數據（需要大量人工介入）\n* 儲存數據\n* coursemap.net 計畫網站加入了英文版\n* 確保從擷取數據到展示的工作流流暢\n\n> 驗收項目：\n> (1) 整理過的原始數據 (*.json, 可下載);\n> (2) 提出目前所收集數據的統計報告;\n> (3) 資料流的部屬代碼與文檔;\n> (4) 英文版的計畫網站。\n\n##### 第四個月（7/01 大黑客松期中報告）：\n*  完成 A 類與 B 類的接口\n*  能用靜態代碼完成 C 類的整合數據的運算\n*  完成一張視覺化的頁面，說明數據間的關聯\n*  以網站為主，投影片為輔，能在期中報告展示。\n\n> 驗收項目：\n> (1) 完成 A 類與 B 類的接口;\n> (2) 完成一張課程網絡視覺化且可交互的頁面 (包括 C 類數據的結果);\n> (3) 較完整的計畫網站。\n\n##### 第五與六個月：\n*  完成上述的 A, B, C 類所有接口\n*  完善說明書\n*  完善網站\n\n> 驗收項目：\n> (1) 完成 A – C 類的接口;\n> (2) 完成三類程式碼的說明書;\n> (3) 完整的計畫網站（網站將會包括：`回報錯誤`的功能）。\n\n\n# § 未來可能進一步的發展？\n\n我們認為本專案的核心在於整理數據，讓數據的質和量都能達到可直接應用的目標。數據和接口處理完成後，有以下應用：\n\n1. 製作機器學習算法，配合`職缺數據`，用來推薦學生課程（推薦取向：想發展那方面的能力？想從事哪方面的工作？），變成一個獨立的工具。這或許可以改善台灣的大學教育與就業市場學用落差的問題。\n2. 獨立做成網頁服務，收集使用者數據。這些數據也是開放資料的基礎。服務場景如：已經當上社工的學長姐們，他們在大學的時候修過什麼課呢？財金系的熱門修課路徑是什麼？\n3. 教育工作者研究使用。\n\n# § 本計畫目前是否已有、或正在申請其他的資金來源？若有，請說明申請本獎助的內容與原計畫的差異。\n無。\n\n# § 若有專案介紹的投影片，請提供：\n預計 2/3 前上傳更新。將撰寫 10 – 20 頁的投影片，介紹 (1) 專案目標 (2) 動機 (3) 執行人簡介 (4) 執行方法等。","timestamp":"2017-01-28T13:48:11.009Z","_id":"588ca11bb5b9f6001e24c8aa"},{"description":"# § 請以 80 ~ 120 字簡短地說明這個專案\n「跨界教育」在台灣是個比喻，但不是一個應用方法。該計畫將系統性的整理不同大學的課程數據，尤其各科系、課程、課綱的交互關係。我們主要的成果是一張課程地圖，在視覺上標注出特殊的知識關聯，並以數學及電腦科學方法分析該網絡，提供針對學生與教育工作者的數據接口。\n\n# § 你過去參與過什麼開源開發計畫（open source project）？\n\n1. `顏子祺`: [個人網頁](http://www.junipertcy.info/)、[GitHub](https://github.com/junipertcy)\n        * 台北市道路施工的分析與視覺化: [DEMO](http://junipertcy.info.s3.amazonaws.com/data_taipei/index.html)\n        * 紐約市噪音地圖: [GitHub](https://github.com/junipertcy/uwalk)\n        * 網絡素養教育推廣計畫: [計畫網頁](http://www.uwalks.info/index.html)\n\n2. `林子耘`: [個人網頁](http://tweddielin.com/)、[GitHub](https://github.com/tweddielin)\n        * 台北市道路施工的分析與視覺化: [DEMO](http://junipertcy.info.s3.amazonaws.com/data_taipei/index.html)\n        * Open Skill API Workforce Data Initiative: [GitHub](https://github.com/workforce-data-initiative/skills-ml)\n        * Police Early Intervention System: [GitHub](https://github.com/dssg/police-eis)\n\n\t[註]: 「台北市道路施工的分析與視覺化」是第一屆臺北市政府開放資料黑客松得獎作品。\n\t\n\n# § 這個計畫要解決什麼問題？\n\n該專案首要完成的事是「整合台灣的大學課程數據，提供可信賴、可直接應用的開放數據資源」。除了數據接口與知識網絡的展示外，我們會用整理過的數據，試著回答這些問題：\n\nQ-1. 某某系提供課程的核心價值是什麼？真的需要學生修這麼多課嗎？\n\nQ-2. 為什麼某些領域跨起來這麼簡單，有些就很難？是不是有些領域之間要相跨，就是「天然難」？\n\nQ-3. 我在中文系修過這些課。如果我想要當記者的話，我最好可以學習什麼課（知識）呢？應該不需要從大一的課開始學起吧？如果我想要增進「量化素養」呢，我可以做什麼？\n\nQ-4. 和這門課（或是這些知識）相近的課（或知識）有什麼呢？\n\n\n# § 你為什麼要做這個計劃 （ 個人動機 ）？\n個人（顏子祺）在台灣接受大學基本教育後，輾轉換了幾次工作，現在在中國從事和大學專業完全不同的軟體工程師工作。即便網路發達的現代，我們已經有了 MOOC, Coursera 等能遠程學習的工具，但是對想要換跑道的年輕求職者來說，該怎麼有效的獲取新知識，依然是困難的問題。我認為其中一個原因，是知識和工作的供需結構在近一二十年已經有很大的轉變；其中，有的領域變得更開放了，有些則變得更封閉了，而傳統我們認為的大學教育基本價值，可能已經過時。\n\n雖然教育的問題脈絡很複雜，我認為第一步是提供一個可信賴的、整理過的大學課程開放資料。這是許多教育應用的基礎建設，在中學或者大學的教育現場，甚至是迫切的需要。這可以幫助相關的討論更踏實、更能有數據支持。\n\n個人發起了[網絡素養教育推廣計畫](www.uwalks.info/networkliteracy.html)，並認為本計劃的問題能用結構化的網絡數據來幫助解決。另外，本專案的靈感，亦發想自兩個獨立的計畫：\n\n* [Hiroki Sayama 博士](http://bingweb.binghamton.edu/~sayama/)在 [NetSciEd5 會議](https://sites.google.com/a/binghamton.edu/netscied5)中的[報告](http://junipe.bitnamiapp.com/mediawiki/images/f/f0/NetSciEd5-sayama.pdf)\n* [MapEquation 網站](http://www.mapequation.org/)\n\n這兩個計畫說明用網絡的觀點看待課程數據的價值。\n\n# § 你預計用什麼方式解決此問題？\n我們希望建構 API，在`coursemap.net (暫定)`的域名下，提供中文世界的大學課程數據。其中，我們也會設計數據流，讓後端系統容易維護與延展。我們提供的數據包括：\n\n#### 課程相關數據：\n\nA-1. `GET` `/courses` `課程數據（可以分頁檢索）`\n\nA-2. `GET` `/courses/{_id}` `特定課程的數據`\n\nA-3. `GET` `/courses/{_id}/related_courses ` `特定課程的相關課程`\n\nA-4. `GET` `/courses/{_id}/related_terms` `特定課程的相關單詞`\n\nA-5. `GET` `/courses/{_id}/related_values` `特定課程的相關價值`\n\nA-6. `GET` `/courses/autocomplete` `自動補全和特定課程相關的資料`\n\n\n#### 關鍵詞相關數據：\n\nB-1. `GET` `/terms` `單詞的數據（可以分頁檢索）`\n\nB-2. `GET` `/terms/{_id}` `特定單詞的數據`\n\nB-3. `GET` `/terms/{_id}/related_terms` `特定單詞的相關單詞`\n\nB-4. `GET` `/terms/{_id}/related_courses` `特定單詞的相關課程`\n\nB-5. `GET` `/terms/autocomplete ` `自動補全和特定單詞相關的資料`\n\n#### 整合數據：\n\nC-1. `POST` `/courses?courses_taken=COURSES_TAKEN&target_values=TARGET_VALUES` `輸入已上過的課程，返回和特定領域相關的推薦課程`\n\nC-2. `POST` `/courses?courses_taken=COURSES_TAKEN&target_terms=TARGET_TERMS` `輸入已上過的課程，返回和特定關鍵詞相關的推薦課程`\n\nC-3. `GET` `/departments/{_id}/core_courses` `列出特定系所的核心課程`\n\nC-4. `GET` `/departments/{_id}/core_terms` `列出特定系所的核心關鍵詞`\n\nC-5. `GET` `/departments/{_id}/core_values` `列出特定系所的核心價值`\n\n#### 數據來源（暫定台灣五所大專院校）：\n\n1. [台大選課輔助程式](http://ntucourse.ericyu.org/)\n2. [清華大學課程網](https://www.ccxp.nthu.edu.tw/ccxp/INQUIRE/JH/6/6.2/6.2.9/JH629001.php)\n3. [交通大學課程網](http://timetable.nctu.edu.tw/)\n4. [成功大學課程網](http://course-query.acad.ncku.edu.tw/qry/)\n5. [政治大學課程網](http://wa.nccu.edu.tw/QryTor/Default.aspx?language=zh-TW)\n\n#### 工作流程與可能困難：\n \n    1. 從上述數據來源爬數據。\n\n> 我們已確認至少上述網站的內容皆能使用爬蟲爬下，惟有些網站需要驗證碼，將需要人工驗證，會困難些。另，每個網站都不一樣，我們需要訂製不同爬蟲的代碼。\n \n    2. 取得文字數據後，我們將數據去噪。\n\n> 這裡主要是自然語言處理。我們首先將中文與英文分開來，再來分別分詞。我們會用 [TF-IDF](https://en.wikipedia.org/wiki/Tf%E2%80%93idf) 分數篩選關鍵詞的權重。我們也會人工審視數據的可靠性。例如：人文科系的課程，可能只是討論某些文學作品，不一定能被分詞系統擷取出來，這時候會人為介入。\n\n    3. 去噪後，我們將分為三類數據存在 MongoDB 裡。分別是：\n       靜態數據（去噪後的基礎數據）、\n       關聯性數據（課程–課程的關聯等）、\n       應用類數據（經過演算法處理過的數據）。\n\n> 建立數據的關聯是本工作的重點，有三種方法可以建立數據的基本元素間的關聯。以化學系為例，化學系大一需要上普通化學、大二需要上有機化學。由於`有機`和`普化`都是化學系所開，且一先一後，因此這兩門課之間存在一條關聯。另外，有些課程如`生物化學`，可能在課綱中明白說明需要`先修有機`，這樣子的話，我們也可以在`生物化學`和`有機化學`之間建立關聯。除此之外，兩門課之間也可以因為具有同樣的關鍵詞而有聯繫。如`社會學`和`經濟學`都和`法律`相關，這樣子`社會學`和`經濟學`就能關聯起來。這中間存在數據稀疏的問題，我們會盡量人為介入去檢查「關聯足夠多」，有人為介入者會在數據中標記。\n\n    4. 存起來的數據，我們將使用 node.js 建立服務，讓用戶方便取用。\n\n#### 後端數據流設計：\n\n我們希望來自不同地方的課程數據，有可複用的數據處理流程。我們將使用 [Airflow](http://airbnb.io/projects/airflow/) 實作，這部份分為以下兩個要點：\n\n1. 我們將從各大課程網站爬下課程數據，我們會統一數據格式，以及定義資料內容（如：課程名稱、學校、老師、對象、大綱、要求、相關書目、人數、開課時間、地點等），將其存起來。其中課程大綱（若有）將保留原始文字檔。這部份將照顧到不同數據取用者的需求，且數據必須夠乾淨，使得未來的機器學習任務可以直接使用（機器學習任務不包括在本提案內容）。\n2. 針對不同的學校，我們設計專屬的數據存放標的。對於新的數據，我們可以更新它。\n\n#### 演算法設計：\n除了 A, B 兩類中規中矩的接口，我們會在 C 類整合數據接口中，提供經演算法處理後的數據。簡介如下：\n\n1. C-1 與 C-2: 當我們將課程與關鍵詞的結構建立好以後，便是一張網絡。問題的輸入是網絡裡特定區域的節點（修過的課/知識, `source`），以及一些特殊的節點（特殊的課, `target`）。我們將會直接從 `source` 往 `target` 搜索最短路徑，讓系統返為這條路徑上，離 `source` 最近的幾個節點。這將幫助回答上述 Q-3 的問題。\n2. C-3 到 C-5: 當課程網絡建立起來後，我們能在其上偵測社群結構（使用 [InfoMap](https://github.com/mapequation/infomap) 或 [Minimum Spanning Tree](https://en.wikipedia.org/wiki/Minimum_spanning_tree)）。這將幫助回答上述 Q-1 與 Q-2 的問題。\n\n這些算法雖然簡單，但我們可以在所作出的視覺化頁面中，檢視其合理性。\n\n# § 這個計畫的目標對象是誰？\n大學生、高中生與教育工作者。\n\n# § 這個計畫預計跟什麼團體合作？\n暫無。歡迎能直接提供以下數據的單位聯繫： (1) 學校課程數據 (2) 學生匿名後的修課記錄。\n\n# § 過去有作過相關主題的計畫嗎？\n1. `顏子祺`:\n        * 使用 Node.js/Angular.js/MongoDB 建立 web app\n        * 使用 D3.js/Linkurious.js 視覺化網絡\n        * 使用 Python 分析社群網絡\n\n2. `林子耘`:\n        * 使用 Flask/Postgres/React.js/D3.js 建立 web app\n        * 使用 AirFlow/gensim/sci-kit learn 建立 Machine Learning Data Pipeline\n        * 使用 theano、tensorflow 實作 deep neural net 相關應用\n\n3. 第三位工程師不願具名。其具 data mining 經驗，作過 Google 搜尋結果的大型爬蟲。\n\n# § 預計六個月內將花多少小時作這件事？需要多少經費？（30 萬到 50 萬）\n\n##### 系統維護（暫以一年估計）：\n1. AWS server（一年）：1000*6 + 2000（存放數據後）*6 = 18000\n2. 域名（一年）：1000\n\n##### 人事（三人；第三人不願具名）：\n1. 演算法實現與接口設計\n2. 數據流架構, 網頁設計（包括維持服務、伺服器管理）\n3. 網頁爬蟲, 數據整理\n\n##### 時間分配：\n* 每週平均 36 小時開發，共 864 小時。\n* 平均一人一週 12 小時開發。以每日 8 小時計，約等於每人全職工作 1.8 個月。\n* 其中時間大致遵照上述人事任務分配；其餘用於社群協作、溝通等。\n\n##### 所需金額：46 萬。包括：\n* AWS 系統維護費用：2 萬\n* 人事費用（每人 13 萬 * 3 人）：39 萬\n* 其他（交通、接洽等雜支）：5 萬\n\n# § 打算如何讓社群參與以及回饋意見？\n\n我們會不定時的將成果展示在 coursemap.net 的網頁裡，並會創建一個 Slack 群組，在該群組內，我們參與大家的意見討論。\n\n# § 請說明專案結束時，會產出的開源軟體套件或開放授權文件（請條列個別元件的輸入輸出或其功能）？\n專案結束後，將提交三份開源軟體套件以及數據。軟體的使用說明以註釋為主，但也會附上獨立的說明，讓新工程師順利接手。產出內容分別是：\n\n1. CourseMap-service: 以 node.js 實作。主要包含上述所提示的 API。\n2. CourseMap-web: 以 angular.js 實作。包含 coursemap.net 的首頁展示，以及課程數據視覺化的頁面。此頁面將包含簡易交互，以能回答上述本計劃要解決的五大問題為主。\n3. CourseMap-utils: 以 Python 實作。包含網頁爬蟲、系統部屬等代碼，並會附上系統設計架構。\n4. Course network data: 提交的數據將會是 MongoDB 匯出的 json 檔。\n\n##### 授權：\n* 程式碼：MIT 授權\n* 課程數據、程式碼說明文件與介面設計：CC-By-4.0 授權\n\n# § 請自行定義計畫的工作里程碑與最後的驗收標準 （若沒有達成這些標準的話，我們會不給你錢喔！)\n\n##### 第一個月：\n*  訂好三大類數據（科系、課程、關鍵詞）的欄位\n*  開發爬蟲\n*  建立 coursemap.net 計畫網站（中文版）\n*  建立 aws 工作環境\n\n> 驗收項目：\n> (1) 數據欄位說明書 (包含數據間的關聯之說明);\n> (2) 工作資料流流程設計圖;\n> (3) 中文版的計畫網站。\n\n##### 第二與第三個月：\n* 使用爬蟲爬下數據（確保至少有五間學校的數據可以擷取出來）\n* 清洗數據（需要大量人工介入）\n* 儲存數據\n* coursemap.net 計畫網站加入了英文版\n* 確保從擷取數據到展示的工作流流暢\n\n> 驗收項目：\n> (1) 整理過的原始數據 (*.json, 可下載);\n> (2) 提出目前所收集數據的統計報告;\n> (3) 資料流的部屬代碼與文檔;\n> (4) 英文版的計畫網站。\n\n##### 第四個月（7/01 大黑客松期中報告）：\n*  完成 A 類與 B 類的接口\n*  能用靜態代碼完成 C 類的整合數據的運算\n*  完成一張視覺化的頁面，說明數據間的關聯\n*  以網站為主，投影片為輔，能在期中報告展示。\n\n> 驗收項目：\n> (1) 完成 A 類與 B 類的接口;\n> (2) 完成一張課程網絡視覺化且可交互的頁面 (包括 C 類數據的結果);\n> (3) 較完整的計畫網站。\n\n##### 第五與六個月：\n*  完成上述的 A, B, C 類所有接口\n*  完善說明書\n*  完善網站\n\n> 驗收項目：\n> (1) 完成 A – C 類的接口;\n> (2) 完成三類程式碼的說明書;\n> (3) 完整的計畫網站（網站將會包括：`回報錯誤`的功能）。\n\n\n# § 未來可能進一步的發展？\n\n我們認為本專案的核心在於整理數據，讓數據的質和量都能達到可直接應用的目標。數據和接口處理完成後，有以下應用：\n\n1. 製作機器學習算法，配合`職缺數據`，用來推薦學生課程（推薦取向：想發展那方面的能力？想從事哪方面的工作？），變成一個獨立的工具。這或許可以改善台灣的大學教育與就業市場學用落差的問題。\n2. 獨立做成網頁服務，收集使用者數據。這些數據也是開放資料的基礎。服務場景如：已經當上社工的學長姐們，他們在大學的時候修過什麼課呢？財金系的熱門修課路徑是什麼？\n3. 教育工作者研究使用。\n\n# § 本計畫目前是否已有、或正在申請其他的資金來源？若有，請說明申請本獎助的內容與原計畫的差異。\n無。\n\n# § 若有專案介紹的投影片，請提供：\n預計 2/3 前上傳更新。將撰寫 10 – 20 頁的投影片，介紹 (1) 專案目標 (2) 動機 (3) 執行人簡介 (4) 執行方法等。","timestamp":"2017-01-28T15:47:57.386Z","_id":"588cbd2d82223f001e02289c"},{"description":"# § 請以 80 ~ 120 字簡短地說明這個專案\n「跨界教育」在台灣是個比喻，但不是一個應用方法。該計畫將系統性的整理不同大學的課程數據，尤其各科系、課程、課綱的交互關係。我們主要的成果是一張課程地圖，在視覺上標注出特殊的知識關聯，並以數學及電腦科學方法分析該網絡，提供針對學生與教育工作者的數據接口。\n\n# § 你過去參與過什麼開源開發計畫（open source project）？\n\n1. `顏子祺`: [個人網頁](http://www.junipertcy.info/)、[GitHub](https://github.com/junipertcy)\n\t* 台北市道路施工的分析與視覺化: [DEMO](http://junipertcy.info.s3.amazonaws.com/data_taipei/index.html)\n\t* 紐約市噪音地圖: [GitHub](https://github.com/junipertcy/uwalk)\n\t* 網絡素養教育推廣計畫: [計畫網頁](http://www.uwalks.info/index.html)\n\n2. `林子耘`: [個人網頁](http://tweddielin.com/)、[GitHub](https://github.com/tweddielin)\n\t* 台北市道路施工的分析與視覺化: [DEMO](http://junipertcy.info.s3.amazonaws.com/data_taipei/index.html)\n\t* Open Skill API Workforce Data Initiative: [GitHub](https://github.com/workforce-data-initiative/skills-ml)\n\t* Police Early Intervention System: [GitHub](https://github.com/dssg/police-eis)\n\n\t[註]: 「台北市道路施工的分析與視覺化」是第一屆臺北市政府開放資料黑客松得獎作品。\n\t\n\n# § 這個計畫要解決什麼問題？\n\n該專案首要完成的事是「整合台灣的大學課程數據，提供可信賴、可直接應用的開放數據資源」。除了數據接口與知識網絡的展示外，我們會用整理過的數據，試著回答這些問題：\n\nQ-1. 某某系提供課程的核心價值是什麼？真的需要學生修這麼多課嗎？\n\nQ-2. 為什麼某些領域跨起來這麼簡單，有些就很難？是不是有些領域之間要相跨，就是「天然難」？\n\nQ-3. 我在中文系修過這些課。如果我想要當記者的話，我最好可以學習什麼課（知識）呢？應該不需要從大一的課開始學起吧？如果我想要增進「量化素養」呢，我可以做什麼？\n\nQ-4. 和這門課（或是這些知識）相近的課（或知識）有什麼呢？\n\n\n# § 你為什麼要做這個計劃 （ 個人動機 ）？\n個人（顏子祺）在台灣接受大學基本教育後，輾轉換了幾次工作，現在在中國從事和大學專業完全不同的軟體工程師工作。即便網路發達的現代，我們已經有了 MOOC, Coursera 等能遠程學習的工具，但是對想要換跑道的年輕求職者來說，該怎麼有效的獲取新知識，依然是困難的問題。我認為其中一個原因，是知識和工作的供需結構在近一二十年已經有很大的轉變；其中，有的領域變得更開放了，有些則變得更封閉了，而傳統我們認為的大學教育基本價值，可能已經過時。\n\n雖然教育的問題脈絡很複雜，我認為第一步是提供一個可信賴的、整理過的大學課程開放資料。這是許多教育應用的基礎建設，在中學或者大學的教育現場，甚至是迫切的需要。這可以幫助相關的討論更踏實、更能有數據支持。\n\n個人發起了[網絡素養教育推廣計畫](www.uwalks.info/networkliteracy.html)，並認為本計劃的問題能用結構化的網絡數據來幫助解決。另外，本專案的靈感，亦發想自兩個獨立的計畫：\n\n* [Hiroki Sayama 博士](http://bingweb.binghamton.edu/~sayama/)在 [NetSciEd5 會議](https://sites.google.com/a/binghamton.edu/netscied5)中的[報告](http://junipe.bitnamiapp.com/mediawiki/images/f/f0/NetSciEd5-sayama.pdf)\n* [MapEquation 網站](http://www.mapequation.org/)\n\n這兩個計畫說明用網絡的觀點看待課程數據的價值。\n\n# § 你預計用什麼方式解決此問題？\n我們希望建構 API，在`coursemap.net (暫定)`的域名下，提供中文世界的大學課程數據。其中，我們也會設計數據流，讓後端系統容易維護與延展。我們提供的數據包括：\n\n#### 課程相關數據：\n\nA-1. `GET` `/courses` `課程數據（可以分頁檢索）`\n\nA-2. `GET` `/courses/{_id}` `特定課程的數據`\n\nA-3. `GET` `/courses/{_id}/related_courses ` `特定課程的相關課程`\n\nA-4. `GET` `/courses/{_id}/related_terms` `特定課程的相關單詞`\n\nA-5. `GET` `/courses/{_id}/related_values` `特定課程的相關價值`\n\nA-6. `GET` `/courses/autocomplete` `自動補全和特定課程相關的資料`\n\n\n#### 關鍵詞相關數據：\n\nB-1. `GET` `/terms` `單詞的數據（可以分頁檢索）`\n\nB-2. `GET` `/terms/{_id}` `特定單詞的數據`\n\nB-3. `GET` `/terms/{_id}/related_terms` `特定單詞的相關單詞`\n\nB-4. `GET` `/terms/{_id}/related_courses` `特定單詞的相關課程`\n\nB-5. `GET` `/terms/autocomplete ` `自動補全和特定單詞相關的資料`\n\n#### 整合數據：\n\nC-1. `POST` `/courses?courses_taken=COURSES_TAKEN&target_values=TARGET_VALUES` `輸入已上過的課程，返回和特定領域相關的推薦課程`\n\nC-2. `POST` `/courses?courses_taken=COURSES_TAKEN&target_terms=TARGET_TERMS` `輸入已上過的課程，返回和特定關鍵詞相關的推薦課程`\n\nC-3. `GET` `/departments/{_id}/core_courses` `列出特定系所的核心課程`\n\nC-4. `GET` `/departments/{_id}/core_terms` `列出特定系所的核心關鍵詞`\n\nC-5. `GET` `/departments/{_id}/core_values` `列出特定系所的核心價值`\n\n#### 數據來源（暫定台灣五所大專院校）：\n\n1. [台大選課輔助程式](http://ntucourse.ericyu.org/)\n2. [清華大學課程網](https://www.ccxp.nthu.edu.tw/ccxp/INQUIRE/JH/6/6.2/6.2.9/JH629001.php)\n3. [交通大學課程網](http://timetable.nctu.edu.tw/)\n4. [成功大學課程網](http://course-query.acad.ncku.edu.tw/qry/)\n5. [政治大學課程網](http://wa.nccu.edu.tw/QryTor/Default.aspx?language=zh-TW)\n\n#### 工作流程與可能困難：\n \n    1. 從上述數據來源爬數據。\n\n> 我們已確認至少上述網站的內容皆能使用爬蟲爬下，惟有些網站需要驗證碼，將需要人工驗證，會困難些。另，每個網站都不一樣，我們需要訂製不同爬蟲的代碼。\n \n    2. 取得文字數據後，我們將數據去噪。\n\n> 這裡主要是自然語言處理。我們首先將中文與英文分開來，再來分別分詞。我們會用 [TF-IDF](https://en.wikipedia.org/wiki/Tf%E2%80%93idf) 分數篩選關鍵詞的權重。我們也會人工審視數據的可靠性。例如：人文科系的課程，可能只是討論某些文學作品，不一定能被分詞系統擷取出來，這時候會人為介入。\n\n    3. 去噪後，我們將分為三類數據存在 MongoDB 裡。分別是：\n       靜態數據（去噪後的基礎數據）、\n       關聯性數據（課程–課程的關聯等）、\n       應用類數據（經過演算法處理過的數據）。\n\n> 建立數據的關聯是本工作的重點，有三種方法可以建立數據的基本元素間的關聯。以化學系為例，化學系大一需要上普通化學、大二需要上有機化學。由於`有機`和`普化`都是化學系所開，且一先一後，因此這兩門課之間存在一條關聯。另外，有些課程如`生物化學`，可能在課綱中明白說明需要`先修有機`，這樣子的話，我們也可以在`生物化學`和`有機化學`之間建立關聯。除此之外，兩門課之間也可以因為具有同樣的關鍵詞而有聯繫。如`社會學`和`經濟學`都和`法律`相關，這樣子`社會學`和`經濟學`就能關聯起來。這中間存在數據稀疏的問題，我們會盡量人為介入去檢查「關聯足夠多」，有人為介入者會在數據中標記。\n\n    4. 存起來的數據，我們將使用 node.js 建立服務，讓用戶方便取用。\n\n#### 後端數據流設計：\n\n我們希望來自不同地方的課程數據，有可複用的數據處理流程。我們將使用 [Airflow](http://airbnb.io/projects/airflow/) 實作，這部份分為以下兩個要點：\n\n1. 我們將從各大課程網站爬下課程數據，我們會統一數據格式，以及定義資料內容（如：課程名稱、學校、老師、對象、大綱、要求、相關書目、人數、開課時間、地點等），將其存起來。其中課程大綱（若有）將保留原始文字檔。這部份將照顧到不同數據取用者的需求，且數據必須夠乾淨，使得未來的機器學習任務可以直接使用（機器學習任務不包括在本提案內容）。\n2. 針對不同的學校，我們設計專屬的數據存放標的。對於新的數據，我們可以更新它。\n\n#### 演算法設計：\n除了 A, B 兩類中規中矩的接口，我們會在 C 類整合數據接口中，提供經演算法處理後的數據。簡介如下：\n\n1. C-1 與 C-2: 當我們將課程與關鍵詞的結構建立好以後，便是一張網絡。問題的輸入是網絡裡特定區域的節點（修過的課/知識, `source`），以及一些特殊的節點（特殊的課, `target`）。我們將會直接從 `source` 往 `target` 搜索最短路徑，讓系統返為這條路徑上，離 `source` 最近的幾個節點。這將幫助回答上述 Q-3 的問題。\n2. C-3 到 C-5: 當課程網絡建立起來後，我們能在其上偵測社群結構（使用 [InfoMap](https://github.com/mapequation/infomap) 或 [Minimum Spanning Tree](https://en.wikipedia.org/wiki/Minimum_spanning_tree)）。這將幫助回答上述 Q-1 與 Q-2 的問題。\n\n這些算法雖然簡單，但我們可以在所作出的視覺化頁面中，檢視其合理性。\n\n# § 這個計畫的目標對象是誰？\n大學生、高中生與教育工作者。\n\n# § 這個計畫預計跟什麼團體合作？\n暫無。歡迎能直接提供以下數據的單位聯繫： (1) 學校課程數據 (2) 學生匿名後的修課記錄。\n\n# § 過去有作過相關主題的計畫嗎？\n1. `顏子祺`:\n\t* 使用 Node.js/Angular.js/MongoDB 建立 web app\n\t* 使用 D3.js/Linkurious.js 視覺化網絡\n\t* 使用 Python 分析社群網絡\n\n2. `林子耘`:\n\t* 使用 Flask/Postgres/React.js/D3.js 建立 web app\n\t* 使用 AirFlow/gensim/sci-kit learn 建立 Machine Learning Data Pipeline\n\t* 使用 theano、tensorflow 實作 deep neural net 相關應用\n\n3. 第三位工程師不願具名。其具 data mining 經驗，作過 Google 搜尋結果的大型爬蟲。\n\n# § 預計六個月內將花多少小時作這件事？需要多少經費？（30 萬到 50 萬）\n\n##### 系統維護（暫以一年估計）：\n1. AWS server（一年）：1000*6 + 2000（存放數據後）*6 = 18000\n2. 域名（一年）：1000\n\n##### 人事（三人；第三人不願具名）：\n1. 演算法實現與接口設計\n2. 數據流架構, 網頁設計（包括維持服務、伺服器管理）\n3. 網頁爬蟲, 數據整理\n\n##### 時間分配：\n* 每週平均 36 小時開發，共 864 小時。\n* 平均一人一週 12 小時開發。以每日 8 小時計，約等於每人全職工作 1.8 個月。\n* 其中時間大致遵照上述人事任務分配；其餘用於社群協作、溝通等。\n\n##### 所需金額：46 萬。包括：\n* AWS 系統維護費用：2 萬\n* 人事費用（每人 13 萬 * 3 人）：39 萬\n* 其他（交通、接洽等雜支）：5 萬\n\n# § 打算如何讓社群參與以及回饋意見？\n\n我們會不定時的將成果展示在 coursemap.net 的網頁裡，並會創建一個 Slack 群組，在該群組內，我們參與大家的意見討論。\n\n# § 請說明專案結束時，會產出的開源軟體套件或開放授權文件（請條列個別元件的輸入輸出或其功能）？\n專案結束後，將提交三份開源軟體套件以及數據。軟體的使用說明以註釋為主，但也會附上獨立的說明，讓新工程師順利接手。產出內容分別是：\n\n1. CourseMap-service: 以 node.js 實作。主要包含上述所提示的 API。\n2. CourseMap-web: 以 angular.js 實作。包含 coursemap.net 的首頁展示，以及課程數據視覺化的頁面。此頁面將包含簡易交互，以能回答上述本計劃要解決的五大問題為主。\n3. CourseMap-utils: 以 Python 實作。包含網頁爬蟲、系統部屬等代碼，並會附上系統設計架構。\n4. Course network data: 提交的數據將會是 MongoDB 匯出的 json 檔。\n\n##### 授權：\n* 程式碼：MIT 授權\n* 課程數據、程式碼說明文件與介面設計：CC-By-4.0 授權\n\n# § 請自行定義計畫的工作里程碑與最後的驗收標準 （若沒有達成這些標準的話，我們會不給你錢喔！)\n\n##### 第一個月：\n*  訂好三大類數據（科系、課程、關鍵詞）的欄位\n*  開發爬蟲\n*  建立 coursemap.net 計畫網站（中文版）\n*  建立 aws 工作環境\n\n> 驗收項目：\n> (1) 數據欄位說明書 (包含數據間的關聯之說明);\n> (2) 工作資料流流程設計圖;\n> (3) 中文版的計畫網站。\n\n##### 第二與第三個月：\n* 使用爬蟲爬下數據（確保至少有五間學校的數據可以擷取出來）\n* 清洗數據（需要大量人工介入）\n* 儲存數據\n* coursemap.net 計畫網站加入了英文版\n* 確保從擷取數據到展示的工作流流暢\n\n> 驗收項目：\n> (1) 整理過的原始數據 (*.json, 可下載);\n> (2) 提出目前所收集數據的統計報告;\n> (3) 資料流的部屬代碼與文檔;\n> (4) 英文版的計畫網站。\n\n##### 第四個月（7/01 大黑客松期中報告）：\n*  完成 A 類與 B 類的接口\n*  能用靜態代碼完成 C 類的整合數據的運算\n*  完成一張視覺化的頁面，說明數據間的關聯\n*  以網站為主，投影片為輔，能在期中報告展示。\n\n> 驗收項目：\n> (1) 完成 A 類與 B 類的接口;\n> (2) 完成一張課程網絡視覺化且可交互的頁面 (包括 C 類數據的結果);\n> (3) 較完整的計畫網站。\n\n##### 第五與六個月：\n*  完成上述的 A, B, C 類所有接口\n*  完善說明書\n*  完善網站\n\n> 驗收項目：\n> (1) 完成 A – C 類的接口;\n> (2) 完成三類程式碼的說明書;\n> (3) 完整的計畫網站（網站將會包括：`回報錯誤`的功能）。\n\n\n# § 未來可能進一步的發展？\n\n我們認為本專案的核心在於整理數據，讓數據的質和量都能達到可直接應用的目標。數據和接口處理完成後，有以下應用：\n\n1. 製作機器學習算法，配合`職缺數據`，用來推薦學生課程（推薦取向：想發展那方面的能力？想從事哪方面的工作？），變成一個獨立的工具。這或許可以改善台灣的大學教育與就業市場學用落差的問題。\n2. 獨立做成網頁服務，收集使用者數據。這些數據也是開放資料的基礎。服務場景如：已經當上社工的學長姐們，他們在大學的時候修過什麼課呢？財金系的熱門修課路徑是什麼？\n3. 教育工作者研究使用。\n\n# § 本計畫目前是否已有、或正在申請其他的資金來源？若有，請說明申請本獎助的內容與原計畫的差異。\n無。\n\n# § 若有專案介紹的投影片，請提供：\n預計 2/3 前上傳更新。將撰寫 10 – 20 頁的投影片，介紹 (1) 專案目標 (2) 動機 (3) 執行人簡介 (4) 執行方法等。","timestamp":"2017-01-28T15:48:26.499Z","_id":"588cbd4a82223f001e02289d"},{"description":"# § 請以 80 ~ 120 字簡短地說明這個專案\n「跨界教育」在台灣是個比喻，但不是一個應用方法。該計畫將系統性的整理不同大學的課程數據，尤其各科系、課程、課綱的交互關係。我們主要的成果是一張課程地圖，在視覺上標注出特殊的知識關聯，並以數學及電腦科學方法分析該網絡，提供針對學生與教育工作者的數據接口。\n\n# § 你過去參與過什麼開源開發計畫（open source project）？\n\n1. `顏子祺`: [個人網頁](http://www.junipertcy.info/)、[GitHub](https://github.com/junipertcy)\n\t* 台北市道路施工的分析與視覺化: [DEMO](http://junipertcy.info.s3.amazonaws.com/data_taipei/index.html)\n\t* 紐約市噪音地圖: [GitHub](https://github.com/junipertcy/uwalk)\n\t* 網絡素養教育推廣計畫: [計畫網頁](http://www.uwalks.info/index.html)\n\n2. `林子耘`: [個人網頁](http://tweddielin.com/)、[GitHub](https://github.com/tweddielin)\n\t* 台北市道路施工的分析與視覺化: [DEMO](http://junipertcy.info.s3.amazonaws.com/data_taipei/index.html)\n\t* Open Skill API Workforce Data Initiative: [GitHub](https://github.com/workforce-data-initiative/skills-ml)\n\t* Police Early Intervention System: [GitHub](https://github.com/dssg/police-eis)\n\n\n[註]: 「台北市道路施工的分析與視覺化」是第一屆臺北市政府開放資料黑客松得獎作品。\n\t\n\n# § 這個計畫要解決什麼問題？\n\n該專案首要完成的事是「整合台灣的大學課程數據，提供可信賴、可直接應用的開放數據資源」。除了數據接口與知識網絡的展示外，我們會用整理過的數據，試著回答這些問題：\n\nQ-1. 某某系提供課程的核心價值是什麼？真的需要學生修這麼多課嗎？\n\nQ-2. 為什麼某些領域跨起來這麼簡單，有些就很難？是不是有些領域之間要相跨，就是「天然難」？\n\nQ-3. 我在中文系修過這些課。如果我想要當記者的話，我最好可以學習什麼課（知識）呢？應該不需要從大一的課開始學起吧？如果我想要增進「量化素養」呢，我可以做什麼？\n\nQ-4. 和這門課（或是這些知識）相近的課（或知識）有什麼呢？\n\n\n# § 你為什麼要做這個計劃 （ 個人動機 ）？\n個人（顏子祺）在台灣接受大學基本教育後，輾轉換了幾次工作，現在在中國從事和大學專業完全不同的軟體工程師工作。即便網路發達的現代，我們已經有了 MOOC, Coursera 等能遠程學習的工具，但是對想要換跑道的年輕求職者來說，該怎麼有效的獲取新知識，依然是困難的問題。我認為其中一個原因，是知識和工作的供需結構在近一二十年已經有很大的轉變；其中，有的領域變得更開放了，有些則變得更封閉了，而傳統我們認為的大學教育基本價值，可能已經過時。\n\n雖然教育的問題脈絡很複雜，我認為第一步是提供一個可信賴的、整理過的大學課程開放資料。這是許多教育應用的基礎建設，在中學或者大學的教育現場，甚至是迫切的需要。這可以幫助相關的討論更踏實、更能有數據支持。\n\n個人發起了[網絡素養教育推廣計畫](www.uwalks.info/networkliteracy.html)，並認為本計劃的問題能用結構化的網絡數據來幫助解決。另外，本專案的靈感，亦發想自兩個獨立的計畫：\n\n* [Hiroki Sayama 博士](http://bingweb.binghamton.edu/~sayama/)在 [NetSciEd5 會議](https://sites.google.com/a/binghamton.edu/netscied5)中的[報告](http://junipe.bitnamiapp.com/mediawiki/images/f/f0/NetSciEd5-sayama.pdf)\n* [MapEquation 網站](http://www.mapequation.org/)\n\n這兩個計畫說明用網絡的觀點看待課程數據的價值。\n\n# § 你預計用什麼方式解決此問題？\n我們希望建構 API，在`coursemap.net (暫定)`的域名下，提供中文世界的大學課程數據。其中，我們也會設計數據流，讓後端系統容易維護與延展。我們提供的數據包括：\n\n#### 課程相關數據：\n\nA-1. `GET` `/courses` `課程數據（可以分頁檢索）`\n\nA-2. `GET` `/courses/{_id}` `特定課程的數據`\n\nA-3. `GET` `/courses/{_id}/related_courses ` `特定課程的相關課程`\n\nA-4. `GET` `/courses/{_id}/related_terms` `特定課程的相關單詞`\n\nA-5. `GET` `/courses/{_id}/related_values` `特定課程的相關價值`\n\nA-6. `GET` `/courses/autocomplete` `自動補全和特定課程相關的資料`\n\n\n#### 關鍵詞相關數據：\n\nB-1. `GET` `/terms` `單詞的數據（可以分頁檢索）`\n\nB-2. `GET` `/terms/{_id}` `特定單詞的數據`\n\nB-3. `GET` `/terms/{_id}/related_terms` `特定單詞的相關單詞`\n\nB-4. `GET` `/terms/{_id}/related_courses` `特定單詞的相關課程`\n\nB-5. `GET` `/terms/autocomplete ` `自動補全和特定單詞相關的資料`\n\n#### 整合數據：\n\nC-1. `POST` `/courses?courses_taken=COURSES_TAKEN&target_values=TARGET_VALUES` `輸入已上過的課程，返回和特定領域相關的推薦課程`\n\nC-2. `POST` `/courses?courses_taken=COURSES_TAKEN&target_terms=TARGET_TERMS` `輸入已上過的課程，返回和特定關鍵詞相關的推薦課程`\n\nC-3. `GET` `/departments/{_id}/core_courses` `列出特定系所的核心課程`\n\nC-4. `GET` `/departments/{_id}/core_terms` `列出特定系所的核心關鍵詞`\n\nC-5. `GET` `/departments/{_id}/core_values` `列出特定系所的核心價值`\n\n#### 數據來源（暫定台灣五所大專院校）：\n\n1. [台大選課輔助程式](http://ntucourse.ericyu.org/)\n2. [清華大學課程網](https://www.ccxp.nthu.edu.tw/ccxp/INQUIRE/JH/6/6.2/6.2.9/JH629001.php)\n3. [交通大學課程網](http://timetable.nctu.edu.tw/)\n4. [成功大學課程網](http://course-query.acad.ncku.edu.tw/qry/)\n5. [政治大學課程網](http://wa.nccu.edu.tw/QryTor/Default.aspx?language=zh-TW)\n\n#### 工作流程與可能困難：\n \n    1. 從上述數據來源爬數據。\n\n> 我們已確認至少上述網站的內容皆能使用爬蟲爬下，惟有些網站需要驗證碼，將需要人工驗證，會困難些。另，每個網站都不一樣，我們需要訂製不同爬蟲的代碼。\n \n    2. 取得文字數據後，我們將數據去噪。\n\n> 這裡主要是自然語言處理。我們首先將中文與英文分開來，再來分別分詞。我們會用 [TF-IDF](https://en.wikipedia.org/wiki/Tf%E2%80%93idf) 分數篩選關鍵詞的權重。我們也會人工審視數據的可靠性。例如：人文科系的課程，可能只是討論某些文學作品，不一定能被分詞系統擷取出來，這時候會人為介入。\n\n    3. 去噪後，我們將分為三類數據存在 MongoDB 裡。分別是：\n       靜態數據（去噪後的基礎數據）、\n       關聯性數據（課程–課程的關聯等）、\n       應用類數據（經過演算法處理過的數據）。\n\n> 建立數據的關聯是本工作的重點，有三種方法可以建立數據的基本元素間的關聯。以化學系為例，化學系大一需要上普通化學、大二需要上有機化學。由於`有機`和`普化`都是化學系所開，且一先一後，因此這兩門課之間存在一條關聯。另外，有些課程如`生物化學`，可能在課綱中明白說明需要`先修有機`，這樣子的話，我們也可以在`生物化學`和`有機化學`之間建立關聯。除此之外，兩門課之間也可以因為具有同樣的關鍵詞而有聯繫。如`社會學`和`經濟學`都和`法律`相關，這樣子`社會學`和`經濟學`就能關聯起來。這中間存在數據稀疏的問題，我們會盡量人為介入去檢查「關聯足夠多」，有人為介入者會在數據中標記。\n\n    4. 存起來的數據，我們將使用 node.js 建立服務，讓用戶方便取用。\n\n#### 後端數據流設計：\n\n我們希望來自不同地方的課程數據，有可複用的數據處理流程。我們將使用 [Airflow](http://airbnb.io/projects/airflow/) 實作，這部份分為以下兩個要點：\n\n1. 我們將從各大課程網站爬下課程數據，我們會統一數據格式，以及定義資料內容（如：課程名稱、學校、老師、對象、大綱、要求、相關書目、人數、開課時間、地點等），將其存起來。其中課程大綱（若有）將保留原始文字檔。這部份將照顧到不同數據取用者的需求，且數據必須夠乾淨，使得未來的機器學習任務可以直接使用（機器學習任務不包括在本提案內容）。\n2. 針對不同的學校，我們設計專屬的數據存放標的。對於新的數據，我們可以更新它。\n\n#### 演算法設計：\n除了 A, B 兩類中規中矩的接口，我們會在 C 類整合數據接口中，提供經演算法處理後的數據。簡介如下：\n\n1. C-1 與 C-2: 當我們將課程與關鍵詞的結構建立好以後，便是一張網絡。問題的輸入是網絡裡特定區域的節點（修過的課/知識, `source`），以及一些特殊的節點（特殊的課, `target`）。我們將會直接從 `source` 往 `target` 搜索最短路徑，讓系統返為這條路徑上，離 `source` 最近的幾個節點。這將幫助回答上述 Q-3 的問題。\n2. C-3 到 C-5: 當課程網絡建立起來後，我們能在其上偵測社群結構（使用 [InfoMap](https://github.com/mapequation/infomap) 或 [Minimum Spanning Tree](https://en.wikipedia.org/wiki/Minimum_spanning_tree)）。這將幫助回答上述 Q-1 與 Q-2 的問題。\n\n這些算法雖然簡單，但我們可以在所作出的視覺化頁面中，檢視其合理性。\n\n# § 這個計畫的目標對象是誰？\n大學生、高中生與教育工作者。\n\n# § 這個計畫預計跟什麼團體合作？\n暫無。歡迎能直接提供以下數據的單位聯繫： (1) 學校課程數據 (2) 學生匿名後的修課記錄。\n\n# § 過去有作過相關主題的計畫嗎？\n1. `顏子祺`:\n\t* 使用 Node.js/Angular.js/MongoDB 建立 web app\n\t* 使用 D3.js/Linkurious.js 視覺化網絡\n\t* 使用 Python 分析社群網絡\n\n2. `林子耘`:\n\t* 使用 Flask/Postgres/React.js/D3.js 建立 web app\n\t* 使用 AirFlow/gensim/sci-kit learn 建立 Machine Learning Data Pipeline\n\t* 使用 theano、tensorflow 實作 deep neural net 相關應用\n\n3. 第三位工程師不願具名。其具 data mining 經驗，作過 Google 搜尋結果的大型爬蟲。\n\n# § 預計六個月內將花多少小時作這件事？需要多少經費？（30 萬到 50 萬）\n\n##### 系統維護（暫以一年估計）：\n1. AWS server（一年）：1000*6 + 2000（存放數據後）*6 = 18000\n2. 域名（一年）：1000\n\n##### 人事（三人；第三人不願具名）：\n1. 演算法實現與接口設計\n2. 數據流架構, 網頁設計（包括維持服務、伺服器管理）\n3. 網頁爬蟲, 數據整理\n\n##### 時間分配：\n* 每週平均 36 小時開發，共 864 小時。\n* 平均一人一週 12 小時開發。以每日 8 小時計，約等於每人全職工作 1.8 個月。\n* 其中時間大致遵照上述人事任務分配；其餘用於社群協作、溝通等。\n\n##### 所需金額：46 萬。包括：\n* AWS 系統維護費用：2 萬\n* 人事費用（每人 13 萬 * 3 人）：39 萬\n* 其他（交通、接洽等雜支）：5 萬\n\n# § 打算如何讓社群參與以及回饋意見？\n\n我們會不定時的將成果展示在 coursemap.net 的網頁裡，並會創建一個 Slack 群組，在該群組內，我們參與大家的意見討論。\n\n# § 請說明專案結束時，會產出的開源軟體套件或開放授權文件（請條列個別元件的輸入輸出或其功能）？\n專案結束後，將提交三份開源軟體套件以及數據。軟體的使用說明以註釋為主，但也會附上獨立的說明，讓新工程師順利接手。產出內容分別是：\n\n1. CourseMap-service: 以 node.js 實作。主要包含上述所提示的 API。\n2. CourseMap-web: 以 angular.js 實作。包含 coursemap.net 的首頁展示，以及課程數據視覺化的頁面。此頁面將包含簡易交互，以能回答上述本計劃要解決的五大問題為主。\n3. CourseMap-utils: 以 Python 實作。包含網頁爬蟲、系統部屬等代碼，並會附上系統設計架構。\n4. Course network data: 提交的數據將會是 MongoDB 匯出的 json 檔。\n\n##### 授權：\n* 程式碼：MIT 授權\n* 課程數據、程式碼說明文件與介面設計：CC-By-4.0 授權\n\n# § 請自行定義計畫的工作里程碑與最後的驗收標準 （若沒有達成這些標準的話，我們會不給你錢喔！)\n\n##### 第一個月：\n*  訂好三大類數據（科系、課程、關鍵詞）的欄位\n*  開發爬蟲\n*  建立 coursemap.net 計畫網站（中文版）\n*  建立 aws 工作環境\n\n> 驗收項目：\n> (1) 數據欄位說明書 (包含數據間的關聯之說明);\n> (2) 工作資料流流程設計圖;\n> (3) 中文版的計畫網站。\n\n##### 第二與第三個月：\n* 使用爬蟲爬下數據（確保至少有五間學校的數據可以擷取出來）\n* 清洗數據（需要大量人工介入）\n* 儲存數據\n* coursemap.net 計畫網站加入了英文版\n* 確保從擷取數據到展示的工作流流暢\n\n> 驗收項目：\n> (1) 整理過的原始數據 (*.json, 可下載);\n> (2) 提出目前所收集數據的統計報告;\n> (3) 資料流的部屬代碼與文檔;\n> (4) 英文版的計畫網站。\n\n##### 第四個月（7/01 大黑客松期中報告）：\n*  完成 A 類與 B 類的接口\n*  能用靜態代碼完成 C 類的整合數據的運算\n*  完成一張視覺化的頁面，說明數據間的關聯\n*  以網站為主，投影片為輔，能在期中報告展示。\n\n> 驗收項目：\n> (1) 完成 A 類與 B 類的接口;\n> (2) 完成一張課程網絡視覺化且可交互的頁面 (包括 C 類數據的結果);\n> (3) 較完整的計畫網站。\n\n##### 第五與六個月：\n*  完成上述的 A, B, C 類所有接口\n*  完善說明書\n*  完善網站\n\n> 驗收項目：\n> (1) 完成 A – C 類的接口;\n> (2) 完成三類程式碼的說明書;\n> (3) 完整的計畫網站（網站將會包括：`回報錯誤`的功能）。\n\n\n# § 未來可能進一步的發展？\n\n我們認為本專案的核心在於整理數據，讓數據的質和量都能達到可直接應用的目標。數據和接口處理完成後，有以下應用：\n\n1. 製作機器學習算法，配合`職缺數據`，用來推薦學生課程（推薦取向：想發展那方面的能力？想從事哪方面的工作？），變成一個獨立的工具。這或許可以改善台灣的大學教育與就業市場學用落差的問題。\n2. 獨立做成網頁服務，收集使用者數據。這些數據也是開放資料的基礎。服務場景如：已經當上社工的學長姐們，他們在大學的時候修過什麼課呢？財金系的熱門修課路徑是什麼？\n3. 教育工作者研究使用。\n\n# § 本計畫目前是否已有、或正在申請其他的資金來源？若有，請說明申請本獎助的內容與原計畫的差異。\n無。\n\n# § 若有專案介紹的投影片，請提供：\n預計 2/3 前上傳更新。將撰寫 10 – 20 頁的投影片，介紹 (1) 專案目標 (2) 動機 (3) 執行人簡介 (4) 執行方法等。","timestamp":"2017-01-28T15:48:41.710Z","_id":"588cbd5982223f001e02289e"},{"description":"# § 請以 80 ~ 120 字簡短地說明這個專案\n「跨界教育」在台灣是個比喻，但不是一個應用方法。該計畫將系統性的整理不同大學的課程數據，尤其各科系、課程、課綱的交互關係。我們主要的成果是一張課程地圖，在視覺上標注出特殊的知識關聯，並以數學及電腦科學方法分析該網絡，提供針對學生與教育工作者的數據接口。\n\n# § 你過去參與過什麼開源開發計畫（open source project）？\n\n1. `顏子祺`: [個人網頁](http://www.junipertcy.info/)、[GitHub](https://github.com/junipertcy)\n\t* 台北市道路施工的分析與視覺化: [DEMO](http://junipertcy.info.s3.amazonaws.com/data_taipei/index.html)\n\t* 紐約市噪音地圖: [GitHub](https://github.com/junipertcy/uwalk)\n\t* 網絡素養教育推廣計畫: [計畫網頁](http://www.uwalks.info/index.html)\n\n2. `林子耘`: [個人網頁](http://tweddielin.com/)、[GitHub](https://github.com/tweddielin)\n\t* 台北市道路施工的分析與視覺化: [DEMO](http://junipertcy.info.s3.amazonaws.com/data_taipei/index.html)\n\t* Open Skill API Workforce Data Initiative: [GitHub](https://github.com/workforce-data-initiative/skills-ml)\n\t* Police Early Intervention System: [GitHub](https://github.com/dssg/police-eis)\n\n\n    [註]: 「台北市道路施工的分析與視覺化」是第一屆臺北市政府開放資料黑客松得獎作品。\n\t\n\n# § 這個計畫要解決什麼問題？\n\n該專案首要完成的事是「整合台灣的大學課程數據，提供可信賴、可直接應用的開放數據資源」。除了數據接口與知識網絡的展示外，我們會用整理過的數據，試著回答這些問題：\n\nQ-1. 某某系提供課程的核心價值是什麼？真的需要學生修這麼多課嗎？\n\nQ-2. 為什麼某些領域跨起來這麼簡單，有些就很難？是不是有些領域之間要相跨，就是「天然難」？\n\nQ-3. 我在中文系修過這些課。如果我想要當記者的話，我最好可以學習什麼課（知識）呢？應該不需要從大一的課開始學起吧？如果我想要增進「量化素養」呢，我可以做什麼？\n\nQ-4. 和這門課（或是這些知識）相近的課（或知識）有什麼呢？\n\n\n# § 你為什麼要做這個計劃 （ 個人動機 ）？\n個人（顏子祺）在台灣接受大學基本教育後，輾轉換了幾次工作，現在在中國從事和大學專業完全不同的軟體工程師工作。即便網路發達的現代，我們已經有了 MOOC, Coursera 等能遠程學習的工具，但是對想要換跑道的年輕求職者來說，該怎麼有效的獲取新知識，依然是困難的問題。我認為其中一個原因，是知識和工作的供需結構在近一二十年已經有很大的轉變；其中，有的領域變得更開放了，有些則變得更封閉了，而傳統我們認為的大學教育基本價值，可能已經過時。\n\n雖然教育的問題脈絡很複雜，我認為第一步是提供一個可信賴的、整理過的大學課程開放資料。這是許多教育應用的基礎建設，在中學或者大學的教育現場，甚至是迫切的需要。這可以幫助相關的討論更踏實、更能有數據支持。\n\n個人發起了[網絡素養教育推廣計畫](www.uwalks.info/networkliteracy.html)，並認為本計劃的問題能用結構化的網絡數據來幫助解決。另外，本專案的靈感，亦發想自兩個獨立的計畫：\n\n* [Hiroki Sayama 博士](http://bingweb.binghamton.edu/~sayama/)在 [NetSciEd5 會議](https://sites.google.com/a/binghamton.edu/netscied5)中的[報告](http://junipe.bitnamiapp.com/mediawiki/images/f/f0/NetSciEd5-sayama.pdf)\n* [MapEquation 網站](http://www.mapequation.org/)\n\n這兩個計畫說明用網絡的觀點看待課程數據的價值。\n\n# § 你預計用什麼方式解決此問題？\n我們希望建構 API，在`coursemap.net (暫定)`的域名下，提供中文世界的大學課程數據。其中，我們也會設計數據流，讓後端系統容易維護與延展。我們提供的數據包括：\n\n#### 課程相關數據：\n\nA-1. `GET` `/courses` `課程數據（可以分頁檢索）`\n\nA-2. `GET` `/courses/{_id}` `特定課程的數據`\n\nA-3. `GET` `/courses/{_id}/related_courses ` `特定課程的相關課程`\n\nA-4. `GET` `/courses/{_id}/related_terms` `特定課程的相關單詞`\n\nA-5. `GET` `/courses/{_id}/related_values` `特定課程的相關價值`\n\nA-6. `GET` `/courses/autocomplete` `自動補全和特定課程相關的資料`\n\n\n#### 關鍵詞相關數據：\n\nB-1. `GET` `/terms` `單詞的數據（可以分頁檢索）`\n\nB-2. `GET` `/terms/{_id}` `特定單詞的數據`\n\nB-3. `GET` `/terms/{_id}/related_terms` `特定單詞的相關單詞`\n\nB-4. `GET` `/terms/{_id}/related_courses` `特定單詞的相關課程`\n\nB-5. `GET` `/terms/autocomplete ` `自動補全和特定單詞相關的資料`\n\n#### 整合數據：\n\nC-1. `POST` `/courses?courses_taken=COURSES_TAKEN&target_values=TARGET_VALUES` `輸入已上過的課程，返回和特定領域相關的推薦課程`\n\nC-2. `POST` `/courses?courses_taken=COURSES_TAKEN&target_terms=TARGET_TERMS` `輸入已上過的課程，返回和特定關鍵詞相關的推薦課程`\n\nC-3. `GET` `/departments/{_id}/core_courses` `列出特定系所的核心課程`\n\nC-4. `GET` `/departments/{_id}/core_terms` `列出特定系所的核心關鍵詞`\n\nC-5. `GET` `/departments/{_id}/core_values` `列出特定系所的核心價值`\n\n#### 數據來源（暫定台灣五所大專院校）：\n\n1. [台大選課輔助程式](http://ntucourse.ericyu.org/)\n2. [清華大學課程網](https://www.ccxp.nthu.edu.tw/ccxp/INQUIRE/JH/6/6.2/6.2.9/JH629001.php)\n3. [交通大學課程網](http://timetable.nctu.edu.tw/)\n4. [成功大學課程網](http://course-query.acad.ncku.edu.tw/qry/)\n5. [政治大學課程網](http://wa.nccu.edu.tw/QryTor/Default.aspx?language=zh-TW)\n\n#### 工作流程與可能困難：\n \n    1. 從上述數據來源爬數據。\n\n> 我們已確認至少上述網站的內容皆能使用爬蟲爬下，惟有些網站需要驗證碼，將需要人工驗證，會困難些。另，每個網站都不一樣，我們需要訂製不同爬蟲的代碼。\n \n    2. 取得文字數據後，我們將數據去噪。\n\n> 這裡主要是自然語言處理。我們首先將中文與英文分開來，再來分別分詞。我們會用 [TF-IDF](https://en.wikipedia.org/wiki/Tf%E2%80%93idf) 分數篩選關鍵詞的權重。我們也會人工審視數據的可靠性。例如：人文科系的課程，可能只是討論某些文學作品，不一定能被分詞系統擷取出來，這時候會人為介入。\n\n    3. 去噪後，我們將分為三類數據存在 MongoDB 裡。分別是：\n       靜態數據（去噪後的基礎數據）、\n       關聯性數據（課程–課程的關聯等）、\n       應用類數據（經過演算法處理過的數據）。\n\n> 建立數據的關聯是本工作的重點，有三種方法可以建立數據的基本元素間的關聯。以化學系為例，化學系大一需要上普通化學、大二需要上有機化學。由於`有機`和`普化`都是化學系所開，且一先一後，因此這兩門課之間存在一條關聯。另外，有些課程如`生物化學`，可能在課綱中明白說明需要`先修有機`，這樣子的話，我們也可以在`生物化學`和`有機化學`之間建立關聯。除此之外，兩門課之間也可以因為具有同樣的關鍵詞而有聯繫。如`社會學`和`經濟學`都和`法律`相關，這樣子`社會學`和`經濟學`就能關聯起來。這中間存在數據稀疏的問題，我們會盡量人為介入去檢查「關聯足夠多」，有人為介入者會在數據中標記。\n\n    4. 存起來的數據，我們將使用 node.js 建立服務，讓用戶方便取用。\n\n#### 後端數據流設計：\n\n我們希望來自不同地方的課程數據，有可複用的數據處理流程。我們將使用 [Airflow](http://airbnb.io/projects/airflow/) 實作，這部份分為以下兩個要點：\n\n1. 我們將從各大課程網站爬下課程數據，我們會統一數據格式，以及定義資料內容（如：課程名稱、學校、老師、對象、大綱、要求、相關書目、人數、開課時間、地點等），將其存起來。其中課程大綱（若有）將保留原始文字檔。這部份將照顧到不同數據取用者的需求，且數據必須夠乾淨，使得未來的機器學習任務可以直接使用（機器學習任務不包括在本提案內容）。\n2. 針對不同的學校，我們設計專屬的數據存放標的。對於新的數據，我們可以更新它。\n\n#### 演算法設計：\n除了 A, B 兩類中規中矩的接口，我們會在 C 類整合數據接口中，提供經演算法處理後的數據。簡介如下：\n\n1. C-1 與 C-2: 當我們將課程與關鍵詞的結構建立好以後，便是一張網絡。問題的輸入是網絡裡特定區域的節點（修過的課/知識, `source`），以及一些特殊的節點（特殊的課, `target`）。我們將會直接從 `source` 往 `target` 搜索最短路徑，讓系統返為這條路徑上，離 `source` 最近的幾個節點。這將幫助回答上述 Q-3 的問題。\n2. C-3 到 C-5: 當課程網絡建立起來後，我們能在其上偵測社群結構（使用 [InfoMap](https://github.com/mapequation/infomap) 或 [Minimum Spanning Tree](https://en.wikipedia.org/wiki/Minimum_spanning_tree)）。這將幫助回答上述 Q-1 與 Q-2 的問題。\n\n這些算法雖然簡單，但我們可以在所作出的視覺化頁面中，檢視其合理性。\n\n# § 這個計畫的目標對象是誰？\n大學生、高中生與教育工作者。\n\n# § 這個計畫預計跟什麼團體合作？\n暫無。歡迎能直接提供以下數據的單位聯繫： (1) 學校課程數據 (2) 學生匿名後的修課記錄。\n\n# § 過去有作過相關主題的計畫嗎？\n1. `顏子祺`:\n\t* 使用 Node.js/Angular.js/MongoDB 建立 web app\n\t* 使用 D3.js/Linkurious.js 視覺化網絡\n\t* 使用 Python 分析社群網絡\n\n2. `林子耘`:\n\t* 使用 Flask/Postgres/React.js/D3.js 建立 web app\n\t* 使用 AirFlow/gensim/sci-kit learn 建立 Machine Learning Data Pipeline\n\t* 使用 theano、tensorflow 實作 deep neural net 相關應用\n\n3. 第三位工程師不願具名。其具 data mining 經驗，作過 Google 搜尋結果的大型爬蟲。\n\n# § 預計六個月內將花多少小時作這件事？需要多少經費？（30 萬到 50 萬）\n\n##### 系統維護（暫以一年估計）：\n1. AWS server（一年）：1000*6 + 2000（存放數據後）*6 = 18000\n2. 域名（一年）：1000\n\n##### 人事（三人；第三人不願具名）：\n1. 演算法實現與接口設計\n2. 數據流架構, 網頁設計（包括維持服務、伺服器管理）\n3. 網頁爬蟲, 數據整理\n\n##### 時間分配：\n* 每週平均 36 小時開發，共 864 小時。\n* 平均一人一週 12 小時開發。以每日 8 小時計，約等於每人全職工作 1.8 個月。\n* 其中時間大致遵照上述人事任務分配；其餘用於社群協作、溝通等。\n\n##### 所需金額：46 萬。包括：\n* AWS 系統維護費用：2 萬\n* 人事費用（每人 13 萬 * 3 人）：39 萬\n* 其他（交通、接洽等雜支）：5 萬\n\n# § 打算如何讓社群參與以及回饋意見？\n\n我們會不定時的將成果展示在 coursemap.net 的網頁裡，並會創建一個 Slack 群組，在該群組內，我們參與大家的意見討論。\n\n# § 請說明專案結束時，會產出的開源軟體套件或開放授權文件（請條列個別元件的輸入輸出或其功能）？\n專案結束後，將提交三份開源軟體套件以及數據。軟體的使用說明以註釋為主，但也會附上獨立的說明，讓新工程師順利接手。產出內容分別是：\n\n1. CourseMap-service: 以 node.js 實作。主要包含上述所提示的 API。\n2. CourseMap-web: 以 angular.js 實作。包含 coursemap.net 的首頁展示，以及課程數據視覺化的頁面。此頁面將包含簡易交互，以能回答上述本計劃要解決的五大問題為主。\n3. CourseMap-utils: 以 Python 實作。包含網頁爬蟲、系統部屬等代碼，並會附上系統設計架構。\n4. Course network data: 提交的數據將會是 MongoDB 匯出的 json 檔。\n\n##### 授權：\n* 程式碼：MIT 授權\n* 課程數據、程式碼說明文件與介面設計：CC-By-4.0 授權\n\n# § 請自行定義計畫的工作里程碑與最後的驗收標準 （若沒有達成這些標準的話，我們會不給你錢喔！)\n\n##### 第一個月：\n*  訂好三大類數據（科系、課程、關鍵詞）的欄位\n*  開發爬蟲\n*  建立 coursemap.net 計畫網站（中文版）\n*  建立 aws 工作環境\n\n> 驗收項目：\n> (1) 數據欄位說明書 (包含數據間的關聯之說明);\n> (2) 工作資料流流程設計圖;\n> (3) 中文版的計畫網站。\n\n##### 第二與第三個月：\n* 使用爬蟲爬下數據（確保至少有五間學校的數據可以擷取出來）\n* 清洗數據（需要大量人工介入）\n* 儲存數據\n* coursemap.net 計畫網站加入了英文版\n* 確保從擷取數據到展示的工作流流暢\n\n> 驗收項目：\n> (1) 整理過的原始數據 (*.json, 可下載);\n> (2) 提出目前所收集數據的統計報告;\n> (3) 資料流的部屬代碼與文檔;\n> (4) 英文版的計畫網站。\n\n##### 第四個月（7/01 大黑客松期中報告）：\n*  完成 A 類與 B 類的接口\n*  能用靜態代碼完成 C 類的整合數據的運算\n*  完成一張視覺化的頁面，說明數據間的關聯\n*  以網站為主，投影片為輔，能在期中報告展示。\n\n> 驗收項目：\n> (1) 完成 A 類與 B 類的接口;\n> (2) 完成一張課程網絡視覺化且可交互的頁面 (包括 C 類數據的結果);\n> (3) 較完整的計畫網站。\n\n##### 第五與六個月：\n*  完成上述的 A, B, C 類所有接口\n*  完善說明書\n*  完善網站\n\n> 驗收項目：\n> (1) 完成 A – C 類的接口;\n> (2) 完成三類程式碼的說明書;\n> (3) 完整的計畫網站（網站將會包括：`回報錯誤`的功能）。\n\n\n# § 未來可能進一步的發展？\n\n我們認為本專案的核心在於整理數據，讓數據的質和量都能達到可直接應用的目標。數據和接口處理完成後，有以下應用：\n\n1. 製作機器學習算法，配合`職缺數據`，用來推薦學生課程（推薦取向：想發展那方面的能力？想從事哪方面的工作？），變成一個獨立的工具。這或許可以改善台灣的大學教育與就業市場學用落差的問題。\n2. 獨立做成網頁服務，收集使用者數據。這些數據也是開放資料的基礎。服務場景如：已經當上社工的學長姐們，他們在大學的時候修過什麼課呢？財金系的熱門修課路徑是什麼？\n3. 教育工作者研究使用。\n\n# § 本計畫目前是否已有、或正在申請其他的資金來源？若有，請說明申請本獎助的內容與原計畫的差異。\n無。\n\n# § 若有專案介紹的投影片，請提供：\n預計 2/3 前上傳更新。將撰寫 10 – 20 頁的投影片，介紹 (1) 專案目標 (2) 動機 (3) 執行人簡介 (4) 執行方法等。","timestamp":"2017-01-28T16:08:42.733Z","_id":"588cc20a82223f001e0228a3"},{"description":"# § 請以 80 ~ 120 字簡短地說明這個專案\n「跨界教育」在台灣是個比喻，但不是一個應用方法。該計畫將系統性的整理不同大學的課程數據，尤其各科系、課程、課綱的交互關係。我們主要的成果是一張課程地圖，在視覺上標注出特殊的知識關聯，並以數學及電腦科學方法分析該網絡，提供針對學生與教育工作者的數據接口。\n\n# § 你過去參與過什麼開源開發計畫（open source project）？\n\n1. `顏子祺`: [個人網頁](http://www.junipertcy.info/)、[GitHub](https://github.com/junipertcy)\n\t* 台北市道路施工的分析與視覺化: [DEMO](http://junipertcy.info.s3.amazonaws.com/data_taipei/index.html)\n\t* 紐約市噪音地圖: [GitHub](https://github.com/junipertcy/uwalk)\n\t* 網絡素養教育推廣計畫: [計畫網頁](http://www.uwalks.info/index.html)\n\n2. `林子耘`: [個人網頁](http://tweddielin.com/)、[GitHub](https://github.com/tweddielin)\n\t* 台北市道路施工的分析與視覺化: [DEMO](http://junipertcy.info.s3.amazonaws.com/data_taipei/index.html)\n\t* Open Skill API Workforce Data Initiative: [GitHub](https://github.com/workforce-data-initiative/skills-ml)\n\t* Police Early Intervention System: [GitHub](https://github.com/dssg/police-eis)\n\n\n    [註]: 「台北市道路施工的分析與視覺化」是第一屆臺北市政府開放資料黑客松得獎作品。\n\t\n\n# § 這個計畫要解決什麼問題？\n\n該專案首要完成的事是「整合台灣的大學課程數據，提供可信賴、可直接應用的開放數據資源」。除了數據接口與知識網絡的展示外，我們會用整理過的數據，試著回答這些問題：\n\nQ-1. 某某系提供課程的核心價值是什麼？真的需要學生修這麼多課嗎？\n\nQ-2. 為什麼某些領域跨起來這麼簡單，有些就很難？是不是有些領域之間要相跨，就是「天然難」？\n\nQ-3. 我在中文系修過這些課。如果我想要當記者的話，我最好可以學習什麼課（知識）呢？應該不需要從大一的課開始學起吧？如果我想要增進「量化素養」呢，我可以做什麼？\n\nQ-4. 和這門課（或是這些知識）相近的課（或知識）有什麼呢？\n\n\n# § 你為什麼要做這個計劃 （ 個人動機 ）？\n個人（顏子祺）在台灣接受大學基本教育後，輾轉換了幾次工作，現在在中國從事和大學專業完全不同的軟體工程師工作。即便網路發達的現代，我們已經有了 MOOC, Coursera 等能遠程學習的工具，但是對想要換跑道的年輕求職者來說，該怎麼有效的獲取新知識，依然是困難的問題。我認為其中一個原因，是知識和工作的供需結構在近一二十年已經有很大的轉變；其中，有的領域變得更開放了，有些則變得更封閉了，而傳統我們認為的大學教育基本價值，可能已經過時。\n\n雖然教育的問題脈絡很複雜，我認為第一步是提供一個可信賴的、整理過的大學課程開放資料。這是許多教育應用的基礎建設，在中學或者大學的教育現場，甚至是迫切的需要。這可以幫助相關的討論更踏實、更能有數據支持。\n\n個人發起了[網絡素養教育推廣計畫](www.uwalks.info/networkliteracy.html)，並認為本計劃的問題能用結構化的網絡數據來幫助解決。另外，本專案的靈感，亦發想自兩個獨立的計畫：\n\n* [Hiroki Sayama 博士](http://bingweb.binghamton.edu/~sayama/)在 [NetSciEd5 會議](https://sites.google.com/a/binghamton.edu/netscied5)中的[報告](http://junipe.bitnamiapp.com/mediawiki/images/f/f0/NetSciEd5-sayama.pdf)\n* [MapEquation 網站](http://www.mapequation.org/)\n\n這兩個計畫說明用網絡的觀點看待課程數據的價值。\n\n# § 你預計用什麼方式解決此問題？\n我們希望建構 API，在`coursemap.net (暫定)`的域名下，提供中文世界的大學課程數據。其中，我們也會設計數據流，讓後端系統容易維護與延展。我們提供的數據包括：\n\n#### 課程相關數據：\n\nA-1. `GET` `/courses` `課程數據（可以分頁檢索）`\n\nA-2. `GET` `/courses/{_id}` `特定課程的數據`\n\nA-3. `GET` `/courses/{_id}/related_courses ` `特定課程的相關課程`\n\nA-4. `GET` `/courses/{_id}/related_terms` `特定課程的相關單詞`\n\nA-5. `GET` `/courses/{_id}/related_values` `特定課程的相關價值`\n\nA-6. `GET` `/courses/autocomplete` `自動補全和特定課程相關的資料`\n\n\n#### 關鍵詞相關數據：\n\nB-1. `GET` `/terms` `單詞的數據（可以分頁檢索）`\n\nB-2. `GET` `/terms/{_id}` `特定單詞的數據`\n\nB-3. `GET` `/terms/{_id}/related_terms` `特定單詞的相關單詞`\n\nB-4. `GET` `/terms/{_id}/related_courses` `特定單詞的相關課程`\n\nB-5. `GET` `/terms/autocomplete ` `自動補全和特定單詞相關的資料`\n\n#### 整合數據：\n\nC-1. `POST` `/courses?courses_taken=COURSES_TAKEN&target_values=TARGET_VALUES` `輸入已上過的課程，返回和特定領域相關的推薦課程`\n\nC-2. `POST` `/courses?courses_taken=COURSES_TAKEN&target_terms=TARGET_TERMS` `輸入已上過的課程，返回和特定關鍵詞相關的推薦課程`\n\nC-3. `GET` `/departments/{_id}/core_courses` `列出特定系所的核心課程`\n\nC-4. `GET` `/departments/{_id}/core_terms` `列出特定系所的核心關鍵詞`\n\nC-5. `GET` `/departments/{_id}/core_values` `列出特定系所的核心價值`\n\n#### 數據來源（暫定台灣五所大專院校）：\n\n1. [台大選課輔助程式](http://ntucourse.ericyu.org/)\n2. [清華大學課程網](https://www.ccxp.nthu.edu.tw/ccxp/INQUIRE/JH/6/6.2/6.2.9/JH629001.php)\n3. [交通大學課程網](http://timetable.nctu.edu.tw/)\n4. [成功大學課程網](http://course-query.acad.ncku.edu.tw/qry/)\n5. [政治大學課程網](http://wa.nccu.edu.tw/QryTor/Default.aspx?language=zh-TW)\n\n#### 工作流程與可能困難：\n \n    1. 從上述數據來源爬數據。\n\n> 我們已確認至少上述網站的內容皆能使用爬蟲爬下，惟有些網站需要驗證碼，將需要人工驗證，會困難些。另，每個網站都不一樣，我們需要訂製不同爬蟲的代碼。\n \n    2. 取得文字數據後，我們將數據去噪。\n\n> 這裡主要是自然語言處理。我們首先將中文與英文分開來，再來分別分詞。我們會用 [TF-IDF](https://en.wikipedia.org/wiki/Tf%E2%80%93idf) 分數篩選關鍵詞的權重。我們也會人工審視數據的可靠性。例如：人文科系的課程，可能只是討論某些文學作品，不一定能被分詞系統擷取出來，這時候會人為介入。\n\n    3. 去噪後，我們將分為三類數據存在 MongoDB 裡。分別是：\n       靜態數據（去噪後的基礎數據）、\n       關聯性數據（課程–課程的關聯等）、\n       應用類數據（經過演算法處理過的數據）。\n\n> 建立數據的關聯是本工作的重點，有三種方法可以建立數據的基本元素間的關聯。以化學系為例，化學系大一需要上普通化學、大二需要上有機化學。由於`有機`和`普化`都是化學系所開，且一先一後，因此這兩門課之間存在一條關聯。另外，有些課程如`生物化學`，可能在課綱中明白說明需要`先修有機`，這樣子的話，我們也可以在`生物化學`和`有機化學`之間建立關聯。除此之外，兩門課之間也可以因為具有同樣的關鍵詞而有聯繫。如`社會學`和`經濟學`都和`法律`相關，這樣子`社會學`和`經濟學`就能關聯起來。這中間存在數據稀疏的問題，我們會盡量人為介入去檢查「關聯足夠多」，有人為介入者會在數據中標記。\n\n    4. 存起來的數據，我們將使用 node.js 建立服務，讓用戶方便取用。\n\n#### 後端數據流設計：\n\n我們希望來自不同地方的課程數據，有可複用的數據處理流程。我們將使用 [Airflow](http://airbnb.io/projects/airflow/) 實作，這部份分為以下兩個要點：\n\n1. 我們將從各大課程網站爬下課程數據，我們會統一數據格式，以及定義資料內容（如：課程名稱、學校、老師、對象、大綱、要求、相關書目、人數、開課時間、地點等），將其存起來。其中課程大綱（若有）將保留原始文字檔。這部份將照顧到不同數據取用者的需求，且數據必須夠乾淨，使得未來的機器學習任務可以直接使用（機器學習任務不包括在本提案內容）。\n2. 針對不同的學校，我們設計專屬的數據存放標的。對於新的數據，我們可以更新它。\n\n#### 演算法設計：\n除了 A, B 兩類中規中矩的接口，我們會在 C 類整合數據接口中，提供經演算法處理後的數據。簡介如下：\n\n1. C-1 與 C-2: 當我們將課程與關鍵詞的結構建立好以後，便是一張網絡。問題的輸入是網絡裡特定區域的節點（修過的課/知識, `source`），以及一些特殊的節點（特殊的課, `target`）。我們將會直接從 `source` 往 `target` 搜索最短路徑，讓系統返為這條路徑上，離 `source` 最近的幾個節點。這將幫助回答上述 Q-3 的問題。\n2. C-3 到 C-5: 當課程網絡建立起來後，我們能在其上偵測社群結構（使用 [InfoMap](https://github.com/mapequation/infomap) 或 [Minimum Spanning Tree](https://en.wikipedia.org/wiki/Minimum_spanning_tree)）。這將幫助回答上述 Q-1 與 Q-2 的問題。\n\n這些算法雖然簡單，但我們可以在所作出的視覺化頁面中，檢視其合理性。\n\n# § 這個計畫的目標對象是誰？\n大學生、高中生與教育工作者。\n\n# § 這個計畫預計跟什麼團體合作？\n暫無。歡迎能直接提供以下數據的單位聯繫： (1) 學校課程數據 (2) 學生匿名後的修課記錄。\n\n# § 過去有作過相關主題的計畫嗎？\n1. `顏子祺`:\n\t* 使用 Node.js/Angular.js/MongoDB 建立 web app\n\t* 使用 D3.js/Linkurious.js 視覺化網絡\n\t* 使用 Python 分析社群網絡\n\n2. `林子耘`:\n\t* 使用 Flask/Postgres/React.js/D3.js 建立 web app\n\t* 使用 AirFlow/gensim/sci-kit learn 建立 Machine Learning Data Pipeline\n\t* 使用 theano、tensorflow 實作 deep neural net 相關應用\n\n3. 第三位工程師不願具名。其具 data mining 經驗，作過 Google 搜尋結果的大型爬蟲。\n\n# § 預計六個月內將花多少小時作這件事？需要多少經費？（30 萬到 50 萬）\n\n##### 系統維護（暫以一年估計）：\n1. AWS server（一年）：1000 元 * 6 個月 + 2000 元（存放數據後）* 6 個月 = 18000 元\n2. 域名（一年）：1000 元\n\n##### 人事（三人；第三人不願具名）：\n1. 演算法實現與接口設計\n2. 數據流架構, 網頁設計（包括維持服務、伺服器管理）\n3. 網頁爬蟲, 數據整理\n\n##### 時間分配：\n* 每週平均 36 小時開發，共 864 小時。\n* 平均一人一週 12 小時開發。以每日 8 小時計，約等於每人全職工作 1.8 個月。\n* 其中時間大致遵照上述人事任務分配；其餘用於社群協作、溝通等。\n\n##### 所需金額：46 萬。包括：\n* AWS 系統維護費用：2 萬\n* 人事費用（每人 13 萬 * 3 人）：39 萬\n* 其他（交通、接洽等雜支）：5 萬\n\n# § 打算如何讓社群參與以及回饋意見？\n\n我們會不定時的將成果展示在 coursemap.net 的網頁裡，並會創建一個 Slack 群組，在該群組內，我們參與大家的意見討論。\n\n# § 請說明專案結束時，會產出的開源軟體套件或開放授權文件（請條列個別元件的輸入輸出或其功能）？\n專案結束後，將提交三份開源軟體套件以及數據。軟體的使用說明以註釋為主，但也會附上獨立的說明，讓新工程師順利接手。產出內容分別是：\n\n1. CourseMap-service: 以 node.js 實作。主要包含上述所提示的 API。\n2. CourseMap-web: 以 angular.js 實作。包含 coursemap.net 的首頁展示，以及課程數據視覺化的頁面。此頁面將包含簡易交互，以能回答上述本計劃要解決的五大問題為主。\n3. CourseMap-utils: 以 Python 實作。包含網頁爬蟲、系統部屬等代碼，並會附上系統設計架構。\n4. Course network data: 提交的數據將會是 MongoDB 匯出的 json 檔。\n\n##### 授權：\n* 程式碼：MIT 授權\n* 課程數據、程式碼說明文件與介面設計：CC-By-4.0 授權\n\n# § 請自行定義計畫的工作里程碑與最後的驗收標準 （若沒有達成這些標準的話，我們會不給你錢喔！)\n\n##### 第一個月：\n*  訂好三大類數據（科系、課程、關鍵詞）的欄位\n*  開發爬蟲\n*  建立 coursemap.net 計畫網站（中文版）\n*  建立 aws 工作環境\n\n> 驗收項目：\n> (1) 數據欄位說明書 (包含數據間的關聯之說明);\n> (2) 工作資料流流程設計圖;\n> (3) 中文版的計畫網站。\n\n##### 第二與第三個月：\n* 使用爬蟲爬下數據（確保至少有五間學校的數據可以擷取出來）\n* 清洗數據（需要大量人工介入）\n* 儲存數據\n* coursemap.net 計畫網站加入了英文版\n* 確保從擷取數據到展示的工作流流暢\n\n> 驗收項目：\n> (1) 整理過的原始數據 (*.json, 可下載);\n> (2) 提出目前所收集數據的統計報告;\n> (3) 資料流的部屬代碼與文檔;\n> (4) 英文版的計畫網站。\n\n##### 第四個月（7/01 大黑客松期中報告）：\n*  完成 A 類與 B 類的接口\n*  能用靜態代碼完成 C 類的整合數據的運算\n*  完成一張視覺化的頁面，說明數據間的關聯\n*  以網站為主，投影片為輔，能在期中報告展示。\n\n> 驗收項目：\n> (1) 完成 A 類與 B 類的接口;\n> (2) 完成一張課程網絡視覺化且可交互的頁面 (包括 C 類數據的結果);\n> (3) 較完整的計畫網站。\n\n##### 第五與六個月：\n*  完成上述的 A, B, C 類所有接口\n*  完善說明書\n*  完善網站\n\n> 驗收項目：\n> (1) 完成 A – C 類的接口;\n> (2) 完成三類程式碼的說明書;\n> (3) 完整的計畫網站（網站將會包括：`回報錯誤`的功能）。\n\n\n# § 未來可能進一步的發展？\n\n我們認為本專案的核心在於整理數據，讓數據的質和量都能達到可直接應用的目標。數據和接口處理完成後，有以下應用：\n\n1. 製作機器學習算法，配合`職缺數據`，用來推薦學生課程（推薦取向：想發展那方面的能力？想從事哪方面的工作？），變成一個獨立的工具。這或許可以改善台灣的大學教育與就業市場學用落差的問題。\n2. 獨立做成網頁服務，收集使用者數據。這些數據也是開放資料的基礎。服務場景如：已經當上社工的學長姐們，他們在大學的時候修過什麼課呢？財金系的熱門修課路徑是什麼？\n3. 教育工作者研究使用。\n\n# § 本計畫目前是否已有、或正在申請其他的資金來源？若有，請說明申請本獎助的內容與原計畫的差異。\n無。\n\n# § 若有專案介紹的投影片，請提供：\n預計 2/3 前上傳更新。將撰寫 10 – 20 頁的投影片，介紹 (1) 專案目標 (2) 動機 (3) 執行人簡介 (4) 執行方法等。","timestamp":"2017-01-28T16:13:51.522Z","_id":"588cc33f82223f001e0228a4"},{"description":"# § 請以 80 ~ 120 字簡短地說明這個專案\n「跨界教育」在台灣是個比喻，但不是一個應用方法。該計畫將系統性的整理不同大學的課程數據，尤其各科系、課程、課綱的交互關係。我們主要的成果是一張課程地圖，在視覺上標注出特殊的知識關聯，並以數學及電腦科學方法分析該網絡，提供針對學生與教育工作者的數據接口。\n\n# § 你過去參與過什麼開源開發計畫（open source project）？\n\n1. `顏子祺`: [個人網頁](http://www.junipertcy.info/)、[GitHub](https://github.com/junipertcy)\n\t* 台北市道路施工的分析與視覺化: [DEMO](http://junipertcy.info.s3.amazonaws.com/data_taipei/index.html)\n\t* 紐約市噪音地圖: [GitHub](https://github.com/junipertcy/uwalk)\n\t* 網絡素養教育推廣計畫: [計畫網頁](http://www.uwalks.info/index.html)\n\n2. `林子耘`: [個人網頁](http://tweddielin.com/)、[GitHub](https://github.com/tweddielin)\n\t* 台北市道路施工的分析與視覺化: [DEMO](http://junipertcy.info.s3.amazonaws.com/data_taipei/index.html)\n\t* Open Skill API Workforce Data Initiative: [GitHub](https://github.com/workforce-data-initiative/skills-ml)\n\t* Police Early Intervention System: [GitHub](https://github.com/dssg/police-eis)\n\n\n    [註]: 「台北市道路施工的分析與視覺化」是第一屆臺北市政府開放資料黑客松得獎作品。\n\t\n\n# § 這個計畫要解決什麼問題？\n\n該專案首要完成的事是「整合台灣的大學課程數據，提供可信賴、可直接應用的開放數據資源」。除了數據接口與知識網絡的展示外，我們會用整理過的數據，試著回答這些問題：\n\nQ-1. 某某系提供課程的核心價值是什麼？真的需要學生修這麼多課嗎？\n\nQ-2. 為什麼某些領域跨起來這麼簡單，有些就很難？是不是有些領域之間要相跨，就是「天然難」？\n\nQ-3. 我在中文系修過這些課。如果我想要當記者的話，我最好可以學習什麼課（知識）呢？應該不需要從大一的課開始學起吧？如果我想要增進「量化素養」呢，我可以做什麼？\n\nQ-4. 和這門課（或是這些知識）相近的課（或知識）有什麼呢？\n\n\n# § 你為什麼要做這個計劃 （ 個人動機 ）？\n個人（顏子祺）在台灣接受大學基本教育後，輾轉換了幾次工作，現在在中國從事和大學專業完全不同的軟體工程師工作。即便網路發達的現代，我們已經有了 MOOC, Coursera 等能遠程學習的工具，但是對想要換跑道的年輕求職者來說，該怎麼有效的獲取新知識，依然是困難的問題。我認為其中一個原因，是知識和工作的供需結構在近一二十年已經有很大的轉變；其中，有的領域變得更開放了，有些則變得更封閉了，而傳統我們認為的大學教育基本價值，可能已經過時。\n\n雖然教育的問題脈絡很複雜，我認為第一步是提供一個可信賴的、整理過的大學課程開放資料。這是許多教育應用的基礎建設，在中學或者大學的教育現場，甚至是迫切的需要。這可以幫助相關的討論更踏實、更能有數據支持。\n\n個人發起了[網絡素養教育推廣計畫](www.uwalks.info/networkliteracy.html)，並認為本計劃的問題能用結構化的網絡數據來幫助解決。另外，本專案的靈感，亦發想自兩個獨立的計畫：\n\n* [Hiroki Sayama 博士](http://bingweb.binghamton.edu/~sayama/)在 [NetSciEd5 會議](https://sites.google.com/a/binghamton.edu/netscied5)中的[報告](http://junipe.bitnamiapp.com/mediawiki/images/f/f0/NetSciEd5-sayama.pdf)\n* [MapEquation 網站](http://www.mapequation.org/)\n\n這兩個計畫說明用網絡的觀點看待課程數據的價值。\n\n# § 你預計用什麼方式解決此問題？\n我們希望建構 API，在`coursemap.net (暫定)`的域名下，提供中文世界的大學課程數據。其中，我們也會設計數據流，讓後端系統容易維護與延展。我們提供的數據包括：\n\n#### 課程相關數據：\n\nA-1. `GET` `/courses` `課程數據（可以分頁檢索）`\n\nA-2. `GET` `/courses/{_id}` `特定課程的數據`\n\nA-3. `GET` `/courses/{_id}/related_courses ` `特定課程的相關課程`\n\nA-4. `GET` `/courses/{_id}/related_terms` `特定課程的相關單詞`\n\nA-5. `GET` `/courses/{_id}/related_values` `特定課程的相關價值`\n\nA-6. `GET` `/courses/autocomplete` `自動補全和特定課程相關的資料`\n\n\n#### 關鍵詞相關數據：\n\nB-1. `GET` `/terms` `單詞的數據（可以分頁檢索）`\n\nB-2. `GET` `/terms/{_id}` `特定單詞的數據`\n\nB-3. `GET` `/terms/{_id}/related_terms` `特定單詞的相關單詞`\n\nB-4. `GET` `/terms/{_id}/related_courses` `特定單詞的相關課程`\n\nB-5. `GET` `/terms/autocomplete ` `自動補全和特定單詞相關的資料`\n\n#### 整合數據：\n\nC-1. `POST` `/courses?courses_taken=COURSES_TAKEN&target_values=TARGET_VALUES` `輸入已上過的課程，返回和特定領域相關的推薦課程`\n\nC-2. `POST` `/courses?courses_taken=COURSES_TAKEN&target_terms=TARGET_TERMS` `輸入已上過的課程，返回和特定關鍵詞相關的推薦課程`\n\nC-3. `GET` `/departments/{_id}/core_courses` `列出特定系所的核心課程`\n\nC-4. `GET` `/departments/{_id}/core_terms` `列出特定系所的核心關鍵詞`\n\nC-5. `GET` `/departments/{_id}/core_values` `列出特定系所的核心價值`\n\n#### 數據來源（暫定台灣五所大專院校）：\n\n1. [台大選課輔助程式](http://ntucourse.ericyu.org/)\n2. [清華大學課程網](https://www.ccxp.nthu.edu.tw/ccxp/INQUIRE/JH/6/6.2/6.2.9/JH629001.php)\n3. [交通大學課程網](http://timetable.nctu.edu.tw/)\n4. [成功大學課程網](http://course-query.acad.ncku.edu.tw/qry/)\n5. [政治大學課程網](http://wa.nccu.edu.tw/QryTor/Default.aspx?language=zh-TW)\n\n#### 工作流程與可能困難：\n \n    1. 從上述數據來源爬數據。\n\n> 我們已確認至少上述網站的內容皆能使用爬蟲爬下，惟有些網站需要驗證碼，將需要人工驗證，會困難些。另，每個網站都不一樣，我們需要訂製不同爬蟲的代碼。\n \n    2. 取得文字數據後，我們將數據去噪。\n\n> 這裡主要是自然語言處理。我們首先將中文與英文分開來，再來分別分詞。我們會用 [TF-IDF](https://en.wikipedia.org/wiki/Tf%E2%80%93idf) 分數篩選關鍵詞的權重。我們也會人工審視數據的可靠性。例如：人文科系的課程，可能只是討論某些文學作品，不一定能被分詞系統擷取出來，這時候會人為介入。\n\n    3. 去噪後，我們將分為三類數據存在 MongoDB 裡。分別是：\n       靜態數據（去噪後的基礎數據）、\n       關聯性數據（課程–課程的關聯等）、\n       應用類數據（經過演算法處理過的數據）。\n\n> 建立數據的關聯是本工作的重點，有三種方法可以建立數據的基本元素間的關聯。以化學系為例，化學系大一需要上普通化學、大二需要上有機化學。由於`有機`和`普化`都是化學系所開，且一先一後，因此這兩門課之間存在一條關聯。另外，有些課程如`生物化學`，可能在課綱中明白說明需要`先修有機`，這樣子的話，我們也可以在`生物化學`和`有機化學`之間建立關聯。除此之外，兩門課之間也可以因為具有同樣的關鍵詞而有聯繫。如`社會學`和`經濟學`都和`法律`相關，這樣子`社會學`和`經濟學`就能關聯起來。這中間存在數據稀疏的問題，我們會盡量人為介入去檢查「關聯足夠多」，有人為介入者會在數據中標記。\n\n    4. 存起來的數據，我們將使用 node.js 建立服務，讓用戶方便取用。\n\n#### 後端數據流設計：\n\n我們希望來自不同地方的課程數據，有可複用的數據處理流程。我們將使用 [Airflow](http://airbnb.io/projects/airflow/) 實作，這部份分為以下兩個要點：\n\n1. 我們將從各大課程網站爬下課程數據，我們會統一數據格式，以及定義資料內容（如：課程名稱、學校、老師、對象、大綱、要求、相關書目、人數、開課時間、地點等），將其存起來。其中課程大綱（若有）將保留原始文字檔。這部份將照顧到不同數據取用者的需求，且數據必須夠乾淨，使得未來的機器學習任務可以直接使用（機器學習任務不包括在本提案內容）。\n2. 針對不同的學校，我們設計專屬的數據存放標的。對於新的數據，我們可以更新它。\n\n#### 演算法設計：\n除了 A, B 兩類中規中矩的接口，我們會在 C 類整合數據接口中，提供經演算法處理後的數據。簡介如下：\n\n1. C-1 與 C-2: 當我們將課程與關鍵詞的結構建立好以後，便是一張網絡。問題的輸入是網絡裡特定區域的節點（修過的課/知識, `source`），以及一些特殊的節點（特殊的課, `target`）。我們將會直接從 `source` 往 `target` 搜索最短路徑，讓系統返為這條路徑上，離 `source` 最近的幾個節點。這將幫助回答上述 Q-3 的問題。\n2. C-3 到 C-5: 當課程網絡建立起來後，我們能在其上偵測社群結構（使用 [InfoMap](https://github.com/mapequation/infomap) 或 [Minimum Spanning Tree](https://en.wikipedia.org/wiki/Minimum_spanning_tree)）。這將幫助回答上述 Q-1 與 Q-2 的問題。\n\n這些算法雖然簡單，但我們可以在所作出的視覺化頁面中，檢視其合理性。\n\n# § 這個計畫的目標對象是誰？\n大學生、高中生與教育工作者。\n\n# § 這個計畫預計跟什麼團體合作？\n暫無。歡迎能直接提供以下數據的單位聯繫： (1) 學校課程數據 (2) 學生匿名後的修課記錄。\n\n# § 過去有作過相關主題的計畫嗎？\n1. `顏子祺`:\n\t* 使用 Node.js/Angular.js/MongoDB 建立 web app\n\t* 使用 D3.js/Linkurious.js 視覺化網絡\n\t* 使用 Python 分析社群網絡\n\n2. `林子耘`:\n\t* 使用 Flask/Postgres/React.js/D3.js 建立 web app\n\t* 使用 AirFlow/gensim/sci-kit learn 建立 Machine Learning Data Pipeline\n\t* 使用 theano、tensorflow 實作 deep neural net 相關應用\n\n3. 第三位工程師不願具名。其具 data mining 經驗，作過 Google 搜尋結果的大型爬蟲。\n\n# § 預計六個月內將花多少小時作這件事？需要多少經費？（30 萬到 50 萬）\n\n##### 系統維護（暫以一年估計）：\n1. AWS server（一年）：1000 元 × 6 個月 + 2000 元（存放數據後）× 6 個月 = 18000 元\n2. 域名（一年）：1000 元\n\n##### 人事（三人；第三人不願具名）：\n1. 演算法實現與接口設計\n2. 數據流架構, 網頁設計（包括維持服務、伺服器管理）\n3. 網頁爬蟲, 數據整理\n\n##### 時間分配：\n* 每週平均 36 小時開發，共 864 小時。\n* 平均一人一週 12 小時開發。以每日 8 小時計，約等於每人全職工作 1.8 個月。\n* 其中時間大致遵照上述人事任務分配；其餘用於社群協作、溝通等。\n\n##### 所需金額：46 萬。包括：\n* AWS 系統維護費用：2 萬\n* 人事費用（每人 13 萬 × 3 人）：39 萬\n* 其他（交通、接洽等雜支）：5 萬\n\n# § 打算如何讓社群參與以及回饋意見？\n\n我們會不定時的將成果展示在 coursemap.net 的網頁裡，並會創建一個 Slack 群組，在該群組內，我們參與大家的意見討論。\n\n# § 請說明專案結束時，會產出的開源軟體套件或開放授權文件（請條列個別元件的輸入輸出或其功能）？\n專案結束後，將提交三份開源軟體套件以及數據。軟體的使用說明以註釋為主，但也會附上獨立的說明，讓新工程師順利接手。產出內容分別是：\n\n1. CourseMap-service: 以 node.js 實作。主要包含上述所提示的 API。\n2. CourseMap-web: 以 angular.js 實作。包含 coursemap.net 的首頁展示，以及課程數據視覺化的頁面。此頁面將包含簡易交互，以能回答上述本計劃要解決的五大問題為主。\n3. CourseMap-utils: 以 Python 實作。包含網頁爬蟲、系統部屬等代碼，並會附上系統設計架構。\n4. Course network data: 提交的數據將會是 MongoDB 匯出的 json 檔。\n\n##### 授權：\n* 程式碼：MIT 授權\n* 課程數據、程式碼說明文件與介面設計：CC-By-4.0 授權\n\n# § 請自行定義計畫的工作里程碑與最後的驗收標準 （若沒有達成這些標準的話，我們會不給你錢喔！)\n\n##### 第一個月：\n*  訂好三大類數據（科系、課程、關鍵詞）的欄位\n*  開發爬蟲\n*  建立 coursemap.net 計畫網站（中文版）\n*  建立 aws 工作環境\n\n> 驗收項目：\n> (1) 數據欄位說明書 (包含數據間的關聯之說明);\n> (2) 工作資料流流程設計圖;\n> (3) 中文版的計畫網站。\n\n##### 第二與第三個月：\n* 使用爬蟲爬下數據（確保至少有五間學校的數據可以擷取出來）\n* 清洗數據（需要大量人工介入）\n* 儲存數據\n* coursemap.net 計畫網站加入了英文版\n* 確保從擷取數據到展示的工作流流暢\n\n> 驗收項目：\n> (1) 整理過的原始數據 (*.json, 可下載);\n> (2) 提出目前所收集數據的統計報告;\n> (3) 資料流的部屬代碼與文檔;\n> (4) 英文版的計畫網站。\n\n##### 第四個月（7/01 大黑客松期中報告）：\n*  完成 A 類與 B 類的接口\n*  能用靜態代碼完成 C 類的整合數據的運算\n*  完成一張視覺化的頁面，說明數據間的關聯\n*  以網站為主，投影片為輔，能在期中報告展示。\n\n> 驗收項目：\n> (1) 完成 A 類與 B 類的接口;\n> (2) 完成一張課程網絡視覺化且可交互的頁面 (包括 C 類數據的結果);\n> (3) 較完整的計畫網站。\n\n##### 第五與六個月：\n*  完成上述的 A, B, C 類所有接口\n*  完善說明書\n*  完善網站\n\n> 驗收項目：\n> (1) 完成 A – C 類的接口;\n> (2) 完成三類程式碼的說明書;\n> (3) 完整的計畫網站（網站將會包括：`回報錯誤`的功能）。\n\n\n# § 未來可能進一步的發展？\n\n我們認為本專案的核心在於整理數據，讓數據的質和量都能達到可直接應用的目標。數據和接口處理完成後，有以下應用：\n\n1. 製作機器學習算法，配合`職缺數據`，用來推薦學生課程（推薦取向：想發展那方面的能力？想從事哪方面的工作？），變成一個獨立的工具。這或許可以改善台灣的大學教育與就業市場學用落差的問題。\n2. 獨立做成網頁服務，收集使用者數據。這些數據也是開放資料的基礎。服務場景如：已經當上社工的學長姐們，他們在大學的時候修過什麼課呢？財金系的熱門修課路徑是什麼？\n3. 教育工作者研究使用。\n\n# § 本計畫目前是否已有、或正在申請其他的資金來源？若有，請說明申請本獎助的內容與原計畫的差異。\n無。\n\n# § 若有專案介紹的投影片，請提供：\n預計 2/3 前上傳更新。將撰寫 10 – 20 頁的投影片，介紹 (1) 專案目標 (2) 動機 (3) 執行人簡介 (4) 執行方法等。","timestamp":"2017-02-13T15:02:02.610Z","_id":"58a1ca6af648d8001ea7a8a3"},{"description":"# § 請以 80 ~ 120 字簡短地說明這個專案\n「跨界教育」在台灣是個比喻，但不是一個應用方法。該計畫將系統性的整理不同大學的課程數據，尤其各科系、課程、課綱的交互關係。我們主要的成果是一張課程地圖，在視覺上標注出特殊的知識關聯，並以數學及電腦科學方法分析該網絡，提供針對學生與教育工作者的數據接口。\n\n# § 你過去參與過什麼開源開發計畫（open source project）？\n\n1. `顏子祺`: [個人網頁](http://www.junipertcy.info/)、[GitHub](https://github.com/junipertcy)\n\t* 台北市道路施工的分析與視覺化: [DEMO](http://junipertcy.info.s3.amazonaws.com/data_taipei/index.html)\n\t* 紐約市噪音地圖: [GitHub](https://github.com/junipertcy/uwalk)\n\t* 網絡素養教育推廣計畫: [計畫網頁](http://www.uwalks.info/index.html)\n\n2. `林子耘`: [個人網頁](http://tweddielin.com/)、[GitHub](https://github.com/tweddielin)\n\t* 台北市道路施工的分析與視覺化: [DEMO](http://junipertcy.info.s3.amazonaws.com/data_taipei/index.html)\n\t* Open Skill API Workforce Data Initiative: [GitHub](https://github.com/workforce-data-initiative/skills-ml)\n\t* Police Early Intervention System: [GitHub](https://github.com/dssg/police-eis)\n\n\n    [註]: 「台北市道路施工的分析與視覺化」是第一屆臺北市政府開放資料黑客松得獎作品。\n\t\n\n# § 這個計畫要解決什麼問題？\n\n該專案首要完成的事是「整合台灣的大學課程數據，提供可信賴、可直接應用的開放數據資源」。除了數據接口與知識網絡的展示外，我們會用整理過的數據，試著回答這些問題：\n\nQ-1. 某某系提供課程的核心價值是什麼？真的需要學生修這麼多課嗎？\n\nQ-2. 為什麼某些領域跨起來這麼簡單，有些就很難？是不是有些領域之間要相跨，就是「天然難」？\n\nQ-3. 我在中文系修過這些課。如果我想要當記者的話，我最好可以學習什麼課（知識）呢？應該不需要從大一的課開始學起吧？如果我想要增進「量化素養」呢，我可以做什麼？\n\nQ-4. 和這門課（或是這些知識）相近的課（或知識）有什麼呢？\n\n\n# § 你為什麼要做這個計劃 （ 個人動機 ）？\n個人（顏子祺）在台灣接受大學基本教育後，輾轉換了幾次工作，現在在中國從事和大學專業完全不同的軟體工程師工作。即便網路發達的現代，我們已經有了 MOOC, Coursera 等能遠程學習的工具，但是對想要換跑道的年輕求職者來說，該怎麼有效的獲取新知識，依然是困難的問題。我認為其中一個原因，是知識和工作的供需結構在近一二十年已經有很大的轉變；其中，有的領域變得更開放了，有些則變得更封閉了，而傳統我們認為的大學教育基本價值，可能已經過時。\n\n雖然教育的問題脈絡很複雜，我認為第一步是提供一個可信賴的、整理過的大學課程開放資料。這是許多教育應用的基礎建設，在中學或者大學的教育現場，甚至是迫切的需要。這可以幫助相關的討論更踏實、更能有數據支持。\n\n個人發起了[網絡素養教育推廣計畫](www.uwalks.info/networkliteracy.html)，並認為本計劃的問題能用結構化的網絡數據來幫助解決。另外，本專案的靈感，亦發想自兩個獨立的計畫：\n\n* [Hiroki Sayama 博士](http://bingweb.binghamton.edu/~sayama/)在 [NetSciEd5 會議](https://sites.google.com/a/binghamton.edu/netscied5)中的[報告](http://junipe.bitnamiapp.com/mediawiki/images/f/f0/NetSciEd5-sayama.pdf)\n* [MapEquation 網站](http://www.mapequation.org/)\n\n這兩個計畫說明用網絡的觀點看待課程數據的價值。\n\n# § 你預計用什麼方式解決此問題？\n我們希望建構 API，在`coursemap.net (暫定)`的域名下，提供中文世界的大學課程數據。其中，我們也會設計數據流，讓後端系統容易維護與延展。我們提供的數據包括：\n\n#### 課程相關數據：\n\nA-1. `GET` `/courses` `課程數據（可以分頁檢索）`\n\nA-2. `GET` `/courses/{_id}` `特定課程的數據`\n\nA-3. `GET` `/courses/{_id}/related_courses ` `特定課程的相關課程`\n\nA-4. `GET` `/courses/{_id}/related_terms` `特定課程的相關單詞`\n\nA-5. `GET` `/courses/{_id}/related_values` `特定課程的相關價值`\n\nA-6. `GET` `/courses/autocomplete` `自動補全和特定課程相關的資料`\n\n\n#### 關鍵詞相關數據：\n\nB-1. `GET` `/terms` `單詞的數據（可以分頁檢索）`\n\nB-2. `GET` `/terms/{_id}` `特定單詞的數據`\n\nB-3. `GET` `/terms/{_id}/related_terms` `特定單詞的相關單詞`\n\nB-4. `GET` `/terms/{_id}/related_courses` `特定單詞的相關課程`\n\nB-5. `GET` `/terms/autocomplete ` `自動補全和特定單詞相關的資料`\n\n#### 整合數據：\n\nC-1. `POST` `/courses?courses_taken=COURSES_TAKEN&target_values=TARGET_VALUES` `輸入已上過的課程，返回和特定領域相關的推薦課程`\n\nC-2. `POST` `/courses?courses_taken=COURSES_TAKEN&target_terms=TARGET_TERMS` `輸入已上過的課程，返回和特定關鍵詞相關的推薦課程`\n\nC-3. `GET` `/departments/{_id}/core_courses` `列出特定系所的核心課程`\n\nC-4. `GET` `/departments/{_id}/core_terms` `列出特定系所的核心關鍵詞`\n\nC-5. `GET` `/departments/{_id}/core_values` `列出特定系所的核心價值`\n\n#### 數據來源（暫定台灣五所大專院校）：\n\n1. [台大選課輔助程式](http://ntucourse.ericyu.org/)\n2. [清華大學課程網](https://www.ccxp.nthu.edu.tw/ccxp/INQUIRE/JH/6/6.2/6.2.9/JH629001.php)\n3. [交通大學課程網](http://timetable.nctu.edu.tw/)\n4. [成功大學課程網](http://course-query.acad.ncku.edu.tw/qry/)\n5. [政治大學課程網](http://wa.nccu.edu.tw/QryTor/Default.aspx?language=zh-TW)\n\n#### 工作流程與可能困難：\n \n    1. 從上述數據來源爬數據。\n\n> 我們已確認至少上述網站的內容皆能使用爬蟲爬下，惟有些網站需要驗證碼，將需要人工驗證，會困難些。另，每個網站都不一樣，我們需要訂製不同爬蟲的代碼。\n \n    2. 取得文字數據後，我們將數據去噪。\n\n> 這裡主要是自然語言處理。我們首先將中文與英文分開來，再來分別分詞。我們會用 [TF-IDF](https://en.wikipedia.org/wiki/Tf%E2%80%93idf) 分數篩選關鍵詞的權重。我們也會人工審視數據的可靠性。例如：人文科系的課程，可能只是討論某些文學作品，不一定能被分詞系統擷取出來，這時候會人為介入。\n\n    3. 去噪後，我們將分為三類數據存在 MongoDB 裡。分別是：\n       靜態數據（去噪後的基礎數據）、\n       關聯性數據（課程–課程的關聯等）、\n       應用類數據（經過演算法處理過的數據）。\n\n> 建立數據的關聯是本工作的重點，有三種方法可以建立數據的基本元素間的關聯。以化學系為例，化學系大一需要上普通化學、大二需要上有機化學。由於`有機`和`普化`都是化學系所開，且一先一後，因此這兩門課之間存在一條關聯。另外，有些課程如`生物化學`，可能在課綱中明白說明需要`先修有機`，這樣子的話，我們也可以在`生物化學`和`有機化學`之間建立關聯。除此之外，兩門課之間也可以因為具有同樣的關鍵詞而有聯繫。如`社會學`和`經濟學`都和`法律`相關，這樣子`社會學`和`經濟學`就能關聯起來。這中間存在數據稀疏的問題，我們會盡量人為介入去檢查「關聯足夠多」，有人為介入者會在數據中標記。\n\n    4. 存起來的數據，我們將使用 node.js 建立服務，讓用戶方便取用。\n\n#### 後端數據流設計：\n\n我們希望來自不同地方的課程數據，有可複用的數據處理流程。我們將使用 [Airflow](http://airbnb.io/projects/airflow/) 實作，這部份分為以下兩個要點：\n\n1. 我們將從各大課程網站爬下課程數據，我們會統一數據格式，以及定義資料內容（如：課程名稱、學校、老師、對象、大綱、要求、相關書目、人數、開課時間、地點等），將其存起來。其中課程大綱（若有）將保留原始文字檔。這部份將照顧到不同數據取用者的需求，且數據必須夠乾淨，使得未來的機器學習任務可以直接使用（機器學習任務不包括在本提案內容）。\n2. 針對不同的學校，我們設計專屬的數據存放標的。對於新的數據，我們可以更新它。\n\n#### 演算法設計：\n除了 A, B 兩類中規中矩的接口，我們會在 C 類整合數據接口中，提供經演算法處理後的數據。簡介如下：\n\n1. C-1 與 C-2: 當我們將課程與關鍵詞的結構建立好以後，便是一張網絡。問題的輸入是網絡裡特定區域的節點（修過的課/知識, `source`），以及一些特殊的節點（特殊的課, `target`）。我們將會直接從 `source` 往 `target` 搜索最短路徑，讓系統返為這條路徑上，離 `source` 最近的幾個節點。這將幫助回答上述 Q-3 的問題。\n2. C-3 到 C-5: 當課程網絡建立起來後，我們能在其上偵測社群結構（使用 [InfoMap](https://github.com/mapequation/infomap) 或 [Minimum Spanning Tree](https://en.wikipedia.org/wiki/Minimum_spanning_tree)）。這將幫助回答上述 Q-1 與 Q-2 的問題。\n\n這些算法雖然簡單，但我們可以在所作出的視覺化頁面中，檢視其合理性。\n\n![Data Pipeline](http://junipertcy.info.s3.amazonaws.com/coursemap/data-pipeline.png)\n\n# § 這個計畫的目標對象是誰？\n大學生、高中生與教育工作者。\n\n# § 這個計畫預計跟什麼團體合作？\n暫無。歡迎能直接提供以下數據的單位聯繫： (1) 學校課程數據 (2) 學生匿名後的修課記錄。\n\n# § 過去有作過相關主題的計畫嗎？\n1. `顏子祺`:\n\t* 使用 Node.js/Angular.js/MongoDB 建立 web app\n\t* 使用 D3.js/Linkurious.js 視覺化網絡\n\t* 使用 Python 分析社群網絡\n\n2. `林子耘`:\n\t* 使用 Flask/Postgres/React.js/D3.js 建立 web app\n\t* 使用 AirFlow/gensim/sci-kit learn 建立 Machine Learning Data Pipeline\n\t* 使用 theano、tensorflow 實作 deep neural net 相關應用\n\n3. 第三位工程師不願具名。其具 data mining 經驗，作過 Google 搜尋結果的大型爬蟲。\n\n# § 預計六個月內將花多少小時作這件事？需要多少經費？（30 萬到 50 萬）\n\n##### 系統維護（暫以一年估計）：\n1. AWS server（一年）：1000 元 × 6 個月 + 2000 元（存放數據後）× 6 個月 = 18000 元\n2. 域名（一年）：1000 元\n\n##### 人事（三人；第三人不願具名）：\n1. 演算法實現與接口設計\n2. 數據流架構, 網頁設計（包括維持服務、伺服器管理）\n3. 網頁爬蟲, 數據整理\n\n##### 時間分配：\n* 每週平均 36 小時開發，共 864 小時。\n* 平均一人一週 12 小時開發。以每日 8 小時計，約等於每人全職工作 1.8 個月。\n* 其中時間大致遵照上述人事任務分配；其餘用於社群協作、溝通等。\n\n##### 所需金額：46 萬。包括：\n* AWS 系統維護費用：2 萬\n* 人事費用（每人 13 萬 × 3 人）：39 萬\n* 其他（交通、接洽等雜支）：5 萬\n\n# § 打算如何讓社群參與以及回饋意見？\n\n我們會不定時的將成果展示在 coursemap.net 的網頁裡，並會創建一個 Slack 群組，在該群組內，我們參與大家的意見討論。\n\n# § 請說明專案結束時，會產出的開源軟體套件或開放授權文件（請條列個別元件的輸入輸出或其功能）？\n專案結束後，將提交三份開源軟體套件以及數據。軟體的使用說明以註釋為主，但也會附上獨立的說明，讓新工程師順利接手。產出內容分別是：\n\n1. CourseMap-service: 以 node.js 實作。主要包含上述所提示的 API。\n2. CourseMap-web: 以 angular.js 實作。包含 coursemap.net 的首頁展示，以及課程數據視覺化的頁面。此頁面將包含簡易交互，以能回答上述本計劃要解決的五大問題為主。\n3. CourseMap-utils: 以 Python 實作。包含網頁爬蟲、系統部屬等代碼，並會附上系統設計架構。\n4. Course network data: 提交的數據將會是 MongoDB 匯出的 json 檔。\n\n##### 授權：\n* 程式碼：MIT 授權\n* 課程數據、程式碼說明文件與介面設計：CC-By-4.0 授權\n\n# § 請自行定義計畫的工作里程碑與最後的驗收標準 （若沒有達成這些標準的話，我們會不給你錢喔！)\n\n##### 第一個月：\n*  訂好三大類數據（科系、課程、關鍵詞）的欄位\n*  開發爬蟲\n*  建立 coursemap.net 計畫網站（中文版）\n*  建立 aws 工作環境\n\n> 驗收項目：\n> (1) 數據欄位說明書 (包含數據間的關聯之說明);\n> (2) 工作資料流流程設計圖;\n> (3) 中文版的計畫網站。\n\n##### 第二與第三個月：\n* 使用爬蟲爬下數據（確保至少有五間學校的數據可以擷取出來）\n* 清洗數據（需要大量人工介入）\n* 儲存數據\n* coursemap.net 計畫網站加入了英文版\n* 確保從擷取數據到展示的工作流流暢\n\n> 驗收項目：\n> (1) 整理過的原始數據 (*.json, 可下載);\n> (2) 提出目前所收集數據的統計報告;\n> (3) 資料流的部屬代碼與文檔;\n> (4) 英文版的計畫網站。\n\n##### 第四個月（7/01 大黑客松期中報告）：\n*  完成 A 類與 B 類的接口\n*  能用靜態代碼完成 C 類的整合數據的運算\n*  完成一張視覺化的頁面，說明數據間的關聯\n*  以網站為主，投影片為輔，能在期中報告展示。\n\n> 驗收項目：\n> (1) 完成 A 類與 B 類的接口;\n> (2) 完成一張課程網絡視覺化且可交互的頁面 (包括 C 類數據的結果);\n> (3) 較完整的計畫網站。\n\n##### 第五與六個月：\n*  完成上述的 A, B, C 類所有接口\n*  完善說明書\n*  完善網站\n\n> 驗收項目：\n> (1) 完成 A – C 類的接口;\n> (2) 完成三類程式碼的說明書;\n> (3) 完整的計畫網站（網站將會包括：`回報錯誤`的功能）。\n\n\n# § 未來可能進一步的發展？\n\n我們認為本專案的核心在於整理數據，讓數據的質和量都能達到可直接應用的目標。數據和接口處理完成後，有以下應用：\n\n1. 製作機器學習算法，配合`職缺數據`，用來推薦學生課程（推薦取向：想發展那方面的能力？想從事哪方面的工作？），變成一個獨立的工具。這或許可以改善台灣的大學教育與就業市場學用落差的問題。\n2. 獨立做成網頁服務，收集使用者數據。這些數據也是開放資料的基礎。服務場景如：已經當上社工的學長姐們，他們在大學的時候修過什麼課呢？財金系的熱門修課路徑是什麼？\n3. 教育工作者研究使用。\n\n# § 本計畫目前是否已有、或正在申請其他的資金來源？若有，請說明申請本獎助的內容與原計畫的差異。\n無。\n\n# § 若有專案介紹的投影片，請提供：\n預計 2/3 前上傳更新。將撰寫 10 – 20 頁的投影片，介紹 (1) 專案目標 (2) 動機 (3) 執行人簡介 (4) 執行方法等。","timestamp":"2017-02-13T15:38:26.706Z","_id":"58a1d2f2f648d8001ea7a8c1"},{"description":"# § 請以 80 ~ 120 字簡短地說明這個專案\n「跨界教育」在台灣是個比喻，但不是一個應用方法。該計畫將系統性的整理不同大學的課程數據，尤其各科系、課程、課綱的交互關係。我們主要的成果是一張課程地圖，在視覺上標注出特殊的知識關聯，並以數學及電腦科學方法分析該網絡，提供針對學生與教育工作者的數據接口。\n\n# § 你過去參與過什麼開源開發計畫（open source project）？\n\n1. `顏子祺`: [個人網頁](http://www.junipertcy.info/)、[GitHub](https://github.com/junipertcy)\n\t* 台北市道路施工的分析與視覺化: [DEMO](http://junipertcy.info.s3.amazonaws.com/data_taipei/index.html)\n\t* 紐約市噪音地圖: [GitHub](https://github.com/junipertcy/uwalk)\n\t* 網絡素養教育推廣計畫: [計畫網頁](http://www.uwalks.info/index.html)\n\n2. `林子耘`: [個人網頁](http://tweddielin.com/)、[GitHub](https://github.com/tweddielin)\n\t* 台北市道路施工的分析與視覺化: [DEMO](http://junipertcy.info.s3.amazonaws.com/data_taipei/index.html)\n\t* Open Skill API Workforce Data Initiative: [GitHub](https://github.com/workforce-data-initiative/skills-ml)\n\t* Police Early Intervention System: [GitHub](https://github.com/dssg/police-eis)\n\n\n    [註]: 「台北市道路施工的分析與視覺化」是第一屆臺北市政府開放資料黑客松得獎作品。\n\t\n\n# § 這個計畫要解決什麼問題？\n\n該專案首要完成的事是「整合台灣的大學課程數據，提供可信賴、可直接應用的開放數據資源」。除了數據接口與知識網絡的展示外，我們會用整理過的數據，試著回答這些問題：\n\nQ-1. 某某系提供課程的核心價值是什麼？真的需要學生修這麼多課嗎？\n\nQ-2. 為什麼某些領域跨起來這麼簡單，有些就很難？是不是有些領域之間要相跨，就是「天然難」？\n\nQ-3. 我在中文系修過這些課。如果我想要當記者的話，我最好可以學習什麼課（知識）呢？應該不需要從大一的課開始學起吧？如果我想要增進「量化素養」呢，我可以做什麼？\n\nQ-4. 和這門課（或是這些知識）相近的課（或知識）有什麼呢？\n\n\n# § 你為什麼要做這個計劃 （ 個人動機 ）？\n個人（顏子祺）在台灣接受大學基本教育後，輾轉換了幾次工作，現在在中國從事和大學專業完全不同的軟體工程師工作。即便網路發達的現代，我們已經有了 MOOC, Coursera 等能遠程學習的工具，但是對想要換跑道的年輕求職者來說，該怎麼有效的獲取新知識，依然是困難的問題。我認為其中一個原因，是知識和工作的供需結構在近一二十年已經有很大的轉變；其中，有的領域變得更開放了，有些則變得更封閉了，而傳統我們認為的大學教育基本價值，可能已經過時。\n\n雖然教育的問題脈絡很複雜，我認為第一步是提供一個可信賴的、整理過的大學課程開放資料。這是許多教育應用的基礎建設，在中學或者大學的教育現場，甚至是迫切的需要。這可以幫助相關的討論更踏實、更能有數據支持。\n\n個人發起了[網絡素養教育推廣計畫](www.uwalks.info/networkliteracy.html)，並認為本計劃的問題能用結構化的網絡數據來幫助解決。另外，本專案的靈感，亦發想自兩個獨立的計畫：\n\n* [Hiroki Sayama 博士](http://bingweb.binghamton.edu/~sayama/)在 [NetSciEd5 會議](https://sites.google.com/a/binghamton.edu/netscied5)中的[報告](http://junipe.bitnamiapp.com/mediawiki/images/f/f0/NetSciEd5-sayama.pdf)\n* [MapEquation 網站](http://www.mapequation.org/)\n\n這兩個計畫說明用網絡的觀點看待課程數據的價值。\n\n# § 你預計用什麼方式解決此問題？\n我們希望建構 API，在`coursemap.org`的域名下，提供中文世界的大學課程數據。其中，我們也會設計數據流，讓後端系統容易維護與延展。我們提供的數據包括：\n\n#### 課程相關數據：\n\nA-1. `GET` `/courses` `課程數據（可以分頁檢索）`\n\nA-2. `GET` `/courses/{_id}` `特定課程的數據`\n\nA-3. `GET` `/courses/{_id}/related_courses ` `特定課程的相關課程`\n\nA-4. `GET` `/courses/{_id}/related_terms` `特定課程的相關單詞`\n\nA-5. `GET` `/courses/{_id}/related_values` `特定課程的相關價值`\n\nA-6. `GET` `/courses/autocomplete` `自動補全和特定課程相關的資料`\n\n\n#### 關鍵詞相關數據：\n\nB-1. `GET` `/terms` `單詞的數據（可以分頁檢索）`\n\nB-2. `GET` `/terms/{_id}` `特定單詞的數據`\n\nB-3. `GET` `/terms/{_id}/related_terms` `特定單詞的相關單詞`\n\nB-4. `GET` `/terms/{_id}/related_courses` `特定單詞的相關課程`\n\nB-5. `GET` `/terms/autocomplete ` `自動補全和特定單詞相關的資料`\n\n#### 整合數據：\n\nC-1. `POST` `/courses?courses_taken=COURSES_TAKEN&target_values=TARGET_VALUES` `輸入已上過的課程，返回和特定領域相關的推薦課程`\n\nC-2. `POST` `/courses?courses_taken=COURSES_TAKEN&target_terms=TARGET_TERMS` `輸入已上過的課程，返回和特定關鍵詞相關的推薦課程`\n\nC-3. `GET` `/departments/{_id}/core_courses` `列出特定系所的核心課程`\n\nC-4. `GET` `/departments/{_id}/core_terms` `列出特定系所的核心關鍵詞`\n\nC-5. `GET` `/departments/{_id}/core_values` `列出特定系所的核心價值`\n\n#### 數據來源（暫定台灣五所大專院校）：\n\n1. [台大選課輔助程式](http://ntucourse.ericyu.org/)\n2. [清華大學課程網](https://www.ccxp.nthu.edu.tw/ccxp/INQUIRE/JH/6/6.2/6.2.9/JH629001.php)\n3. [交通大學課程網](http://timetable.nctu.edu.tw/)\n4. [成功大學課程網](http://course-query.acad.ncku.edu.tw/qry/)\n5. [政治大學課程網](http://wa.nccu.edu.tw/QryTor/Default.aspx?language=zh-TW)\n\n#### 工作流程與可能困難：\n \n    1. 從上述數據來源爬數據。\n\n> 我們已確認至少上述網站的內容皆能使用爬蟲爬下，惟有些網站需要驗證碼，將需要人工驗證，會困難些。另，每個網站都不一樣，我們需要訂製不同爬蟲的代碼。\n \n    2. 取得文字數據後，我們將數據去噪。\n\n> 這裡主要是自然語言處理。我們首先將中文與英文分開來，再來分別分詞。我們會用 [TF-IDF](https://en.wikipedia.org/wiki/Tf%E2%80%93idf) 分數篩選關鍵詞的權重。我們也會人工審視數據的可靠性。例如：人文科系的課程，可能只是討論某些文學作品，不一定能被分詞系統擷取出來，這時候會人為介入。\n\n    3. 去噪後，我們將分為三類數據存在 MongoDB 裡。分別是：\n       靜態數據（去噪後的基礎數據）、\n       關聯性數據（課程–課程的關聯等）、\n       應用類數據（經過演算法處理過的數據）。\n\n> 建立數據的關聯是本工作的重點，有三種方法可以建立數據的基本元素間的關聯。以化學系為例，化學系大一需要上普通化學、大二需要上有機化學。由於`有機`和`普化`都是化學系所開，且一先一後，因此這兩門課之間存在一條關聯。另外，有些課程如`生物化學`，可能在課綱中明白說明需要`先修有機`，這樣子的話，我們也可以在`生物化學`和`有機化學`之間建立關聯。除此之外，兩門課之間也可以因為具有同樣的關鍵詞而有聯繫。如`社會學`和`經濟學`都和`法律`相關，這樣子`社會學`和`經濟學`就能關聯起來。這中間存在數據稀疏的問題，我們會盡量人為介入去檢查「關聯足夠多」，有人為介入者會在數據中標記。\n\n    4. 存起來的數據，我們將使用 node.js 建立服務，讓用戶方便取用。\n\n#### 後端數據流設計：\n\n我們希望來自不同地方的課程數據，有可複用的數據處理流程。我們將使用 [Airflow](http://airbnb.io/projects/airflow/) 實作，這部份分為以下兩個要點：\n\n1. 我們將從各大課程網站爬下課程數據，我們會統一數據格式，以及定義資料內容（如：課程名稱、學校、老師、對象、大綱、要求、相關書目、人數、開課時間、地點等），將其存起來。其中課程大綱（若有）將保留原始文字檔。這部份將照顧到不同數據取用者的需求，且數據必須夠乾淨，使得未來的機器學習任務可以直接使用（機器學習任務不包括在本提案內容）。\n2. 針對不同的學校，我們設計專屬的數據存放標的。對於新的數據，我們可以更新它。\n\n#### 演算法設計：\n除了 A, B 兩類中規中矩的接口，我們會在 C 類整合數據接口中，提供經演算法處理後的數據。簡介如下：\n\n1. C-1 與 C-2: 當我們將課程與關鍵詞的結構建立好以後，便是一張網絡。問題的輸入是網絡裡特定區域的節點（修過的課/知識, `source`），以及一些特殊的節點（特殊的課, `target`）。我們將會直接從 `source` 往 `target` 搜索最短路徑，讓系統返為這條路徑上，離 `source` 最近的幾個節點。這將幫助回答上述 Q-3 的問題。\n2. C-3 到 C-5: 當課程網絡建立起來後，我們能在其上偵測社群結構（使用 [InfoMap](https://github.com/mapequation/infomap) 或 [Minimum Spanning Tree](https://en.wikipedia.org/wiki/Minimum_spanning_tree)）。這將幫助回答上述 Q-1 與 Q-2 的問題。\n\n這些算法雖然簡單，但我們可以在所作出的視覺化頁面中，檢視其合理性。\n\n![Data Pipeline](http://junipertcy.info.s3.amazonaws.com/coursemap/data-pipeline.png)\n\n# § 這個計畫的目標對象是誰？\n大學生、高中生與教育工作者。\n\n# § 這個計畫預計跟什麼團體合作？\n暫無。歡迎能直接提供以下數據的單位聯繫： (1) 學校課程數據 (2) 學生匿名後的修課記錄。\n\n# § 過去有作過相關主題的計畫嗎？\n1. `顏子祺`:\n\t* 使用 Node.js/Angular.js/MongoDB 建立 web app\n\t* 使用 D3.js/Linkurious.js 視覺化網絡\n\t* 使用 Python 分析社群網絡\n\n2. `林子耘`:\n\t* 使用 Flask/Postgres/React.js/D3.js 建立 web app\n\t* 使用 AirFlow/gensim/sci-kit learn 建立 Machine Learning Data Pipeline\n\t* 使用 theano、tensorflow 實作 deep neural net 相關應用\n\n3. 第三位工程師不願具名。其具 data mining 經驗，作過 Google 搜尋結果的大型爬蟲。\n\n# § 預計六個月內將花多少小時作這件事？需要多少經費？（30 萬到 50 萬）\n\n##### 系統維護（暫以一年估計）：\n1. AWS server（一年）：1000 元 × 6 個月 + 2000 元（存放數據後）× 6 個月 = 18000 元\n2. 域名（一年）：1000 元\n\n##### 人事（三人；第三人不願具名）：\n1. 演算法實現與接口設計\n2. 數據流架構, 網頁設計（包括維持服務、伺服器管理）\n3. 網頁爬蟲, 數據整理\n\n##### 時間分配：\n* 每週平均 36 小時開發，共 864 小時。\n* 平均一人一週 12 小時開發。以每日 8 小時計，約等於每人全職工作 1.8 個月。\n* 其中時間大致遵照上述人事任務分配；其餘用於社群協作、溝通等。\n\n##### 所需金額：46 萬。包括：\n* AWS 系統維護費用：2 萬\n* 人事費用（每人 13 萬 × 3 人）：39 萬\n* 其他（交通、接洽等雜支）：5 萬\n\n# § 打算如何讓社群參與以及回饋意見？\n\n我們會不定時的將成果展示在 coursemap.org 的網頁裡，並會創建一個 Slack 群組，在該群組內，我們參與大家的意見討論。\n\n# § 請說明專案結束時，會產出的開源軟體套件或開放授權文件（請條列個別元件的輸入輸出或其功能）？\n專案結束後，將提交三份開源軟體套件以及數據。軟體的使用說明以註釋為主，但也會附上獨立的說明，讓新工程師順利接手。產出內容分別是：\n\n1. CourseMap-service: 以 node.js 實作。主要包含上述所提示的 API。\n2. CourseMap-web: 以 angular.js 實作。包含 coursemap.org 的首頁展示，以及課程數據視覺化的頁面。此頁面將包含簡易交互，以能回答上述本計劃要解決的五大問題為主。\n3. CourseMap-utils: 以 Python 實作。包含網頁爬蟲、系統部屬等代碼，並會附上系統設計架構。\n4. Course network data: 提交的數據將會是 MongoDB 匯出的 json 檔。\n\n##### 授權：\n* 程式碼：MIT 授權\n* 課程數據、程式碼說明文件與介面設計：CC-By-4.0 授權\n\n# § 請自行定義計畫的工作里程碑與最後的驗收標準 （若沒有達成這些標準的話，我們會不給你錢喔！)\n\n##### 第一個月：\n*  訂好三大類數據（科系、課程、關鍵詞）的欄位\n*  開發爬蟲\n*  建立 coursemap.org 計畫網站（中文版）\n*  建立 aws 工作環境\n\n> 驗收項目：\n> (1) 數據欄位說明書 (包含數據間的關聯之說明);\n> (2) 工作資料流流程設計圖;\n> (3) 中文版的計畫網站。\n\n##### 第二與第三個月：\n* 使用爬蟲爬下數據（確保至少有五間學校的數據可以擷取出來）\n* 清洗數據（需要大量人工介入）\n* 儲存數據\n* coursemap.org 計畫網站加入了英文版\n* 確保從擷取數據到展示的工作流流暢\n\n> 驗收項目：\n> (1) 整理過的原始數據 (*.json, 可下載);\n> (2) 提出目前所收集數據的統計報告;\n> (3) 資料流的部屬代碼與文檔;\n> (4) 英文版的計畫網站。\n\n##### 第四個月（7/01 大黑客松期中報告）：\n*  完成 A 類與 B 類的接口\n*  能用靜態代碼完成 C 類的整合數據的運算\n*  完成一張視覺化的頁面，說明數據間的關聯\n*  以網站為主，投影片為輔，能在期中報告展示。\n\n> 驗收項目：\n> (1) 完成 A 類與 B 類的接口;\n> (2) 完成一張課程網絡視覺化且可交互的頁面 (包括 C 類數據的結果);\n> (3) 較完整的計畫網站。\n\n##### 第五與六個月：\n*  完成上述的 A, B, C 類所有接口\n*  完善說明書\n*  完善網站\n\n> 驗收項目：\n> (1) 完成 A – C 類的接口;\n> (2) 完成三類程式碼的說明書;\n> (3) 完整的計畫網站（網站將會包括：`回報錯誤`的功能）。\n\n\n# § 未來可能進一步的發展？\n\n我們認為本專案的核心在於整理數據，讓數據的質和量都能達到可直接應用的目標。數據和接口處理完成後，有以下應用：\n\n1. 製作機器學習算法，配合`職缺數據`，用來推薦學生課程（推薦取向：想發展那方面的能力？想從事哪方面的工作？），變成一個獨立的工具。這或許可以改善台灣的大學教育與就業市場學用落差的問題。\n2. 獨立做成網頁服務，收集使用者數據。這些數據也是開放資料的基礎。服務場景如：已經當上社工的學長姐們，他們在大學的時候修過什麼課呢？財金系的熱門修課路徑是什麼？\n3. 教育工作者研究使用。\n\n# § 本計畫目前是否已有、或正在申請其他的資金來源？若有，請說明申請本獎助的內容與原計畫的差異。\n無。\n\n# § 若有專案介紹的投影片，請提供：\n預計 2/3 前上傳更新。將撰寫 10 – 20 頁的投影片，介紹 (1) 專案目標 (2) 動機 (3) 執行人簡介 (4) 執行方法等。","timestamp":"2017-02-13T15:56:25.524Z","_id":"58a1d729f648d8001ea7a8db"},{"description":"# § 請以 80 ~ 120 字簡短地說明這個專案\n「跨界教育」在台灣是個比喻，但不是一個應用方法。該計畫將系統性的整理不同大學的課程數據，尤其各科系、課程、課綱的交互關係。我們主要的成果是一張課程地圖，在視覺上標注出特殊的知識關聯，並以數學及電腦科學方法分析該網絡，提供針對學生與教育工作者的數據接口。\n\n# § 你過去參與過什麼開源開發計畫（open source project）？\n\n1. `顏子祺`: [個人網頁](http://www.junipertcy.info/)、[GitHub](https://github.com/junipertcy)\n\t* 台北市道路施工的分析與視覺化: [DEMO](http://junipertcy.info.s3.amazonaws.com/data_taipei/index.html)\n\t* 紐約市噪音地圖: [GitHub](https://github.com/junipertcy/uwalk)\n\t* 網絡素養教育推廣計畫: [計畫網頁](http://www.uwalks.info/index.html)\n\n2. `林子耘`: [個人網頁](http://tweddielin.com/)、[GitHub](https://github.com/tweddielin)\n\t* 台北市道路施工的分析與視覺化: [DEMO](http://junipertcy.info.s3.amazonaws.com/data_taipei/index.html)\n\t* Open Skill API Workforce Data Initiative: [GitHub](https://github.com/workforce-data-initiative/skills-ml)\n\t* Police Early Intervention System: [GitHub](https://github.com/dssg/police-eis)\n\n\n    [註]: 「台北市道路施工的分析與視覺化」是第一屆臺北市政府開放資料黑客松得獎作品。\n\t\n\n# § 這個計畫要解決什麼問題？\n\n該專案首要完成的事是「整合台灣的大學課程數據，提供可信賴、可直接應用的開放數據資源」。除了數據接口與知識網絡的展示外，我們會用整理過的數據，試著回答這些問題：\n\nQ-1. 某某系提供課程的核心價值是什麼？真的需要學生修這麼多課嗎？\n\nQ-2. 為什麼某些領域跨起來這麼簡單，有些就很難？是不是有些領域之間要相跨，就是「天然難」？\n\nQ-3. 我在中文系修過這些課。如果我想要當記者的話，我最好可以學習什麼課（知識）呢？應該不需要從大一的課開始學起吧？如果我想要增進「量化素養」呢，我可以做什麼？\n\nQ-4. 和這門課（或是這些知識）相近的課（或知識）有什麼呢？\n\n\n# § 你為什麼要做這個計劃 （ 個人動機 ）？\n個人（顏子祺）在台灣接受大學基本教育後，輾轉換了幾次工作，現在在中國從事和大學專業完全不同的軟體工程師工作。即便網路發達的現代，我們已經有了 MOOC, Coursera 等能遠程學習的工具，但是對想要換跑道的年輕求職者來說，該怎麼有效的獲取新知識，依然是困難的問題。我認為其中一個原因，是知識和工作的供需結構在近一二十年已經有很大的轉變；其中，有的領域變得更開放了，有些則變得更封閉了，而傳統我們認為的大學教育基本價值，可能已經過時。\n\n雖然教育的問題脈絡很複雜，我認為第一步是提供一個可信賴的、整理過的大學課程開放資料。這是許多教育應用的基礎建設，在中學或者大學的教育現場，甚至是迫切的需要。這可以幫助相關的討論更踏實、更能有數據支持。\n\n個人發起了[網絡素養教育推廣計畫](www.uwalks.info/networkliteracy.html)，並認為本計劃的問題能用結構化的網絡數據來幫助解決。另外，本專案的靈感，亦發想自兩個獨立的計畫：\n\n* [Hiroki Sayama 博士](http://bingweb.binghamton.edu/~sayama/)在 [NetSciEd5 會議](https://sites.google.com/a/binghamton.edu/netscied5)中的[報告](http://junipe.bitnamiapp.com/mediawiki/images/f/f0/NetSciEd5-sayama.pdf)\n* [MapEquation 網站](http://www.mapequation.org/)\n\n這兩個計畫說明用網絡的觀點看待課程數據的價值。\n\n# § 你預計用什麼方式解決此問題？\n我們希望建構 API，在`coursemap.org`的域名下，提供中文世界的大學課程數據。其中，我們也會設計數據流，讓後端系統容易維護與延展。我們提供的數據包括：\n\n#### 課程相關數據：\n\nA-1. `GET` `/courses` `課程數據（可以分頁檢索）`\n\nA-2. `GET` `/courses/{_id}` `特定課程的數據`\n\nA-3. `GET` `/courses/{_id}/related_courses ` `特定課程的相關課程`\n\nA-4. `GET` `/courses/{_id}/related_terms` `特定課程的相關單詞`\n\nA-5. `GET` `/courses/{_id}/related_values` `特定課程的相關價值`\n\nA-6. `GET` `/courses/autocomplete` `自動補全和特定課程相關的資料`\n\n\n#### 關鍵詞相關數據：\n\nB-1. `GET` `/terms` `單詞的數據（可以分頁檢索）`\n\nB-2. `GET` `/terms/{_id}` `特定單詞的數據`\n\nB-3. `GET` `/terms/{_id}/related_terms` `特定單詞的相關單詞`\n\nB-4. `GET` `/terms/{_id}/related_courses` `特定單詞的相關課程`\n\nB-5. `GET` `/terms/autocomplete ` `自動補全和特定單詞相關的資料`\n\n#### 整合數據：\n\nC-1. `POST` `/courses?courses_taken=COURSES_TAKEN&target_values=TARGET_VALUES` `輸入已上過的課程，返回和特定領域相關的推薦課程`\n\nC-2. `POST` `/courses?courses_taken=COURSES_TAKEN&target_terms=TARGET_TERMS` `輸入已上過的課程，返回和特定關鍵詞相關的推薦課程`\n\nC-3. `GET` `/departments/{_id}/core_courses` `列出特定系所的核心課程`\n\nC-4. `GET` `/departments/{_id}/core_terms` `列出特定系所的核心關鍵詞`\n\nC-5. `GET` `/departments/{_id}/core_values` `列出特定系所的核心價值`\n\n#### 數據來源（暫定台灣五所大專院校）：\n\n1. [台大選課輔助程式](http://ntucourse.ericyu.org/)\n2. [清華大學課程網](https://www.ccxp.nthu.edu.tw/ccxp/INQUIRE/JH/6/6.2/6.2.9/JH629001.php)\n3. [交通大學課程網](http://timetable.nctu.edu.tw/)\n4. [成功大學課程網](http://course-query.acad.ncku.edu.tw/qry/)\n5. [政治大學課程網](http://wa.nccu.edu.tw/QryTor/Default.aspx?language=zh-TW)\n\n#### 工作流程與可能困難：\n \n    1. 從上述數據來源爬數據。\n\n> 我們已確認至少上述網站的內容皆能使用爬蟲爬下，惟有些網站需要驗證碼，將需要人工驗證，會困難些。另，每個網站都不一樣，我們需要訂製不同爬蟲的代碼。\n \n    2. 取得文字數據後，我們將數據去噪。\n\n> 這裡主要是自然語言處理。我們首先將中文與英文分開來，再來分別分詞。我們會用 [TF-IDF](https://en.wikipedia.org/wiki/Tf%E2%80%93idf) 分數篩選關鍵詞的權重。我們也會人工審視數據的可靠性。例如：人文科系的課程，可能只是討論某些文學作品，不一定能被分詞系統擷取出來，這時候會人為介入。\n\n    3. 去噪後，我們將分為三類數據存在 MongoDB 裡。分別是：\n       靜態數據（去噪後的基礎數據）、\n       關聯性數據（課程–課程的關聯等）、\n       應用類數據（經過演算法處理過的數據）。\n\n> 建立數據的關聯是本工作的重點，有三種方法可以建立數據的基本元素間的關聯。以化學系為例，化學系大一需要上普通化學、大二需要上有機化學。由於`有機`和`普化`都是化學系所開，且一先一後，因此這兩門課之間存在一條關聯。另外，有些課程如`生物化學`，可能在課綱中明白說明需要`先修有機`，這樣子的話，我們也可以在`生物化學`和`有機化學`之間建立關聯。除此之外，兩門課之間也可以因為具有同樣的關鍵詞而有聯繫。如`社會學`和`經濟學`都和`法律`相關，這樣子`社會學`和`經濟學`就能關聯起來。這中間存在數據稀疏的問題，我們會盡量人為介入去檢查「關聯足夠多」，有人為介入者會在數據中標記。\n\n    4. 存起來的數據，我們將使用 node.js 建立服務，讓用戶方便取用。\n\n![Data Crawling Logic](http://junipertcy.info.s3.amazonaws.com/coursemap/data-crawling-logic.png)\n\n#### 後端數據流設計：\n\n我們希望來自不同地方的課程數據，有可複用的數據處理流程。我們將使用 [Airflow](http://airbnb.io/projects/airflow/) 實作，這部份分為以下兩個要點：\n\n1. 我們將從各大課程網站爬下課程數據，我們會統一數據格式，以及定義資料內容（如：課程名稱、學校、老師、對象、大綱、要求、相關書目、人數、開課時間、地點等），將其存起來。其中課程大綱（若有）將保留原始文字檔。這部份將照顧到不同數據取用者的需求，且數據必須夠乾淨，使得未來的機器學習任務可以直接使用（機器學習任務不包括在本提案內容）。\n2. 針對不同的學校，我們設計專屬的數據存放標的。對於新的數據，我們可以更新它。\n\n![Data Pipeline](http://junipertcy.info.s3.amazonaws.com/coursemap/data-pipeline.png)\n\n#### 演算法設計：\n除了 A, B 兩類中規中矩的接口，我們會在 C 類整合數據接口中，提供經演算法處理後的數據。簡介如下：\n\n1. C-1 與 C-2: 當我們將課程與關鍵詞的結構建立好以後，便是一張網絡。問題的輸入是網絡裡特定區域的節點（修過的課/知識, `source`），以及一些特殊的節點（特殊的課, `target`）。我們將會直接從 `source` 往 `target` 搜索最短路徑，讓系統返為這條路徑上，離 `source` 最近的幾個節點。這將幫助回答上述 Q-3 的問題。\n2. C-3 到 C-5: 當課程網絡建立起來後，我們能在其上偵測社群結構（使用 [InfoMap](https://github.com/mapequation/infomap) 或 [Minimum Spanning Tree](https://en.wikipedia.org/wiki/Minimum_spanning_tree)）。這將幫助回答上述 Q-1 與 Q-2 的問題。\n\n這些算法雖然簡單，但我們可以在所作出的視覺化頁面中，檢視其合理性。\n\n\n\n# § 這個計畫的目標對象是誰？\n大學生、高中生與教育工作者。\n\n# § 這個計畫預計跟什麼團體合作？\n暫無。歡迎能直接提供以下數據的單位聯繫： (1) 學校課程數據 (2) 學生匿名後的修課記錄。\n\n# § 過去有作過相關主題的計畫嗎？\n1. `顏子祺`:\n\t* 使用 Node.js/Angular.js/MongoDB 建立 web app\n\t* 使用 D3.js/Linkurious.js 視覺化網絡\n\t* 使用 Python 分析社群網絡\n\n2. `林子耘`:\n\t* 使用 Flask/Postgres/React.js/D3.js 建立 web app\n\t* 使用 AirFlow/gensim/sci-kit learn 建立 Machine Learning Data Pipeline\n\t* 使用 theano、tensorflow 實作 deep neural net 相關應用\n\n3. 第三位工程師不願具名。其具 data mining 經驗，作過 Google 搜尋結果的大型爬蟲。\n\n# § 預計六個月內將花多少小時作這件事？需要多少經費？（30 萬到 50 萬）\n\n##### 系統維護（暫以一年估計）：\n1. AWS server（一年）：1000 元 × 6 個月 + 2000 元（存放數據後）× 6 個月 = 18000 元\n2. 域名（一年）：1000 元\n\n##### 人事（三人；第三人不願具名）：\n1. 演算法實現與接口設計\n2. 數據流架構, 網頁設計（包括維持服務、伺服器管理）\n3. 網頁爬蟲, 數據整理\n\n##### 時間分配：\n* 每週平均 36 小時開發，共 864 小時。\n* 平均一人一週 12 小時開發。以每日 8 小時計，約等於每人全職工作 1.8 個月。\n* 其中時間大致遵照上述人事任務分配；其餘用於社群協作、溝通等。\n\n##### 所需金額：46 萬。包括：\n* AWS 系統維護費用：2 萬\n* 人事費用（每人 13 萬 × 3 人）：39 萬\n* 其他（交通、接洽等雜支）：5 萬\n\n# § 打算如何讓社群參與以及回饋意見？\n\n我們會不定時的將成果展示在 coursemap.org 的網頁裡，並會創建一個 Slack 群組，在該群組內，我們參與大家的意見討論。\n\n# § 請說明專案結束時，會產出的開源軟體套件或開放授權文件（請條列個別元件的輸入輸出或其功能）？\n專案結束後，將提交三份開源軟體套件以及數據。軟體的使用說明以註釋為主，但也會附上獨立的說明，讓新工程師順利接手。產出內容分別是：\n\n1. CourseMap-service: 以 node.js 實作。主要包含上述所提示的 API。\n2. CourseMap-web: 以 angular.js 實作。包含 coursemap.org 的首頁展示，以及課程數據視覺化的頁面。此頁面將包含簡易交互，以能回答上述本計劃要解決的五大問題為主。\n3. CourseMap-utils: 以 Python 實作。包含網頁爬蟲、系統部屬等代碼，並會附上系統設計架構。\n4. Course network data: 提交的數據將會是 MongoDB 匯出的 json 檔。\n\n##### 授權：\n* 程式碼：MIT 授權\n* 課程數據、程式碼說明文件與介面設計：CC-By-4.0 授權\n\n# § 請自行定義計畫的工作里程碑與最後的驗收標準 （若沒有達成這些標準的話，我們會不給你錢喔！)\n\n##### 第一個月：\n*  訂好三大類數據（科系、課程、關鍵詞）的欄位\n*  開發爬蟲\n*  建立 coursemap.org 計畫網站（中文版）\n*  建立 aws 工作環境\n\n> 驗收項目：\n> (1) 數據欄位說明書 (包含數據間的關聯之說明);\n> (2) 工作資料流流程設計圖;\n> (3) 中文版的計畫網站。\n\n##### 第二與第三個月：\n* 使用爬蟲爬下數據（確保至少有五間學校的數據可以擷取出來）\n* 清洗數據（需要大量人工介入）\n* 儲存數據\n* coursemap.org 計畫網站加入了英文版\n* 確保從擷取數據到展示的工作流流暢\n\n> 驗收項目：\n> (1) 整理過的原始數據 (*.json, 可下載);\n> (2) 提出目前所收集數據的統計報告;\n> (3) 資料流的部屬代碼與文檔;\n> (4) 英文版的計畫網站。\n\n##### 第四個月（7/01 大黑客松期中報告）：\n*  完成 A 類與 B 類的接口\n*  能用靜態代碼完成 C 類的整合數據的運算\n*  完成一張視覺化的頁面，說明數據間的關聯\n*  以網站為主，投影片為輔，能在期中報告展示。\n\n> 驗收項目：\n> (1) 完成 A 類與 B 類的接口;\n> (2) 完成一張課程網絡視覺化且可交互的頁面 (包括 C 類數據的結果);\n> (3) 較完整的計畫網站。\n\n##### 第五與六個月：\n*  完成上述的 A, B, C 類所有接口\n*  完善說明書\n*  完善網站\n\n> 驗收項目：\n> (1) 完成 A – C 類的接口;\n> (2) 完成三類程式碼的說明書;\n> (3) 完整的計畫網站（網站將會包括：`回報錯誤`的功能）。\n\n\n# § 未來可能進一步的發展？\n\n我們認為本專案的核心在於整理數據，讓數據的質和量都能達到可直接應用的目標。數據和接口處理完成後，有以下應用：\n\n1. 製作機器學習算法，配合`職缺數據`，用來推薦學生課程（推薦取向：想發展那方面的能力？想從事哪方面的工作？），變成一個獨立的工具。這或許可以改善台灣的大學教育與就業市場學用落差的問題。\n2. 獨立做成網頁服務，收集使用者數據。這些數據也是開放資料的基礎。服務場景如：已經當上社工的學長姐們，他們在大學的時候修過什麼課呢？財金系的熱門修課路徑是什麼？\n3. 教育工作者研究使用。\n\n# § 本計畫目前是否已有、或正在申請其他的資金來源？若有，請說明申請本獎助的內容與原計畫的差異。\n無。\n\n# § 若有專案介紹的投影片，請提供：\n\nhttps://junipertcy.info.s3.amazonaws.com/coursemap/coursemap-proposal.pdf","timestamp":"2017-02-13T15:57:18.940Z","_id":"58a1d75ef648d8001ea7a8dd"},{"description":"# § 請以 80 ~ 120 字簡短地說明這個專案\n「跨界教育」在台灣是個比喻，但不是一個應用方法。該計畫將系統性的整理不同大學的課程數據，尤其各科系、課程、課綱的交互關係。我們主要的成果是一張課程地圖，在視覺上標注出特殊的知識關聯，並以數學及電腦科學方法分析該網絡，提供針對學生與教育工作者的數據接口。\n\n# § 你過去參與過什麼開源開發計畫（open source project）？\n\n1. `顏子祺`: [個人網頁](http://www.junipertcy.info/)、[GitHub](https://github.com/junipertcy)\n\t* 台北市道路施工的分析與視覺化: [DEMO](http://junipertcy.info.s3.amazonaws.com/data_taipei/index.html)\n\t* 紐約市噪音地圖: [GitHub](https://github.com/junipertcy/uwalk)\n\t* 網絡素養教育推廣計畫: [計畫網頁](http://www.uwalks.info/index.html)\n\n2. `林子耘`: [個人網頁](http://tweddielin.com/)、[GitHub](https://github.com/tweddielin)\n\t* 台北市道路施工的分析與視覺化: [DEMO](http://junipertcy.info.s3.amazonaws.com/data_taipei/index.html)\n\t* Open Skill API Workforce Data Initiative: [GitHub](https://github.com/workforce-data-initiative/skills-ml)\n\t* Police Early Intervention System: [GitHub](https://github.com/dssg/police-eis)\n\n\n    [註]: 「台北市道路施工的分析與視覺化」是第一屆臺北市政府開放資料黑客松得獎作品。\n\t\n\n# § 這個計畫要解決什麼問題？\n\n該專案首要完成的事是「整合台灣的大學課程數據，提供可信賴、可直接應用的開放數據資源」。除了數據接口與知識網絡的展示外，我們會用整理過的數據，試著回答這些問題：\n\nQ-1. 某某系提供課程的核心價值是什麼？真的需要學生修這麼多課嗎？\n\nQ-2. 為什麼某些領域跨起來這麼簡單，有些就很難？是不是有些領域之間要相跨，就是「天然難」？\n\nQ-3. 我在中文系修過這些課。如果我想要當記者的話，我最好可以學習什麼課（知識）呢？應該不需要從大一的課開始學起吧？如果我想要增進「量化素養」呢，我可以做什麼？\n\nQ-4. 和這門課（或是這些知識）相近的課（或知識）有什麼呢？\n\n\n# § 你為什麼要做這個計劃 （ 個人動機 ）？\n個人（顏子祺）在台灣接受大學基本教育後，輾轉換了幾次工作，現在在中國從事和大學專業完全不同的軟體工程師工作。即便網路發達的現代，我們已經有了 MOOC, Coursera 等能遠程學習的工具，但是對想要換跑道的年輕求職者來說，該怎麼有效的獲取新知識，依然是困難的問題。我認為其中一個原因，是知識和工作的供需結構在近一二十年已經有很大的轉變；其中，有的領域變得更開放了，有些則變得更封閉了，而傳統我們認為的大學教育基本價值，可能已經過時。\n\n雖然教育的問題脈絡很複雜，我認為第一步是提供一個可信賴的、整理過的大學課程開放資料。這是許多教育應用的基礎建設，在中學或者大學的教育現場，甚至是迫切的需要。這可以幫助相關的討論更踏實、更能有數據支持。\n\n個人發起了[網絡素養教育推廣計畫](www.uwalks.info/networkliteracy.html)，並認為本計劃的問題能用結構化的網絡數據來幫助解決。另外，本專案的靈感，亦發想自兩個獨立的計畫：\n\n* [Hiroki Sayama 博士](http://bingweb.binghamton.edu/~sayama/)在 [NetSciEd5 會議](https://sites.google.com/a/binghamton.edu/netscied5)中的[報告](http://junipe.bitnamiapp.com/mediawiki/images/f/f0/NetSciEd5-sayama.pdf)\n* [MapEquation 網站](http://www.mapequation.org/)\n\n這兩個計畫說明用網絡的觀點看待課程數據的價值。\n\n# § 你預計用什麼方式解決此問題？\n我們希望建構 API，在`coursemap.org`的域名下，提供中文世界的大學課程數據。其中，我們也會設計數據流，讓後端系統容易維護與延展。我們提供的數據包括：\n\n#### 課程相關數據：\n\nA-1. `GET` `/courses` `課程數據（可以分頁檢索）`\n\nA-2. `GET` `/courses/{_id}` `特定課程的數據`\n\nA-3. `GET` `/courses/{_id}/related_courses ` `特定課程的相關課程`\n\nA-4. `GET` `/courses/{_id}/related_terms` `特定課程的相關單詞`\n\nA-5. `GET` `/courses/{_id}/related_values` `特定課程的相關價值`\n\nA-6. `GET` `/courses/autocomplete` `自動補全和特定課程相關的資料`\n\n\n#### 關鍵詞相關數據：\n\nB-1. `GET` `/terms` `單詞的數據（可以分頁檢索）`\n\nB-2. `GET` `/terms/{_id}` `特定單詞的數據`\n\nB-3. `GET` `/terms/{_id}/related_terms` `特定單詞的相關單詞`\n\nB-4. `GET` `/terms/{_id}/related_courses` `特定單詞的相關課程`\n\nB-5. `GET` `/terms/autocomplete ` `自動補全和特定單詞相關的資料`\n\n#### 整合數據：\n\nC-1. `POST` `/courses?courses_taken=COURSES_TAKEN&target_values=TARGET_VALUES` `輸入已上過的課程，返回和特定領域相關的推薦課程`\n\nC-2. `POST` `/courses?courses_taken=COURSES_TAKEN&target_terms=TARGET_TERMS` `輸入已上過的課程，返回和特定關鍵詞相關的推薦課程`\n\nC-3. `GET` `/departments/{_id}/core_courses` `列出特定系所的核心課程`\n\nC-4. `GET` `/departments/{_id}/core_terms` `列出特定系所的核心關鍵詞`\n\nC-5. `GET` `/departments/{_id}/core_values` `列出特定系所的核心價值`\n\n#### 數據來源（暫定台灣五所大專院校）：\n\n1. [台大選課輔助程式](http://ntucourse.ericyu.org/)\n2. [清華大學課程網](https://www.ccxp.nthu.edu.tw/ccxp/INQUIRE/JH/6/6.2/6.2.9/JH629001.php)\n3. [交通大學課程網](http://timetable.nctu.edu.tw/)\n4. [成功大學課程網](http://course-query.acad.ncku.edu.tw/qry/)\n5. [政治大學課程網](http://wa.nccu.edu.tw/QryTor/Default.aspx?language=zh-TW)\n\n#### 工作流程與可能困難：\n \n    1. 從上述數據來源爬數據。\n\n> 我們已確認至少上述網站的內容皆能使用爬蟲爬下，惟有些網站需要驗證碼，將需要人工驗證，會困難些。另，每個網站都不一樣，我們需要訂製不同爬蟲的代碼。\n \n    2. 取得文字數據後，我們將數據去噪。\n\n> 這裡主要是自然語言處理。我們首先將中文與英文分開來，再來分別分詞。我們會用 [TF-IDF](https://en.wikipedia.org/wiki/Tf%E2%80%93idf) 分數篩選關鍵詞的權重。我們也會人工審視數據的可靠性。例如：人文科系的課程，可能只是討論某些文學作品，不一定能被分詞系統擷取出來，這時候會人為介入。\n\n    3. 去噪後，我們將分為三類數據存在 MongoDB 裡。分別是：\n       靜態數據（去噪後的基礎數據）、\n       關聯性數據（課程–課程的關聯等）、\n       應用類數據（經過演算法處理過的數據）。\n\n> 建立數據的關聯是本工作的重點，有三種方法可以建立數據的基本元素間的關聯。以化學系為例，化學系大一需要上普通化學、大二需要上有機化學。由於`有機`和`普化`都是化學系所開，且一先一後，因此這兩門課之間存在一條關聯。另外，有些課程如`生物化學`，可能在課綱中明白說明需要`先修有機`，這樣子的話，我們也可以在`生物化學`和`有機化學`之間建立關聯。除此之外，兩門課之間也可以因為具有同樣的關鍵詞而有聯繫。如`社會學`和`經濟學`都和`法律`相關，這樣子`社會學`和`經濟學`就能關聯起來。這中間存在數據稀疏的問題，我們會盡量人為介入去檢查「關聯足夠多」，有人為介入者會在數據中標記。\n\n![Data Crawling Logic](http://junipertcy.info.s3.amazonaws.com/coursemap/data-crawling-logic.png)\n\n    4. 存起來的數據，我們將使用 node.js 建立服務，讓用戶方便取用。\n\n#### 後端數據流設計：\n\n我們希望來自不同地方的課程數據，有可複用的數據處理流程。我們將使用 [Airflow](http://airbnb.io/projects/airflow/) 實作，這部份分為以下兩個要點：\n\n1. 我們將從各大課程網站爬下課程數據，我們會統一數據格式，以及定義資料內容（如：課程名稱、學校、老師、對象、大綱、要求、相關書目、人數、開課時間、地點等），將其存起來。其中課程大綱（若有）將保留原始文字檔。這部份將照顧到不同數據取用者的需求，且數據必須夠乾淨，使得未來的機器學習任務可以直接使用（機器學習任務不包括在本提案內容）。\n2. 針對不同的學校，我們設計專屬的數據存放標的。對於新的數據，我們可以更新它。\n\n![Data Pipeline](http://junipertcy.info.s3.amazonaws.com/coursemap/data-pipeline.png)\n\n#### 演算法設計：\n除了 A, B 兩類中規中矩的接口，我們會在 C 類整合數據接口中，提供經演算法處理後的數據。簡介如下：\n\n1. C-1 與 C-2: 當我們將課程與關鍵詞的結構建立好以後，便是一張網絡。問題的輸入是網絡裡特定區域的節點（修過的課/知識, `source`），以及一些特殊的節點（特殊的課, `target`）。我們將會直接從 `source` 往 `target` 搜索最短路徑，讓系統返為這條路徑上，離 `source` 最近的幾個節點。這將幫助回答上述 Q-3 的問題。\n2. C-3 到 C-5: 當課程網絡建立起來後，我們能在其上偵測社群結構（使用 [InfoMap](https://github.com/mapequation/infomap) 或 [Minimum Spanning Tree](https://en.wikipedia.org/wiki/Minimum_spanning_tree)）。這將幫助回答上述 Q-1 與 Q-2 的問題。\n\n這些算法雖然簡單，但我們可以在所作出的視覺化頁面中，檢視其合理性。\n\n\n\n# § 這個計畫的目標對象是誰？\n大學生、高中生與教育工作者。\n\n# § 這個計畫預計跟什麼團體合作？\n暫無。歡迎能直接提供以下數據的單位聯繫： (1) 學校課程數據 (2) 學生匿名後的修課記錄。\n\n# § 過去有作過相關主題的計畫嗎？\n1. `顏子祺`:\n\t* 使用 Node.js/Angular.js/MongoDB 建立 web app\n\t* 使用 D3.js/Linkurious.js 視覺化網絡\n\t* 使用 Python 分析社群網絡\n\n2. `林子耘`:\n\t* 使用 Flask/Postgres/React.js/D3.js 建立 web app\n\t* 使用 AirFlow/gensim/sci-kit learn 建立 Machine Learning Data Pipeline\n\t* 使用 theano、tensorflow 實作 deep neural net 相關應用\n\n3. 第三位工程師不願具名。其具 data mining 經驗，作過 Google 搜尋結果的大型爬蟲。\n\n# § 預計六個月內將花多少小時作這件事？需要多少經費？（30 萬到 50 萬）\n\n##### 系統維護（暫以一年估計）：\n1. AWS server（一年）：1000 元 × 6 個月 + 2000 元（存放數據後）× 6 個月 = 18000 元\n2. 域名（一年）：1000 元\n\n##### 人事（三人；第三人不願具名）：\n1. 演算法實現與接口設計\n2. 數據流架構, 網頁設計（包括維持服務、伺服器管理）\n3. 網頁爬蟲, 數據整理\n\n##### 時間分配：\n* 每週平均 36 小時開發，共 864 小時。\n* 平均一人一週 12 小時開發。以每日 8 小時計，約等於每人全職工作 1.8 個月。\n* 其中時間大致遵照上述人事任務分配；其餘用於社群協作、溝通等。\n\n##### 所需金額：46 萬。包括：\n* AWS 系統維護費用：2 萬\n* 人事費用（每人 13 萬 × 3 人）：39 萬\n* 其他（交通、接洽等雜支）：5 萬\n\n# § 打算如何讓社群參與以及回饋意見？\n\n我們會不定時的將成果展示在 coursemap.org 的網頁裡，並會創建一個 Slack 群組，在該群組內，我們參與大家的意見討論。\n\n# § 請說明專案結束時，會產出的開源軟體套件或開放授權文件（請條列個別元件的輸入輸出或其功能）？\n專案結束後，將提交三份開源軟體套件以及數據。軟體的使用說明以註釋為主，但也會附上獨立的說明，讓新工程師順利接手。產出內容分別是：\n\n1. CourseMap-service: 以 node.js 實作。主要包含上述所提示的 API。\n2. CourseMap-web: 以 angular.js 實作。包含 coursemap.org 的首頁展示，以及課程數據視覺化的頁面。此頁面將包含簡易交互，以能回答上述本計劃要解決的五大問題為主。\n3. CourseMap-utils: 以 Python 實作。包含網頁爬蟲、系統部屬等代碼，並會附上系統設計架構。\n4. Course network data: 提交的數據將會是 MongoDB 匯出的 json 檔。\n\n##### 授權：\n* 程式碼：MIT 授權\n* 課程數據、程式碼說明文件與介面設計：CC-By-4.0 授權\n\n# § 請自行定義計畫的工作里程碑與最後的驗收標準 （若沒有達成這些標準的話，我們會不給你錢喔！)\n\n##### 第一個月：\n*  訂好三大類數據（科系、課程、關鍵詞）的欄位\n*  開發爬蟲\n*  建立 coursemap.org 計畫網站（中文版）\n*  建立 aws 工作環境\n\n> 驗收項目：\n> (1) 數據欄位說明書 (包含數據間的關聯之說明);\n> (2) 工作資料流流程設計圖;\n> (3) 中文版的計畫網站。\n\n##### 第二與第三個月：\n* 使用爬蟲爬下數據（確保至少有五間學校的數據可以擷取出來）\n* 清洗數據（需要大量人工介入）\n* 儲存數據\n* coursemap.org 計畫網站加入了英文版\n* 確保從擷取數據到展示的工作流流暢\n\n> 驗收項目：\n> (1) 整理過的原始數據 (*.json, 可下載);\n> (2) 提出目前所收集數據的統計報告;\n> (3) 資料流的部屬代碼與文檔;\n> (4) 英文版的計畫網站。\n\n##### 第四個月（7/01 大黑客松期中報告）：\n*  完成 A 類與 B 類的接口\n*  能用靜態代碼完成 C 類的整合數據的運算\n*  完成一張視覺化的頁面，說明數據間的關聯\n*  以網站為主，投影片為輔，能在期中報告展示。\n\n> 驗收項目：\n> (1) 完成 A 類與 B 類的接口;\n> (2) 完成一張課程網絡視覺化且可交互的頁面 (包括 C 類數據的結果);\n> (3) 較完整的計畫網站。\n\n##### 第五與六個月：\n*  完成上述的 A, B, C 類所有接口\n*  完善說明書\n*  完善網站\n\n> 驗收項目：\n> (1) 完成 A – C 類的接口;\n> (2) 完成三類程式碼的說明書;\n> (3) 完整的計畫網站（網站將會包括：`回報錯誤`的功能）。\n\n\n# § 未來可能進一步的發展？\n\n我們認為本專案的核心在於整理數據，讓數據的質和量都能達到可直接應用的目標。數據和接口處理完成後，有以下應用：\n\n1. 製作機器學習算法，配合`職缺數據`，用來推薦學生課程（推薦取向：想發展那方面的能力？想從事哪方面的工作？），變成一個獨立的工具。這或許可以改善台灣的大學教育與就業市場學用落差的問題。\n2. 獨立做成網頁服務，收集使用者數據。這些數據也是開放資料的基礎。服務場景如：已經當上社工的學長姐們，他們在大學的時候修過什麼課呢？財金系的熱門修課路徑是什麼？\n3. 教育工作者研究使用。\n\n# § 本計畫目前是否已有、或正在申請其他的資金來源？若有，請說明申請本獎助的內容與原計畫的差異。\n無。\n\n# § 若有專案介紹的投影片，請提供：\n\nhttps://junipertcy.info.s3.amazonaws.com/coursemap/coursemap-proposal.pdf","timestamp":"2017-02-13T15:59:18.209Z","_id":"58a1d7d6f648d8001ea7a8e0"}]}