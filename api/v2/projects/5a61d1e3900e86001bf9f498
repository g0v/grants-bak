{"_id":"5a61d1e3900e86001bf9f498","title":"開放式裁判書分析平台","money":500000,"desc":"從司法院網站所提供的裁判書內文中，將其屬性分析所用的詞庫和規則，以開放資料的形式提供，任何人皆可取得完整的裁判書分析演算法，也同時可以貢獻自己的裁判書分析演算法。透過眾人之力的累積，使裁判書屬性分析能愈加精準、豐富。","motivation":"約一年多前，受到由司改會委外開發的「司法陽光網」，因而開始寫爬蟲爬司法院的裁判書，發現蠻多人都在做同樣的事情，我希望透過開源、開放的方式，讓相同目的的工作能盡量的減少，去年我們完成了裁判書的爬取，並且將其開放，今年我們想要更進一步的也把裁判書分析的部份也用同樣的方式完成，然後就會開始把資源慢慢轉向行銷、合作的方向，讓做完的專案能開始在社會中發酵、持續提供價值。","existed":"是的。  \n公開網站: https://sunshine.jrf.org.tw/  \n原始碼: https://github.com/JRF-tw/sunshine.jrf.org.tw  ","problem":"目前司法院所提供的裁判書開放資料結構化程度低，且也不是最原始的 raw data，使得裁判書資料取得成本極高。此外，裁判書的每一項屬性分析都需要大量的分析規則和詞庫，才能達到完全的精準，主因在於目前裁判書的書寫格式規範仍會因不同法院、不同法官而有所差異，而且也會隨時間改變，相同的分析演算法或詞庫，也必須因應書寫格式的改變而更新。  \n  \n本計劃的目標在於:  \n\n1. 解決裁判書原始資料和結構化資料取得的不易。\n2. 提昇裁判書屬性分析的準確性。\n3. 開放裁判書屬性分析背後的所有演算法資料，讓任何人皆可運用其成果。","solution":"1. 裁判書查詢提供 API 和 Web console，以期望要取用裁判資料的個人或組織可以不用再花時間寫爬蟲。\n2. 裁判書查詢的條件包含「司法院裁判書查詢系統」內的所有欄位，除「全文檢索語詞」之外。\n3. 承 `2.` 。另提供案由、法官姓名、律師姓名等查詢，查詢條件可視系統屬性分析規則的演進而增加。\n4. 提供裁判書各屬性所使用的規則（正規表示法）和詞庫 API ，同時包含其目前的準確度，以期望進行裁判書分析的個人或組織有現成的分析規則可直接使用。\n5. 承 `4.` 。API 亦包含「增加屬性」、「增加屬性下的規則或詞庫」等行為，所增加的屬性和規則，系統會自動排程計算其準確度，準確度到達一個程度後便可成為 `4.` 所提供的資料內容之一。\n6. Web console 的部份會獨立一個專案，使用上述的 API 來開發，做為 API 使用的示範性應用。\n7. 定期掃描每個演算法的近期準確度，低於一個門檻值時，會以 Email 通知系統人員和貢獻者。藉此減輕維護者的維護成本。","why":"裁判書分析的演算法在不同領域和組織都有其自己的解決方式，我們的方法最主要是希望透過制定簡易的標準化格式，讓這些演算法能夠累積在同一個平台上，並且開放給所有人使用。透過開放的方式，裁判書分析才能夠隨著時間累積跟上環境的變化，並且愈加精準。  \n為了提供動力給參與改進的個人或組織，我們同時要求參與改進的貢獻者提供其背景資料（也可選擇匿名），讓使用分析規則詞庫的人也可以知道哪些演算法是來自由哪些提供者，藉此增加貢獻者的曝光度。","ta":"此計畫的目標對象可分為兩類：資料使用者和演算法使用者。兩者均可透過 API 和 Web interface 進行。  \n  \n資料使用者：依裁判書屬性取得裁判書資料，例如引用判決、引用法規、法官姓名關鍵字、律師姓名關鍵字、法院等，所取得的資料包含「司法院原始內文連結」、「原始連結內容之 raw html」、「裁判書內文 raw data」以及裁判書分析後的各項屬性。此情境用於使用者依特定目的查詢裁判書。  \n  \n演算法使用者: 可取得裁判書分析的各項屬性，其中每一項屬性下都有各個「演算法規則資料」，每一「演算法規則資料」又會再包含「已驗證資料數」、「準確度」、「演算法提供者」等。另可新增屬性，或在特定屬性下新增「演算法規則資料」。此情境用於當資料使用者發現透過本計劃之平台取得的裁判書資料分析結果內容有問題時，可貢獻自己的「演算法規則資料」，藉此修正本計畫之平台所提供的資料內容。","growth":"API 使用者都必須註冊後（github oauth）取得 access token 才能使用，每位使用者的使用記錄和 Email 都會存在平台的資料庫內，所以平台會定期寄送 Email ，摘要資料庫更新的統計數據，以及功能更新，寄送條件僅限於有意願訂閱 Email 的使用者。另外，本計劃也會新增 FB 粉絲專頁，提供無技術背景使用者也有管道可給予指教。而有技術背景的使用者除了粉絲專頁外，我們也會另闢 gitter 或 Slack 等頻道予以討論，問題回報或功能追加請求則採用 github issue 來蒐集意見。","similar":"相似專案可參考「司改會」的「司法陽光網」https://sunshine.jrf.org.tw/\n原始碼: https://github.com/JRF-tw/sunshine.jrf.org.tw （以下稱「陽光網」）。陽光網內的「案件查詢」https://sunshine.jrf.org.tw/search 即為去年 g0v grant 所補助的對象之一，包含裁判書的爬取和 API 資料開放。\n而本計劃亦是承襲此專案之成果和資料，繼續開發出分析判決書用的演算法資料開放，其差異性如下:\n\n1. API 使用必須註冊，且使用者依不同付費等級有不同的使用量等級\n2. 提供測試環境給 API 使用者\n3. 提供詞庫和演算法內容的 API \n4. 司法院資料爬取的數據統計 API\n5. 裁判書 API 提供更細的資料結構\n6. 演算法和詞庫貢獻者透過成功貢獻，可獲得 API 資料使用量的贈送\n","refdesign":"裁判書查詢系統示意網站 https://sunshine.jrf.org.tw/ \n","pastprj":"- https://github.com/5fpro/gaia\n  - 縣市鄉鎮郵遞區號選擇器\n- https://github.com/5fpro/lita-aws\n  - AWS 命令列的聊天機器人版本\n- https://github.com/marsz/twd97\n  - 座標系統單位轉換器\n- https://github.com/5fpro/sqldesigner-rails\n  - 畫 ERD 的工具整合成後台管理系統","cowork":"- 民間團體:\n  - 財團法人民間司法改革基金會\n- 政府:\n  - 司法院\n- 司法相關企業:\n  - Lawsnote (尚未洽談)","usetime":"1. 10 HRs - 系統評估\n2. 20 HRs - App platform 系統架構研究與 prototype\n3. 10 HRs - 文件，包含流程圖、story 等\n4. 2 HRs - 開源專案相關設定: CI, Code Climate, Coverage 等\n5. 50 HRs - 繼承之開源專案系統內容重寫，包含爬蟲與 API\n6. 10 HRs - 網站基本 Layout 與拉皮\n7. 80 HRs - API 使用之驗證與申請機制\n8. 60 HRs - 分析演算法資料庫化(app 化)\n9. 40 HRs - 分析演算法驗證機制\n10. 100 HRs - 分析演算法提供機制\n11. 30 HRs - 付費金流系統串接 (Tappay)\n12. 30 HRs - 演算法相關 API\n13. 50 HRs - 系統管理者後台\n14. 10 HRs - API 對外使用文件 (swagger)\n15. 50 HRs - 裁判書查詢之 Web 開發(前端)\n16. 10 HRs - 裁判書查詢之 Web 開發(後端 + 主機)\n\n所有開發工時共 562 小時。\n不含通勤、吃飯、午睡、上廁所等非系統開發相關之時數。Daily work hour 可以 5 小時計算，因此共 113 個工作天，除以 20 約 5.5 個月，財務預估約 7 個人月，因此餘下的 1.5 個人月可做為開發緩衝和行銷推廣用的時間。","spending":"- 77% 全端工程師: 包含繼承之開源專案的修改以及本計劃內容之所有開發工程。 $65000 TWD * 6 個人月 = $390000 TWD\n- 12% 前端工程師: 用於開發簡易版 web console 以及系統有關 web 部分的基本樣式的設計，一個人月已夠。$60000 TWD\n- 2% 雜支: 包含交通、網域（一年）\b約 $10000 TWD 內\n- 9% 開發期間主機成本: 參考[AWS calculator 之計算結果](https://calculator.s3.amazonaws.com/index.html#r=NRT&key=calc-57C18228-18E5-44DB-9C5F-81B30DC955FA) ，每個月 $250 USD ， 6 個月共 $1500 UDS => $45000 TWD\n","feedback":"Github Issue / Gitter 給技術背景和專案參與者參與。\n粉絲專頁\ng0v 相關討論平台等","product":"所有系統包含爬蟲、網站、API 均在 GitHub 上使用 MIT 授權","milestone1":"1. 裁判書查詢之 API 使用申請，透過 GitHub 註冊/登入後，可取得兩組 access token \n，一組用於測試環境，另外一組用於正式環境。\n2. 使用者可以重置 access token。\n3. 透過 access token 取得裁判書資料 (JSON)，其中包含 raw_html (會提供另外一個 endpoint 取得）、裁判內文（另外的 endpoint）、各屬性資料，例如：法院、年度、字號、案號、判決日期、獨立分享網址、司法院網站上之ID、參與法官姓名、參與律師姓名等。\n4. 可以透過 API 取得裁判書各屬性的演算法資料。\n5. 可以提交自己的裁判書分析演算法上去。","milestone2":"1. 演算法自動驗證機制。\n2. 使用者裁判書 API 之限流機制，付費訂閱機制。\n3. 使用者提交演算法經系統驗證過上架後，增加 API 可用流量機制。\n4. 裁判書查詢之前台 Web 系統（免登入）。\n5. 後台管理者 dashboard 。","difficulty":"1. 爬蟲的營運成本較難掌握，司法院的裁判書查詢系統不定時會增加阻擋機制，因此必須隨時掌握系統爬取狀況。若成本過大時，會考慮和 Lawsnote 合作，改透過 Lawsnote 取得裁判書原始資料，並且將爬蟲的成本費用轉移至支付給 Lawsnote\n2. 貢獻「分析演算法」的方式過於簡單或複雜，使得有新參與的開發者也難以分享其成果，這部份的技術開發是本團隊目前在經驗上較為缺乏的，因此在確定技術架構以前，需要多花時間研究相關案例的技術細節。\n3. 「演算法驗證」的成本和公平性之間的平衡。目前的構想：新進來的演算法，會從資料庫中隨機抽樣 n 筆進行驗證，既存的演算法，每隔 x 天抽樣 n 筆進行驗證，當抽樣驗證後的準確度高於 y % 時，就讓該演算法上架，低於 z % 時，則下架。因此上述之構想中，各變數之間的調整需要考慮到一個演算法的驗證會花多久時間才能完成，成本、效率、品質三者之間的最佳化需要透過不斷實驗才能得知。\n4. 整體營運成本經費不足。由於維護裁判書資料需要仰賴穩定且龐大的運算成本，目前的財務估算僅包含近兩年內的所有裁判資料，若未來必須將更久以前的裁判資料也抓取下來儲存的話，有可能會發生收入無法負荷支出的可能。由於我們定期會做財務預估報告，因此在可預見未來已算到財務嚴重不足時，便會再尋找任何補助的可能。此外，網站本身也會放置 donate button。\n\n2018/2 更新:\n\n1 如何解決目前已經公開裁判書但卻相當零散而且不完整的問題？例如大部分法院的裁定書都沒有上網，以及各地方法院與不同層級的法院判定書，均是散落在各處而不是在同一個資料庫中。另外像是簡易法庭的判決書，取得難度更高，請問貴團隊如何能解決資料蒐集的困難。  \nA: 目前司法院有開放線上的簡易庭判決書查詢 (http://jirs.judicial.gov.tw/FJUD/FJUDQRY01M_E_1.aspx)  ，就目前司法院所公布的「法學資料檢索開放範圍」( http://jirs.judicial.gov.tw/datascop.asp ) 所有判決書目前均已統整至司法院的判決書查詢系統，若有查詢不到的情況，直接向司法院反應即可。但此階段的計畫內容，基於時間、人力、預算的考量，簡易庭目前沒有在計畫範圍內，我們希望先把主要的判決書做到能解決資料使用者的需求後，再擴張簡易庭爬蟲的部份，理想會希望能在下一階段進行。  \n  \n2 目前司法院對於裁定書開放採取相當保守甚至不友善的態度。大部分資料都很難直接從開放式資料庫內取得，如何能夠在目前的開放資料之外獲取更多的裁判書，進而超越現在司法陽光網的進展？另此計畫提及將與司法院合作，是否已經取得司法院任何善意回應？  \nA: 目前在司法院的開放資料中，最新最完整的屬司法院網站的裁判書查詢系統\n (http://jirs.judicial.gov.tw/FJUD/ ) 十分方便搜尋最新或較早以前的裁判資料，優於目前政府資料開放平台上的資料查詢方式，但目前這些資料僅能透過寫爬蟲的方式取得，並沒有提供相關 API ，而司法院網站本身對於爬蟲的阻擋十分嚴格，因此針對這部份我們經過幾次和司法院的溝通後，目前所取得的回應是他們會在今年嘗試把 API 開放的部份以較小的規模進行公開招標，讓小廠商也有機會能參與司法院的資料開放。總結上述：司法院網站是目前透過資訊化所能取得最完整裁判書資料的管道，但仍礙於開放 API 的缺乏以及對爬蟲的不友善阻擋，我們希望透過和司法院的溝通，能解決上述問題。  \n  \n3 如果要透過更多不同的爬蟲程式，去撈取更多的司法院散落在各處的開放資料，那此計劃預算僅規劃6個人月的全端工程師及1個人月的前端工程師，是否足夠處理複雜且需不斷更改的程式需求？  \nA: 以目前來說，司法院的資料其實都集中在司法院網站的裁判書查詢系統裡，其散落在各處的開放資料，其實都只是把這個網站所開放的資料一部分丟到不同的開放資料平台上，所以只要專注於取得司法院網站的資料便足夠。維護爬蟲其實是必須要持續進行的，但我們必須在六個月內完成完整的監控更新，以確保司法院網站有更新或提高爬蟲阻擋時，系統能夠即時通知工程人員處理，六個月後的維護成本即可大大降低，且該成本我們是希望能夠過資料使用者的捐款來維持。  \n  \n4 本計劃絕大部分預算與工作均是用在工程師。但誠如計劃所言，法院的判決書閱讀不易且毫無結構。此問題司法院也完全清楚，未來也有意要求法官採取較嚴謹而結構式的書寫格式。但在裁判書書寫尚未改革之前，此計畫如何能透過程式設計，就可以把鬆散紊亂的大量判決書格式化並且進一步分析，本計劃應該多做說明。  \n5 承上，此計畫未編列任何預算聘請法律專業人才，恐怕嚴重低估了裁判書書寫格式與資料散落的複雜困難程度。  \nA: (兩題一起回答) 本計劃在第一階段期間，有針對判決書內容做了簡易的初步分析，例如分析出法官名字、當事人名稱、律師名稱等，透過分析失敗記錄的數據監控，也逐步改良修正分析方式，以提升分析結果。然而在第一階段結束後，我們意識到單憑我們少數幾人之力是很難在短時間內把裁判書內文分析做到位，且資料使用者的需求也都不同，因此萌生了將分析演算法以平台的方式開放出來，讓人人都可以一起來貢獻參與判決書的內文分析，加速內文分析的完整度和準確性，以 open source 的概念來實作此平台，並且提供每個演算的分析評估數據做為貢獻者的參考。本計劃的主軸在於「如何讓更多開發者更有意願來貢獻自己的裁判書分析演算法」，因此我們在預算安排上，有刻意跳脫出「把成本投入在分析內文」上，因為前一階段的計畫中，我們有感受到投入在內文分析的時間和成本是需要非常多的，所以本計劃將方向轉而擁抱開放模式，讓更多人能投入在內文分析，並且具有累積效益。  \n  \n6 此計劃應是奠基在司法陽光網的基礎下。作為第二階段的目標應該寫得更清楚。是否應該鎖定特定類型判決？或是特定法院範圍？或是特定年份或司法人員？目標不能太大且案件量也不能太多，才有可能達成計劃目標，也才可以作為未來第三階的重要基礎。  \nA: 由於本計劃只針對司法院的裁判書查詢系統 (http://jirs.judicial.gov.tw/FJUD/) 內的資料爬取，該系統也是目前最新最完整，且也囊括了司法院散落在各開放平台的資料，因此資料的範圍均包含此系統上所涵蓋的範圍，即各法院的刑事、民事、行政、公懲的判決和裁決書，由於本系統從第一階段開始時，是從 105 年的資料開始抓取，所以資料的時間範圍會先縮限在 105 年後的裁判書資料，未來專案能取得更多預算時，再往前把過往資料，包含簡易庭的部份也都抓下來。以最保守的情況來說，若資料量過大，超出原本預估的機器預算時，我們會以 106 年一整年 + 地方法院 + 判決書（不含裁決）的範圍作為最保守的資料範圍。","future":"外部合作:\n\n1. 目前大部分民眾仍是使用政府所提供的裁判書查詢系統，因此最主要會希望能和司法院合作，將此系統之全部或部分功能模組用於現行政府網站裡，例如在查詢系統某處放置連結或直接嵌入，以提供該裁判、案件更完整之資訊，以便於民眾查詢。\n2. Lawsnote 等相關企業公司合作，將本計劃之成果應用於這些公司原本所提供的服務中，加值其原本所提供之服務。\n\n產品:\n\n1. 基於判決書屬性完整化後，可發展國際化標準的 Akoma Ntoso 格式，使其應用的範圍能延伸至國際化程度。","otherfund":"抓取裁判書的爬蟲、儲存裁判書資料的主機、提供 API 的主機，目前均由「財團法人民間司法改革基金會」所負擔，本計劃確定核准後，便會改由「伍樓專業資訊工作室」負擔大部分的主機成本，司改會則基於使用裁判書資料，負擔少部分的成本。  \n  \n本計劃的目的在於讓系統能夠有自給自足的營運模式，在上線後司改會也能夠成為本系統的付費使用者之一。","category":"開放資料","slide":"","related":"「司改會」的「司法陽光網」 https://sunshine.jrf.org.tw/\n此專案中有一部分的功能需要實作出「司法院裁判書的爬取」、「裁判書內文資料分析」、「以\n API 開放資料」，本次提案之計畫亦是承襲此三項功能之成果，繼續累積更進階的功能上去。\n","nonos":"否","role":"| 名稱 | 角色 | 背景經驗 |\n| -- | -- | -- |\n| Mars Chen | PM + Developer |  https://5fpro.com , 9 年後端開發 |\n| Jude Wang |  F2E + Designer | https://jude.asia , 6 年前端開發 |\n| Sean Wang | Backend Developer | https://5fpro.com , 4 年後端開發 |\n\n我們都是在公司上班一段時間後，自己出來接案子當自由工作者，早期的專案類型不拘，近三年開始只做電子商務類型的專案，包含線上購物、開店平台、售票、募姿等，舉凡有購物車、訂單、金流等功能，皆為我們的目標專案。\n\n專案作品:\n\n- THEWALL 這牆音樂: https://thewall.tw\n- STUDIODOE: https://studiodoe.com\n- 陽光伏特家: https://www.sunnyfounder.com\n- 愛飯團 (即將上線): http://www.ifuntuan.com/\n- 司法陽光網: https://sunshine.jrf.org.tw/\n- 國會無雙: https://musou.tw\n- TripMoment: https://tripmoment.com/\n","detailUser":"裁判書分析","detailProblem":"結構化程度低落","detailSolution":"裁判書屬性分析","detailCompetitor":"Lawsnote 七法 - 法學資料庫","detailCompare":"屬性分析演算法的開放程度","detailService":"裁判書查詢系統","link":"https://sunshine.jrf.org.tw/","leader":{"_id":"5a4620ceba08b0001e7303d6","username":"marsz","name":"MarsZ Chen","picture":"https://avatars3.githubusercontent.com/u/169716?v=4","provider":"github","bio":"伍樓專業資訊, https://5fpro.com\nRuby on Rails 工程師，於五年前從 PHP 工程師轉換至 Rails 工程師後，便開始接案人生，一直以來便希望能將自己所學用於創造社會價值。\n專案經歷:\n- https://thewall.tw\n- https://studiodoe.com\n- https://musou.tw/\n- https://tripmoment.com/\n- https://sunshine.jrf.org.tw/\n- https://www.sunnyfounder.com/\n- https://myshopmatic.com/\n- https://www.bznk.com/","created_at":"2017-12-29T11:02:38.159Z","admin_in":[]},"domain":"2018a","cover":"/uploads/49a7a3b57a7f45ae37b573cfa3909aa5.png","created_at":"2018-01-19T11:09:23.531Z","updated_at":"2018-02-23T11:50:12.649Z","tags":["判決","法律","資訊檢索","司法","裁判","司改會"],"finalist":true,"awarded":false,"followers":[{"_id":"5a4becae20777c001e1b01de","username":"Monaludao","name":"理查 (monaludao)","picture":"https://avatars0.githubusercontent.com/u/8519772?v=4","provider":"github","bio":"g0v 開放都市計畫專案坑主\n城市說話數位工作室創設人\n前任都市規劃師、現以工作室名義接案工作\n目前致力於推動「都市計畫委員會會議紀錄資料庫」專案","created_at":"2018-01-02T20:33:50.510Z","admin_in":[]},{"_id":"5878769155fa75001ef55ed9","username":"YuCJ","name":"Yu CJ","picture":"https://avatars2.githubusercontent.com/u/5386489?v=4","provider":"github","bio":"","created_at":"2017-01-13T06:41:21.138Z","admin_in":[]},{"_id":"595d02cf390542001e402167","username":"Will li","name":"Will li","picture":"https://lh5.googleusercontent.com/-9FduKEWFui0/AAAAAAAAAAI/AAAAAAAAFUg/ZzplNoGCtCM/photo.jpg?sz=50","provider":"google","created_at":"2017-07-05T15:16:31.859Z","admin_in":[]},{"_id":"5b921c4e0208d3001bef63d9","username":"Jason Ke","name":"Jason Ke","picture":"https://lh5.googleusercontent.com/-LVn8KPxiKW0/AAAAAAAAAAI/AAAAAAAADhw/GeS35cHGTLk/photo.jpg?sz=50","provider":"google","created_at":"2018-09-07T06:35:58.744Z","admin_in":[]},{"_id":"5c0a9a7ea88ce3001b199faa","username":"Sivart S","name":"Sivart S","picture":"https://lh6.googleusercontent.com/-z_A_BR9v2po/AAAAAAAAAAI/AAAAAAAAACI/x7QhkYuIIK4/photo.jpg?sz=50","provider":"google","created_at":"2018-12-07T16:06:22.279Z","admin_in":[]},{"_id":"61150e18c9b274001bdf66d6","username":"Charles Peng","name":"Charles Peng","picture":"https://lh3.googleusercontent.com/a/AATXAJxRXMQgO1jny7b9JKVWEsiWUwlr2B0wtOQSVMcI=s50-mo","provider":"google","created_at":"2021-08-12T12:03:36.696Z","admin_in":[]}],"contributors":[{"_id":"5a4620ceba08b0001e7303d6","username":"marsz","name":"MarsZ Chen","picture":"https://avatars3.githubusercontent.com/u/169716?v=4","provider":"github","bio":"伍樓專業資訊, https://5fpro.com\nRuby on Rails 工程師，於五年前從 PHP 工程師轉換至 Rails 工程師後，便開始接案人生，一直以來便希望能將自己所學用於創造社會價值。\n專案經歷:\n- https://thewall.tw\n- https://studiodoe.com\n- https://musou.tw/\n- https://tripmoment.com/\n- https://sunshine.jrf.org.tw/\n- https://www.sunnyfounder.com/\n- https://myshopmatic.com/\n- https://www.bznk.com/","created_at":"2017-12-29T11:02:38.159Z","admin_in":[]}],"status":"brainstorming","revisions":[{"timestamp":"2018-01-19T11:14:48.187Z","money":500000,"desc":"從司法院網站所提供的裁判書內文中，將其屬性分析所用的詞庫和規則，以開放資料的形式提供，任何人皆可取得完整的裁判書分析演算法，也同時可以貢獻自己的裁判書分析演算法。透過眾人之力的累積，使裁判書屬性分析能愈加精準、豐富。","motivation":"約一年多前，受到由司改會委外開發的「司法陽光網」，因而開始寫爬蟲爬司法院的裁判書，發現蠻多人都在做同樣的事情，我希望透過開源、開放的方式，讓相同目的的工作能盡量的減少，去年我們完成了裁判書的爬取，並且將其開放，今年我們想要更進一步的也把裁判書分析的部份也用同樣的方式完成，然後就會開始把資源慢慢轉向行銷、合作的方向，讓做完的專案能開始在社會中發酵、持續提供價值。","existed":"是的。\n公開網站: https://sunshine.jrf.org.tw/\n原始碼: https://github.com/JRF-tw/sunshine.jrf.org.tw","problem":"目前司法院所提供的裁判書開放資料結構化程度低，且也不是最原始的 raw data，使得裁判書資料取得成本極高。此外，裁判書的每一項屬性分析都需要大量的分析規則和詞庫，才能達到完全的精準，主因在於目前裁判書的書寫格式規範仍會因不同法院、不同法官而有所差異，而且也會隨時間改變，相同的分析演算法或詞庫，也必須因應書寫格式的改變而更新。\n\n本計劃的目標在於:\n1. 解決裁判書原始資料和結構化資料取得的不易。\n2. 提昇裁判書屬性分析的準確性。\n3. 開放裁判書屬性分析背後的所有演算法資料，讓任何人皆可運用其成果。","solution":"1. 裁判書查詢提供 API 和 Web console，以期望要取用裁判資料的個人或組織可以不用再花時間寫爬蟲。\n2. 裁判書查詢的條件包含「司法院裁判書查詢系統」內的所有欄位，除「全文檢索語詞」之外。\n3. 承 `2.` 。另提供案由、法官姓名、律師姓名等查詢，查詢條件可視系統屬性分析規則的演進而增加。\n4. 提供裁判書各屬性所使用的規則（正規表示法）和詞庫 API ，同時包含其目前的準確度，以期望進行裁判書分析的個人或組織有現成的分析規則可直接使用。\n5. 承 `4.` 。API 亦包含「增加屬性」、「增加屬性下的規則或詞庫」等行為，所增加的屬性和規則，系統會自動排程計算其準確度，準確度到達一個程度後便可成為 `4.` 所提供的資料內容之一。\n6. Web console 的部份會獨立一個專案，使用上述的 API 來開發，做為 API 使用的示範性應用。\n7. 定期掃描每個演算法的近期準確度，低於一個門檻值時，會以 Email 通知系統人員和貢獻者。藉此減輕維護者的維護成本。","why":"裁判書分析的演算法在不同領域和組織都有其自己的解決方式，我們的方法最主要是希望透過制定簡易的標準化格式，讓這些演算法能夠累積在同一個平台上，並且開放給所有人使用。透過開放的方式，裁判書分析才能夠隨著時間累積跟上環境的變化，並且愈加精準。\n為了提供動力給參與改進的個人或組織，我們同時要求參與改進的貢獻者提供其背景資料（也可選擇匿名），讓使用分析規則詞庫的人也可以知道哪些演算法是來自由哪些提供者，藉此增加貢獻者的曝光度。","ta":"此計畫的目標對象可分為兩類：資料使用者和演算法使用者。兩者均可透過 API 和 Web interface 進行。\n\n資料使用者：依裁判書屬性取得裁判書資料，例如引用判決、引用法規、法官姓名關鍵字、律師姓名關鍵字、法院等，所取得的資料包含「司法院原始內文連結」、「原始連結內容之 raw html」、「裁判書內文 raw data」以及裁判書分析後的各項屬性。此情境用於使用者依特定目的查詢裁判書。\n\n演算法使用者: 可取得裁判書分析的各項屬性，其中每一項屬性下都有各個「演算法規則資料」，每一「演算法規則資料」又會再包含「已驗證資料數」、「準確度」、「演算法提供者」等。另可新增屬性，或在特定屬性下新增「演算法規則資料」。此情境用於當資料使用者發現透過本計劃之平台取得的裁判書資料分析結果內容有問題時，可貢獻自己的「演算法規則資料」，藉此修正本計畫之平台所提供的資料內容。","growth":"API 使用者都必須註冊後（github oauth）取得 access token 才能使用，每位使用者的使用記錄和 Email 都會存在平台的資料庫內，所以平台會定期寄送 Email ，摘要資料庫更新的統計數據，以及功能更新，寄送條件僅限於有意願訂閱 Email 的使用者。另外，本計劃也會新增 FB 粉絲專頁，提供無技術背景使用者也有管道可給予指教。而有技術背景的使用者除了粉絲專頁外，我們也會另闢 gitter 或 Slack 等頻道予以討論，問題回報或功能追加請求則採用 github issue 來蒐集意見。","similar":"相似專案可參考「司改會」的「司法陽光網」https://sunshine.jrf.org.tw/\n原始碼: https://github.com/JRF-tw/sunshine.jrf.org.tw （以下稱「陽光網」）。陽光網內的「案件查詢」https://sunshine.jrf.org.tw/search 即為去年 g0v grant 所補助的對象之一，包含裁判書的爬取和 API 資料開放。\n而本計劃亦是承襲此專案之成果和資料，繼續開發出分析判決書用的演算法資料開放，其差異性如下:\n1. API 使用必須註冊，且使用者依不同付費等級有不同的使用量等級\n2. 提供測試環境給 API 使用者\n3. 提供詞庫和演算法內容的 API \n4. 司法院資料爬取的數據統計 API\n5. 裁判書 API 提供更細的資料結構\n6. 演算法和詞庫貢獻者透過成功貢獻，可獲得 API 資料使用量的贈送\n","refdesign":"裁判書查詢系統示意網站 https://sunshine.jrf.org.tw/ \n","pastprj":"https://github.com/5fpro/gaia\n  - 縣市鄉鎮郵遞區號選擇器\nhttps://github.com/5fpro/lita-aws\n  - AWS 命令列的聊天機器人版本\nhttps://github.com/marsz/twd97\n  - 座標系統單位轉換器\nhttps://github.com/5fpro/sqldesigner-rails\n  - 畫 ERD 的工具整合成後台管理系統","cowork":"民間團體\n  - 財團法人民間司法改革基金會\n政府\n  - 司法院\n司法相關企業\n  - Lawsnote (尚未洽談)","usetime":"全端工程師預計共 500 小時\n0. 10 HRs - 系統評估\n1. 20 HRs - App platform 系統架構研究與 prototype\n2. 10 HRs - 文件，包含流程圖、story 等\n3. 2 HRs - 開源專案相關設定: CI, Code Climate, Coverage 等\n4. 50 HRs - 繼承之開源專案系統內容重寫，包含爬蟲與 API\n5. 10 HRs - 網站基本 Layout 與拉皮\n6. 80 HRs - API 使用之驗證與申請機制\n7. 60 HRs - 分析演算法資料庫化(app 化)\n8. 40 HRs - 分析演算法驗證機制\n9. 100 HRs - 分析演算法提供機制\n10. 30 HRs - 付費金流系統串接 (Tappay)\n11. 30 HRs - 演算法相關 API\n12. 50 HRs - 系統管理者後台\n13. 10 HRs - API 對外使用文件 (swagger)\n14. 50 HRs - 裁判書查詢之 Web 開發(前端)\n15. 10 HRs - 裁判書查詢之 Web 開發(後端 + 主機)\n\n所有開發工時共 562 小時。\n不含通勤、吃飯、午睡、上廁所等非系統開發相關之時數。Daily work hour 可以 5 小時計算，因此共 113 個工作天，除以 20 約 5.5 個月，財務預估約 7 個人月，因此餘下的 1.5 個人月可做為開發緩衝和行銷推廣用的時間。","spending":"77% 全端工程師: 包含繼承之開源專案的修改以及本計劃內容之所有開發工程。 $65000 TWD * 6 個人月 = $390000 TWD\n12% 前端工程師: 用於開發簡易版 web console 以及系統有關 web 部分的基本樣式的設計，一個人月已夠。$60000 TWD\n2% 雜支: 包含交通、網域（一年）\b約 $10000 TWD 內\n9% 開發期間主機成本: 參考此 AWS calculator 之計算結果\n (https://calculator.s3.amazonaws.com/index.html#r=NRT&key=\ncalc-57C18228-18E5-44DB-9C5F-81B30DC955FA) ，每個月 $250 USD ， 6 個月共 $1500 UDS => $45000 TWD\n","feedback":"Github Issue / Gitter 給技術背景和專案參與者參與。\n粉絲專頁\ng0v 相關討論平台等","product":"所有系統包含爬蟲、網站、API 均在 GitHub 上使用 MIT 授權","milestone1":"1. 裁判書查詢之 API 使用申請，透過 GitHub 註冊/登入後，可取得兩組 access token \n，一組用於測試環境，另外一組用於正式環境。\n2. 使用者可以重置 access token。\n3. 透過 access token 取得裁判書資料 (JSON)，其中包含 raw_html (會提供另外一個 endpoint 取得）、裁判內文（另外的 endpoint）、各屬性資料，例如：法院、年度、字號、案號、判決日期、獨立分享網址、司法院網站上之ID、參與法官姓名、參與律師姓名等。\n4. 可以透過 API 取得裁判書各屬性的演算法資料。\n5. 可以提交自己的裁判書分析演算法上去。","milestone2":"1. 演算法自動驗證機制。\n2. 使用者裁判書 API 之限流機制，付費訂閱機制。\n3. 使用者提交演算法經系統驗證過上架後，增加 API 可用流量機制。\n4. 裁判書查詢之前台 Web 系統（免登入）。\n5. 後台管理者 dashboard 。","difficulty":"1. 爬蟲的營運成本較難掌握，司法院的裁判書查詢系統不定時會增加阻擋機制，因此必須隨時掌握系統爬取狀況。若成本過大時，會考慮和 Lawsnote 合作，改透過 Lawsnote 取得裁判書原始資料，並且將爬蟲的成本費用轉移至支付給 Lawsnote\n2. 貢獻「分析演算法」的方式過於簡單或複雜，使得有新參與的開發者也難以分享其成果，這部份的技術開發是本團隊目前在經驗上較為缺乏的，因此在確定技術架構以前，需要多花時間研究相關案例的技術細節。\n3. 「演算法驗證」的成本和公平性之間的平衡。目前的構想：新進來的演算法，會從資料庫中隨機抽樣 n 筆進行驗證，既存的演算法，每隔 x 天抽樣 n 筆進行驗證，當抽樣驗證後的準確度高於 y % 時，就讓該演算法上架，低於 z % 時，則下架。因此上述之構想中，各變數之間的調整需要考慮到一個演算法的驗證會花多久時間才能完成，成本、效率、品質三者之間的最佳化需要透過不斷實驗才能得知。\n4. 整體營運成本經費不足。由於維護裁判書資料需要仰賴穩定且龐大的運算成本，目前的財務估算僅包含近兩年內的所有裁判資料，若未來必須將更久以前的裁判資料也抓取下來儲存的話，有可能會發生收入無法負荷支出的可能。由於我們定期會做財務預估報告，因此在可預見未來已算到財務嚴重不足時，便會再尋找任何補助的可能。此外，網站本身也會放置 donate button。","future":"外部合作:\n1. 目前大部分民眾仍是使用政府所提供的裁判書查詢系統，因此最主要會希望能和司法院合作，將此系統之全部或部分功能模組用於現行政府網站裡，例如在查詢系統某處放置連結或直接嵌入，以提供該裁判、案件更完整之資訊，以便於民眾查詢。\n2. Lawsnote 等相關企業公司合作，將本計劃之成果應用於這些公司原本所提供的服務中，加值其原本所提供之服務。\n\n產品:\n1. 基於判決書屬性完整化後，可發展國際化標準的 Akoma Ntoso 格式，使其應用的範圍能延伸至國際化程度。\n2. 應用於","otherfund":"抓取裁判書的爬蟲、儲存裁判書資料的主機、提供 API 的主機，目前均由「財團法人民間司法改革基金會」所負擔，本計劃確定核准後，便會改由「伍樓專業資訊工作室」負擔大部分的主機成本，司改會則基於使用裁判書資料，負擔少部分的成本。\n\n本計劃的目的在於讓系統能夠有自給自足的營運模式，在上線後司改會也能夠成為本系統的付費使用者之一。","category":"開放資料","slide":"","related":"「司改會」的「司法陽光網」 https://sunshine.jrf.org.tw/\n此專案中有一部分的功能需要實作出「司法院裁判書的爬取」、「裁判書內文資料分析」、「以\n API 開放資料」，本次提案之計畫亦是承襲此三項功能之成果，繼續累積更進階的功能上去。\n","nonos":"否","role":"Mars Chen, CEO @ https://5fpro.com, 9 年後端開發\nJude Wang, CEO @ https://jude.asia, 6 年前端開發","detailUser":"裁判書分析","detailSolution":"裁判書屬性分析","detailProblem":"結構化程度低落","detailService":"裁判書查詢系統","detailCompetitor":"Lawsnote 七法 - 法學資料庫","detailCompare":"屬性分析演算法的開放程度","_id":"5a61d328900e86001bf9f49a"},{"timestamp":"2018-01-19T11:17:24.316Z","money":500000,"desc":"從司法院網站所提供的裁判書內文中，將其屬性分析所用的詞庫和規則，以開放資料的形式提供，任何人皆可取得完整的裁判書分析演算法，也同時可以貢獻自己的裁判書分析演算法。透過眾人之力的累積，使裁判書屬性分析能愈加精準、豐富。","motivation":"約一年多前，受到由司改會委外開發的「司法陽光網」，因而開始寫爬蟲爬司法院的裁判書，發現蠻多人都在做同樣的事情，我希望透過開源、開放的方式，讓相同目的的工作能盡量的減少，去年我們完成了裁判書的爬取，並且將其開放，今年我們想要更進一步的也把裁判書分析的部份也用同樣的方式完成，然後就會開始把資源慢慢轉向行銷、合作的方向，讓做完的專案能開始在社會中發酵、持續提供價值。","existed":"是的。\n公開網站: https://sunshine.jrf.org.tw/\n原始碼: https://github.com/JRF-tw/sunshine.jrf.org.tw","problem":"目前司法院所提供的裁判書開放資料結構化程度低，且也不是最原始的 raw data，使得裁判書資料取得成本極高。此外，裁判書的每一項屬性分析都需要大量的分析規則和詞庫，才能達到完全的精準，主因在於目前裁判書的書寫格式規範仍會因不同法院、不同法官而有所差異，而且也會隨時間改變，相同的分析演算法或詞庫，也必須因應書寫格式的改變而更新。\n\n本計劃的目標在於:\n1. 解決裁判書原始資料和結構化資料取得的不易。\n2. 提昇裁判書屬性分析的準確性。\n3. 開放裁判書屬性分析背後的所有演算法資料，讓任何人皆可運用其成果。","solution":"1. 裁判書查詢提供 API 和 Web console，以期望要取用裁判資料的個人或組織可以不用再花時間寫爬蟲。\n2. 裁判書查詢的條件包含「司法院裁判書查詢系統」內的所有欄位，除「全文檢索語詞」之外。\n3. 承 `2.` 。另提供案由、法官姓名、律師姓名等查詢，查詢條件可視系統屬性分析規則的演進而增加。\n4. 提供裁判書各屬性所使用的規則（正規表示法）和詞庫 API ，同時包含其目前的準確度，以期望進行裁判書分析的個人或組織有現成的分析規則可直接使用。\n5. 承 `4.` 。API 亦包含「增加屬性」、「增加屬性下的規則或詞庫」等行為，所增加的屬性和規則，系統會自動排程計算其準確度，準確度到達一個程度後便可成為 `4.` 所提供的資料內容之一。\n6. Web console 的部份會獨立一個專案，使用上述的 API 來開發，做為 API 使用的示範性應用。\n7. 定期掃描每個演算法的近期準確度，低於一個門檻值時，會以 Email 通知系統人員和貢獻者。藉此減輕維護者的維護成本。","why":"裁判書分析的演算法在不同領域和組織都有其自己的解決方式，我們的方法最主要是希望透過制定簡易的標準化格式，讓這些演算法能夠累積在同一個平台上，並且開放給所有人使用。透過開放的方式，裁判書分析才能夠隨著時間累積跟上環境的變化，並且愈加精準。\n為了提供動力給參與改進的個人或組織，我們同時要求參與改進的貢獻者提供其背景資料（也可選擇匿名），讓使用分析規則詞庫的人也可以知道哪些演算法是來自由哪些提供者，藉此增加貢獻者的曝光度。","ta":"此計畫的目標對象可分為兩類：資料使用者和演算法使用者。兩者均可透過 API 和 Web interface 進行。\n\n資料使用者：依裁判書屬性取得裁判書資料，例如引用判決、引用法規、法官姓名關鍵字、律師姓名關鍵字、法院等，所取得的資料包含「司法院原始內文連結」、「原始連結內容之 raw html」、「裁判書內文 raw data」以及裁判書分析後的各項屬性。此情境用於使用者依特定目的查詢裁判書。\n\n演算法使用者: 可取得裁判書分析的各項屬性，其中每一項屬性下都有各個「演算法規則資料」，每一「演算法規則資料」又會再包含「已驗證資料數」、「準確度」、「演算法提供者」等。另可新增屬性，或在特定屬性下新增「演算法規則資料」。此情境用於當資料使用者發現透過本計劃之平台取得的裁判書資料分析結果內容有問題時，可貢獻自己的「演算法規則資料」，藉此修正本計畫之平台所提供的資料內容。","growth":"API 使用者都必須註冊後（github oauth）取得 access token 才能使用，每位使用者的使用記錄和 Email 都會存在平台的資料庫內，所以平台會定期寄送 Email ，摘要資料庫更新的統計數據，以及功能更新，寄送條件僅限於有意願訂閱 Email 的使用者。另外，本計劃也會新增 FB 粉絲專頁，提供無技術背景使用者也有管道可給予指教。而有技術背景的使用者除了粉絲專頁外，我們也會另闢 gitter 或 Slack 等頻道予以討論，問題回報或功能追加請求則採用 github issue 來蒐集意見。","similar":"相似專案可參考「司改會」的「司法陽光網」https://sunshine.jrf.org.tw/\n原始碼: https://github.com/JRF-tw/sunshine.jrf.org.tw （以下稱「陽光網」）。陽光網內的「案件查詢」https://sunshine.jrf.org.tw/search 即為去年 g0v grant 所補助的對象之一，包含裁判書的爬取和 API 資料開放。\n而本計劃亦是承襲此專案之成果和資料，繼續開發出分析判決書用的演算法資料開放，其差異性如下:\n1. API 使用必須註冊，且使用者依不同付費等級有不同的使用量等級\n2. 提供測試環境給 API 使用者\n3. 提供詞庫和演算法內容的 API \n4. 司法院資料爬取的數據統計 API\n5. 裁判書 API 提供更細的資料結構\n6. 演算法和詞庫貢獻者透過成功貢獻，可獲得 API 資料使用量的贈送\n","refdesign":"裁判書查詢系統示意網站 https://sunshine.jrf.org.tw/ \n","pastprj":"https://github.com/5fpro/gaia\n  - 縣市鄉鎮郵遞區號選擇器\nhttps://github.com/5fpro/lita-aws\n  - AWS 命令列的聊天機器人版本\nhttps://github.com/marsz/twd97\n  - 座標系統單位轉換器\nhttps://github.com/5fpro/sqldesigner-rails\n  - 畫 ERD 的工具整合成後台管理系統","cowork":"民間團體\n  - 財團法人民間司法改革基金會\n政府\n  - 司法院\n司法相關企業\n  - Lawsnote (尚未洽談)","usetime":"全端工程師預計共 500 小時\n\n1. 10 HRs - 系統評估\n2. 20 HRs - App platform 系統架構研究與 prototype\n3. 10 HRs - 文件，包含流程圖、story 等\n4. 2 HRs - 開源專案相關設定: CI, Code Climate, Coverage 等\n5. 50 HRs - 繼承之開源專案系統內容重寫，包含爬蟲與 API\n6. 10 HRs - 網站基本 Layout 與拉皮\n7. 80 HRs - API 使用之驗證與申請機制\n8. 60 HRs - 分析演算法資料庫化(app 化)\n9. 40 HRs - 分析演算法驗證機制\n10. 100 HRs - 分析演算法提供機制\n11. 30 HRs - 付費金流系統串接 (Tappay)\n12. 30 HRs - 演算法相關 API\n13. 50 HRs - 系統管理者後台\n14. 10 HRs - API 對外使用文件 (swagger)\n15. 50 HRs - 裁判書查詢之 Web 開發(前端)\n16. 10 HRs - 裁判書查詢之 Web 開發(後端 + 主機)\n\n所有開發工時共 562 小時。\n不含通勤、吃飯、午睡、上廁所等非系統開發相關之時數。Daily work hour 可以 5 小時計算，因此共 113 個工作天，除以 20 約 5.5 個月，財務預估約 7 個人月，因此餘下的 1.5 個人月可做為開發緩衝和行銷推廣用的時間。","spending":"77% 全端工程師: 包含繼承之開源專案的修改以及本計劃內容之所有開發工程。 $65000 TWD * 6 個人月 = $390000 TWD\n12% 前端工程師: 用於開發簡易版 web console 以及系統有關 web 部分的基本樣式的設計，一個人月已夠。$60000 TWD\n2% 雜支: 包含交通、網域（一年）\b約 $10000 TWD 內\n9% 開發期間主機成本: 參考此 AWS calculator 之計算結果\n (https://calculator.s3.amazonaws.com/index.html#r=NRT&key=\ncalc-57C18228-18E5-44DB-9C5F-81B30DC955FA) ，每個月 $250 USD ， 6 個月共 $1500 UDS => $45000 TWD\n","feedback":"Github Issue / Gitter 給技術背景和專案參與者參與。\n粉絲專頁\ng0v 相關討論平台等","product":"所有系統包含爬蟲、網站、API 均在 GitHub 上使用 MIT 授權","milestone1":"1. 裁判書查詢之 API 使用申請，透過 GitHub 註冊/登入後，可取得兩組 access token \n，一組用於測試環境，另外一組用於正式環境。\n2. 使用者可以重置 access token。\n3. 透過 access token 取得裁判書資料 (JSON)，其中包含 raw_html (會提供另外一個 endpoint 取得）、裁判內文（另外的 endpoint）、各屬性資料，例如：法院、年度、字號、案號、判決日期、獨立分享網址、司法院網站上之ID、參與法官姓名、參與律師姓名等。\n4. 可以透過 API 取得裁判書各屬性的演算法資料。\n5. 可以提交自己的裁判書分析演算法上去。","milestone2":"1. 演算法自動驗證機制。\n2. 使用者裁判書 API 之限流機制，付費訂閱機制。\n3. 使用者提交演算法經系統驗證過上架後，增加 API 可用流量機制。\n4. 裁判書查詢之前台 Web 系統（免登入）。\n5. 後台管理者 dashboard 。","difficulty":"1. 爬蟲的營運成本較難掌握，司法院的裁判書查詢系統不定時會增加阻擋機制，因此必須隨時掌握系統爬取狀況。若成本過大時，會考慮和 Lawsnote 合作，改透過 Lawsnote 取得裁判書原始資料，並且將爬蟲的成本費用轉移至支付給 Lawsnote\n2. 貢獻「分析演算法」的方式過於簡單或複雜，使得有新參與的開發者也難以分享其成果，這部份的技術開發是本團隊目前在經驗上較為缺乏的，因此在確定技術架構以前，需要多花時間研究相關案例的技術細節。\n3. 「演算法驗證」的成本和公平性之間的平衡。目前的構想：新進來的演算法，會從資料庫中隨機抽樣 n 筆進行驗證，既存的演算法，每隔 x 天抽樣 n 筆進行驗證，當抽樣驗證後的準確度高於 y % 時，就讓該演算法上架，低於 z % 時，則下架。因此上述之構想中，各變數之間的調整需要考慮到一個演算法的驗證會花多久時間才能完成，成本、效率、品質三者之間的最佳化需要透過不斷實驗才能得知。\n4. 整體營運成本經費不足。由於維護裁判書資料需要仰賴穩定且龐大的運算成本，目前的財務估算僅包含近兩年內的所有裁判資料，若未來必須將更久以前的裁判資料也抓取下來儲存的話，有可能會發生收入無法負荷支出的可能。由於我們定期會做財務預估報告，因此在可預見未來已算到財務嚴重不足時，便會再尋找任何補助的可能。此外，網站本身也會放置 donate button。","future":"外部合作:\n\n1. 目前大部分民眾仍是使用政府所提供的裁判書查詢系統，因此最主要會希望能和司法院合作，將此系統之全部或部分功能模組用於現行政府網站裡，例如在查詢系統某處放置連結或直接嵌入，以提供該裁判、案件更完整之資訊，以便於民眾查詢。\n2. Lawsnote 等相關企業公司合作，將本計劃之成果應用於這些公司原本所提供的服務中，加值其原本所提供之服務。\n\n產品:\n\n1. 基於判決書屬性完整化後，可發展國際化標準的 Akoma Ntoso 格式，使其應用的範圍能延伸至國際化程度。\n2. 應用於","otherfund":"抓取裁判書的爬蟲、儲存裁判書資料的主機、提供 API 的主機，目前均由「財團法人民間司法改革基金會」所負擔，本計劃確定核准後，便會改由「伍樓專業資訊工作室」負擔大部分的主機成本，司改會則基於使用裁判書資料，負擔少部分的成本。\n\n本計劃的目的在於讓系統能夠有自給自足的營運模式，在上線後司改會也能夠成為本系統的付費使用者之一。","category":"開放資料","slide":"","related":"「司改會」的「司法陽光網」 https://sunshine.jrf.org.tw/\n此專案中有一部分的功能需要實作出「司法院裁判書的爬取」、「裁判書內文資料分析」、「以\n API 開放資料」，本次提案之計畫亦是承襲此三項功能之成果，繼續累積更進階的功能上去。\n","nonos":"否","role":"Mars Chen, CEO @ https://5fpro.com, 9 年後端開發\nJude Wang, CEO @ https://jude.asia, 6 年前端開發","detailUser":"裁判書分析","detailSolution":"裁判書屬性分析","detailProblem":"結構化程度低落","detailService":"裁判書查詢系統","detailCompetitor":"Lawsnote 七法 - 法學資料庫","detailCompare":"屬性分析演算法的開放程度","_id":"5a61d3c4900e86001bf9f49b"},{"timestamp":"2018-01-19T11:21:53.962Z","money":500000,"desc":"從司法院網站所提供的裁判書內文中，將其屬性分析所用的詞庫和規則，以開放資料的形式提供，任何人皆可取得完整的裁判書分析演算法，也同時可以貢獻自己的裁判書分析演算法。透過眾人之力的累積，使裁判書屬性分析能愈加精準、豐富。","motivation":"約一年多前，受到由司改會委外開發的「司法陽光網」，因而開始寫爬蟲爬司法院的裁判書，發現蠻多人都在做同樣的事情，我希望透過開源、開放的方式，讓相同目的的工作能盡量的減少，去年我們完成了裁判書的爬取，並且將其開放，今年我們想要更進一步的也把裁判書分析的部份也用同樣的方式完成，然後就會開始把資源慢慢轉向行銷、合作的方向，讓做完的專案能開始在社會中發酵、持續提供價值。","existed":"是的。  \n公開網站: https://sunshine.jrf.org.tw/  \n原始碼: https://github.com/JRF-tw/sunshine.jrf.org.tw  ","problem":"目前司法院所提供的裁判書開放資料結構化程度低，且也不是最原始的 raw data，使得裁判書資料取得成本極高。此外，裁判書的每一項屬性分析都需要大量的分析規則和詞庫，才能達到完全的精準，主因在於目前裁判書的書寫格式規範仍會因不同法院、不同法官而有所差異，而且也會隨時間改變，相同的分析演算法或詞庫，也必須因應書寫格式的改變而更新。  \n  \n本計劃的目標在於:  \n\n1. 解決裁判書原始資料和結構化資料取得的不易。\n2. 提昇裁判書屬性分析的準確性。\n3. 開放裁判書屬性分析背後的所有演算法資料，讓任何人皆可運用其成果。","solution":"1. 裁判書查詢提供 API 和 Web console，以期望要取用裁判資料的個人或組織可以不用再花時間寫爬蟲。\n2. 裁判書查詢的條件包含「司法院裁判書查詢系統」內的所有欄位，除「全文檢索語詞」之外。\n3. 承 `2.` 。另提供案由、法官姓名、律師姓名等查詢，查詢條件可視系統屬性分析規則的演進而增加。\n4. 提供裁判書各屬性所使用的規則（正規表示法）和詞庫 API ，同時包含其目前的準確度，以期望進行裁判書分析的個人或組織有現成的分析規則可直接使用。\n5. 承 `4.` 。API 亦包含「增加屬性」、「增加屬性下的規則或詞庫」等行為，所增加的屬性和規則，系統會自動排程計算其準確度，準確度到達一個程度後便可成為 `4.` 所提供的資料內容之一。\n6. Web console 的部份會獨立一個專案，使用上述的 API 來開發，做為 API 使用的示範性應用。\n7. 定期掃描每個演算法的近期準確度，低於一個門檻值時，會以 Email 通知系統人員和貢獻者。藉此減輕維護者的維護成本。","why":"裁判書分析的演算法在不同領域和組織都有其自己的解決方式，我們的方法最主要是希望透過制定簡易的標準化格式，讓這些演算法能夠累積在同一個平台上，並且開放給所有人使用。透過開放的方式，裁判書分析才能夠隨著時間累積跟上環境的變化，並且愈加精準。  \n為了提供動力給參與改進的個人或組織，我們同時要求參與改進的貢獻者提供其背景資料（也可選擇匿名），讓使用分析規則詞庫的人也可以知道哪些演算法是來自由哪些提供者，藉此增加貢獻者的曝光度。","ta":"此計畫的目標對象可分為兩類：資料使用者和演算法使用者。兩者均可透過 API 和 Web interface 進行。  \n  \n資料使用者：依裁判書屬性取得裁判書資料，例如引用判決、引用法規、法官姓名關鍵字、律師姓名關鍵字、法院等，所取得的資料包含「司法院原始內文連結」、「原始連結內容之 raw html」、「裁判書內文 raw data」以及裁判書分析後的各項屬性。此情境用於使用者依特定目的查詢裁判書。  \n  \n演算法使用者: 可取得裁判書分析的各項屬性，其中每一項屬性下都有各個「演算法規則資料」，每一「演算法規則資料」又會再包含「已驗證資料數」、「準確度」、「演算法提供者」等。另可新增屬性，或在特定屬性下新增「演算法規則資料」。此情境用於當資料使用者發現透過本計劃之平台取得的裁判書資料分析結果內容有問題時，可貢獻自己的「演算法規則資料」，藉此修正本計畫之平台所提供的資料內容。","growth":"API 使用者都必須註冊後（github oauth）取得 access token 才能使用，每位使用者的使用記錄和 Email 都會存在平台的資料庫內，所以平台會定期寄送 Email ，摘要資料庫更新的統計數據，以及功能更新，寄送條件僅限於有意願訂閱 Email 的使用者。另外，本計劃也會新增 FB 粉絲專頁，提供無技術背景使用者也有管道可給予指教。而有技術背景的使用者除了粉絲專頁外，我們也會另闢 gitter 或 Slack 等頻道予以討論，問題回報或功能追加請求則採用 github issue 來蒐集意見。","similar":"相似專案可參考「司改會」的「司法陽光網」https://sunshine.jrf.org.tw/\n原始碼: https://github.com/JRF-tw/sunshine.jrf.org.tw （以下稱「陽光網」）。陽光網內的「案件查詢」https://sunshine.jrf.org.tw/search 即為去年 g0v grant 所補助的對象之一，包含裁判書的爬取和 API 資料開放。\n而本計劃亦是承襲此專案之成果和資料，繼續開發出分析判決書用的演算法資料開放，其差異性如下:\n1. API 使用必須註冊，且使用者依不同付費等級有不同的使用量等級\n2. 提供測試環境給 API 使用者\n3. 提供詞庫和演算法內容的 API \n4. 司法院資料爬取的數據統計 API\n5. 裁判書 API 提供更細的資料結構\n6. 演算法和詞庫貢獻者透過成功貢獻，可獲得 API 資料使用量的贈送\n","refdesign":"裁判書查詢系統示意網站 https://sunshine.jrf.org.tw/ \n","pastprj":"- https://github.com/5fpro/gaia\n  - 縣市鄉鎮郵遞區號選擇器\n- https://github.com/5fpro/lita-aws\n  - AWS 命令列的聊天機器人版本\n- https://github.com/marsz/twd97\n  - 座標系統單位轉換器\n- https://github.com/5fpro/sqldesigner-rails\n  - 畫 ERD 的工具整合成後台管理系統","cowork":"- 民間團體:\n  - 財團法人民間司法改革基金會\n- 政府:\n  - 司法院\n- 司法相關企業:\n  - Lawsnote (尚未洽談)","usetime":"全端工程師預計共 500 小時\n\n1. 10 HRs - 系統評估\n2. 20 HRs - App platform 系統架構研究與 prototype\n3. 10 HRs - 文件，包含流程圖、story 等\n4. 2 HRs - 開源專案相關設定: CI, Code Climate, Coverage 等\n5. 50 HRs - 繼承之開源專案系統內容重寫，包含爬蟲與 API\n6. 10 HRs - 網站基本 Layout 與拉皮\n7. 80 HRs - API 使用之驗證與申請機制\n8. 60 HRs - 分析演算法資料庫化(app 化)\n9. 40 HRs - 分析演算法驗證機制\n10. 100 HRs - 分析演算法提供機制\n11. 30 HRs - 付費金流系統串接 (Tappay)\n12. 30 HRs - 演算法相關 API\n13. 50 HRs - 系統管理者後台\n14. 10 HRs - API 對外使用文件 (swagger)\n15. 50 HRs - 裁判書查詢之 Web 開發(前端)\n16. 10 HRs - 裁判書查詢之 Web 開發(後端 + 主機)\n\n所有開發工時共 562 小時。\n不含通勤、吃飯、午睡、上廁所等非系統開發相關之時數。Daily work hour 可以 5 小時計算，因此共 113 個工作天，除以 20 約 5.5 個月，財務預估約 7 個人月，因此餘下的 1.5 個人月可做為開發緩衝和行銷推廣用的時間。","spending":"- 77% 全端工程師: 包含繼承之開源專案的修改以及本計劃內容之所有開發工程。 $65000 TWD * 6 個人月 = $390000 TWD\n- 12% 前端工程師: 用於開發簡易版 web console 以及系統有關 web 部分的基本樣式的設計，一個人月已夠。$60000 TWD\n- 2% 雜支: 包含交通、網域（一年）\b約 $10000 TWD 內\n- 9% 開發期間主機成本: 參考此 AWS calculator 之計算結果\n (https://calculator.s3.amazonaws.com/index.html#r=NRT&key=\ncalc-57C18228-18E5-44DB-9C5F-81B30DC955FA) ，每個月 $250 USD ， 6 個月共 $1500 UDS => $45000 TWD\n","feedback":"Github Issue / Gitter 給技術背景和專案參與者參與。\n粉絲專頁\ng0v 相關討論平台等","product":"所有系統包含爬蟲、網站、API 均在 GitHub 上使用 MIT 授權","milestone1":"1. 裁判書查詢之 API 使用申請，透過 GitHub 註冊/登入後，可取得兩組 access token \n，一組用於測試環境，另外一組用於正式環境。\n2. 使用者可以重置 access token。\n3. 透過 access token 取得裁判書資料 (JSON)，其中包含 raw_html (會提供另外一個 endpoint 取得）、裁判內文（另外的 endpoint）、各屬性資料，例如：法院、年度、字號、案號、判決日期、獨立分享網址、司法院網站上之ID、參與法官姓名、參與律師姓名等。\n4. 可以透過 API 取得裁判書各屬性的演算法資料。\n5. 可以提交自己的裁判書分析演算法上去。","milestone2":"1. 演算法自動驗證機制。\n2. 使用者裁判書 API 之限流機制，付費訂閱機制。\n3. 使用者提交演算法經系統驗證過上架後，增加 API 可用流量機制。\n4. 裁判書查詢之前台 Web 系統（免登入）。\n5. 後台管理者 dashboard 。","difficulty":"1. 爬蟲的營運成本較難掌握，司法院的裁判書查詢系統不定時會增加阻擋機制，因此必須隨時掌握系統爬取狀況。若成本過大時，會考慮和 Lawsnote 合作，改透過 Lawsnote 取得裁判書原始資料，並且將爬蟲的成本費用轉移至支付給 Lawsnote\n2. 貢獻「分析演算法」的方式過於簡單或複雜，使得有新參與的開發者也難以分享其成果，這部份的技術開發是本團隊目前在經驗上較為缺乏的，因此在確定技術架構以前，需要多花時間研究相關案例的技術細節。\n3. 「演算法驗證」的成本和公平性之間的平衡。目前的構想：新進來的演算法，會從資料庫中隨機抽樣 n 筆進行驗證，既存的演算法，每隔 x 天抽樣 n 筆進行驗證，當抽樣驗證後的準確度高於 y % 時，就讓該演算法上架，低於 z % 時，則下架。因此上述之構想中，各變數之間的調整需要考慮到一個演算法的驗證會花多久時間才能完成，成本、效率、品質三者之間的最佳化需要透過不斷實驗才能得知。\n4. 整體營運成本經費不足。由於維護裁判書資料需要仰賴穩定且龐大的運算成本，目前的財務估算僅包含近兩年內的所有裁判資料，若未來必須將更久以前的裁判資料也抓取下來儲存的話，有可能會發生收入無法負荷支出的可能。由於我們定期會做財務預估報告，因此在可預見未來已算到財務嚴重不足時，便會再尋找任何補助的可能。此外，網站本身也會放置 donate button。","future":"外部合作:\n\n1. 目前大部分民眾仍是使用政府所提供的裁判書查詢系統，因此最主要會希望能和司法院合作，將此系統之全部或部分功能模組用於現行政府網站裡，例如在查詢系統某處放置連結或直接嵌入，以提供該裁判、案件更完整之資訊，以便於民眾查詢。\n2. Lawsnote 等相關企業公司合作，將本計劃之成果應用於這些公司原本所提供的服務中，加值其原本所提供之服務。\n\n產品:\n\n1. 基於判決書屬性完整化後，可發展國際化標準的 Akoma Ntoso 格式，使其應用的範圍能延伸至國際化程度。\n2. 應用於","otherfund":"抓取裁判書的爬蟲、儲存裁判書資料的主機、提供 API 的主機，目前均由「財團法人民間司法改革基金會」所負擔，本計劃確定核准後，便會改由「伍樓專業資訊工作室」負擔大部分的主機成本，司改會則基於使用裁判書資料，負擔少部分的成本。  \n  \n本計劃的目的在於讓系統能夠有自給自足的營運模式，在上線後司改會也能夠成為本系統的付費使用者之一。","category":"開放資料","slide":"","related":"「司改會」的「司法陽光網」 https://sunshine.jrf.org.tw/\n此專案中有一部分的功能需要實作出「司法院裁判書的爬取」、「裁判書內文資料分析」、「以\n API 開放資料」，本次提案之計畫亦是承襲此三項功能之成果，繼續累積更進階的功能上去。\n","nonos":"否","role":"- Mars Chen, CEO @ https://5fpro.com, 9 年後端開發  \n- Jude Wang, CEO @ https://jude.asia, 6 年前端開發","detailUser":"裁判書分析","detailSolution":"裁判書屬性分析","detailProblem":"結構化程度低落","detailService":"裁判書查詢系統","detailCompetitor":"Lawsnote 七法 - 法學資料庫","detailCompare":"屬性分析演算法的開放程度","_id":"5a61d4d1900e86001bf9f49c"},{"timestamp":"2018-01-19T11:23:36.765Z","money":500000,"desc":"從司法院網站所提供的裁判書內文中，將其屬性分析所用的詞庫和規則，以開放資料的形式提供，任何人皆可取得完整的裁判書分析演算法，也同時可以貢獻自己的裁判書分析演算法。透過眾人之力的累積，使裁判書屬性分析能愈加精準、豐富。","motivation":"約一年多前，受到由司改會委外開發的「司法陽光網」，因而開始寫爬蟲爬司法院的裁判書，發現蠻多人都在做同樣的事情，我希望透過開源、開放的方式，讓相同目的的工作能盡量的減少，去年我們完成了裁判書的爬取，並且將其開放，今年我們想要更進一步的也把裁判書分析的部份也用同樣的方式完成，然後就會開始把資源慢慢轉向行銷、合作的方向，讓做完的專案能開始在社會中發酵、持續提供價值。","existed":"是的。  \n公開網站: https://sunshine.jrf.org.tw/  \n原始碼: https://github.com/JRF-tw/sunshine.jrf.org.tw  ","problem":"目前司法院所提供的裁判書開放資料結構化程度低，且也不是最原始的 raw data，使得裁判書資料取得成本極高。此外，裁判書的每一項屬性分析都需要大量的分析規則和詞庫，才能達到完全的精準，主因在於目前裁判書的書寫格式規範仍會因不同法院、不同法官而有所差異，而且也會隨時間改變，相同的分析演算法或詞庫，也必須因應書寫格式的改變而更新。  \n  \n本計劃的目標在於:  \n\n1. 解決裁判書原始資料和結構化資料取得的不易。\n2. 提昇裁判書屬性分析的準確性。\n3. 開放裁判書屬性分析背後的所有演算法資料，讓任何人皆可運用其成果。","solution":"1. 裁判書查詢提供 API 和 Web console，以期望要取用裁判資料的個人或組織可以不用再花時間寫爬蟲。\n2. 裁判書查詢的條件包含「司法院裁判書查詢系統」內的所有欄位，除「全文檢索語詞」之外。\n3. 承 `2.` 。另提供案由、法官姓名、律師姓名等查詢，查詢條件可視系統屬性分析規則的演進而增加。\n4. 提供裁判書各屬性所使用的規則（正規表示法）和詞庫 API ，同時包含其目前的準確度，以期望進行裁判書分析的個人或組織有現成的分析規則可直接使用。\n5. 承 `4.` 。API 亦包含「增加屬性」、「增加屬性下的規則或詞庫」等行為，所增加的屬性和規則，系統會自動排程計算其準確度，準確度到達一個程度後便可成為 `4.` 所提供的資料內容之一。\n6. Web console 的部份會獨立一個專案，使用上述的 API 來開發，做為 API 使用的示範性應用。\n7. 定期掃描每個演算法的近期準確度，低於一個門檻值時，會以 Email 通知系統人員和貢獻者。藉此減輕維護者的維護成本。","why":"裁判書分析的演算法在不同領域和組織都有其自己的解決方式，我們的方法最主要是希望透過制定簡易的標準化格式，讓這些演算法能夠累積在同一個平台上，並且開放給所有人使用。透過開放的方式，裁判書分析才能夠隨著時間累積跟上環境的變化，並且愈加精準。  \n為了提供動力給參與改進的個人或組織，我們同時要求參與改進的貢獻者提供其背景資料（也可選擇匿名），讓使用分析規則詞庫的人也可以知道哪些演算法是來自由哪些提供者，藉此增加貢獻者的曝光度。","ta":"此計畫的目標對象可分為兩類：資料使用者和演算法使用者。兩者均可透過 API 和 Web interface 進行。  \n  \n資料使用者：依裁判書屬性取得裁判書資料，例如引用判決、引用法規、法官姓名關鍵字、律師姓名關鍵字、法院等，所取得的資料包含「司法院原始內文連結」、「原始連結內容之 raw html」、「裁判書內文 raw data」以及裁判書分析後的各項屬性。此情境用於使用者依特定目的查詢裁判書。  \n  \n演算法使用者: 可取得裁判書分析的各項屬性，其中每一項屬性下都有各個「演算法規則資料」，每一「演算法規則資料」又會再包含「已驗證資料數」、「準確度」、「演算法提供者」等。另可新增屬性，或在特定屬性下新增「演算法規則資料」。此情境用於當資料使用者發現透過本計劃之平台取得的裁判書資料分析結果內容有問題時，可貢獻自己的「演算法規則資料」，藉此修正本計畫之平台所提供的資料內容。","growth":"API 使用者都必須註冊後（github oauth）取得 access token 才能使用，每位使用者的使用記錄和 Email 都會存在平台的資料庫內，所以平台會定期寄送 Email ，摘要資料庫更新的統計數據，以及功能更新，寄送條件僅限於有意願訂閱 Email 的使用者。另外，本計劃也會新增 FB 粉絲專頁，提供無技術背景使用者也有管道可給予指教。而有技術背景的使用者除了粉絲專頁外，我們也會另闢 gitter 或 Slack 等頻道予以討論，問題回報或功能追加請求則採用 github issue 來蒐集意見。","similar":"相似專案可參考「司改會」的「司法陽光網」https://sunshine.jrf.org.tw/\n原始碼: https://github.com/JRF-tw/sunshine.jrf.org.tw （以下稱「陽光網」）。陽光網內的「案件查詢」https://sunshine.jrf.org.tw/search 即為去年 g0v grant 所補助的對象之一，包含裁判書的爬取和 API 資料開放。\n而本計劃亦是承襲此專案之成果和資料，繼續開發出分析判決書用的演算法資料開放，其差異性如下:\n1. API 使用必須註冊，且使用者依不同付費等級有不同的使用量等級\n2. 提供測試環境給 API 使用者\n3. 提供詞庫和演算法內容的 API \n4. 司法院資料爬取的數據統計 API\n5. 裁判書 API 提供更細的資料結構\n6. 演算法和詞庫貢獻者透過成功貢獻，可獲得 API 資料使用量的贈送\n","refdesign":"裁判書查詢系統示意網站 https://sunshine.jrf.org.tw/ \n","pastprj":"- https://github.com/5fpro/gaia\n  - 縣市鄉鎮郵遞區號選擇器\n- https://github.com/5fpro/lita-aws\n  - AWS 命令列的聊天機器人版本\n- https://github.com/marsz/twd97\n  - 座標系統單位轉換器\n- https://github.com/5fpro/sqldesigner-rails\n  - 畫 ERD 的工具整合成後台管理系統","cowork":"- 民間團體:\n  - 財團法人民間司法改革基金會\n- 政府:\n  - 司法院\n- 司法相關企業:\n  - Lawsnote (尚未洽談)","usetime":"全端工程師預計共 500 小時\n\n1. 10 HRs - 系統評估\n2. 20 HRs - App platform 系統架構研究與 prototype\n3. 10 HRs - 文件，包含流程圖、story 等\n4. 2 HRs - 開源專案相關設定: CI, Code Climate, Coverage 等\n5. 50 HRs - 繼承之開源專案系統內容重寫，包含爬蟲與 API\n6. 10 HRs - 網站基本 Layout 與拉皮\n7. 80 HRs - API 使用之驗證與申請機制\n8. 60 HRs - 分析演算法資料庫化(app 化)\n9. 40 HRs - 分析演算法驗證機制\n10. 100 HRs - 分析演算法提供機制\n11. 30 HRs - 付費金流系統串接 (Tappay)\n12. 30 HRs - 演算法相關 API\n13. 50 HRs - 系統管理者後台\n14. 10 HRs - API 對外使用文件 (swagger)\n15. 50 HRs - 裁判書查詢之 Web 開發(前端)\n16. 10 HRs - 裁判書查詢之 Web 開發(後端 + 主機)\n\n所有開發工時共 562 小時。\n不含通勤、吃飯、午睡、上廁所等非系統開發相關之時數。Daily work hour 可以 5 小時計算，因此共 113 個工作天，除以 20 約 5.5 個月，財務預估約 7 個人月，因此餘下的 1.5 個人月可做為開發緩衝和行銷推廣用的時間。","spending":"- 77% 全端工程師: 包含繼承之開源專案的修改以及本計劃內容之所有開發工程。 $65000 TWD * 6 個人月 = $390000 TWD\n- 12% 前端工程師: 用於開發簡易版 web console 以及系統有關 web 部分的基本樣式的設計，一個人月已夠。$60000 TWD\n- 2% 雜支: 包含交通、網域（一年）\b約 $10000 TWD 內\n- 9% 開發期間主機成本: 參考此 AWS calculator 之計算結果\n (https://calculator.s3.amazonaws.com/index.html#r=NRT&key=\ncalc-57C18228-18E5-44DB-9C5F-81B30DC955FA) ，每個月 $250 USD ， 6 個月共 $1500 UDS => $45000 TWD\n","feedback":"Github Issue / Gitter 給技術背景和專案參與者參與。\n粉絲專頁\ng0v 相關討論平台等","product":"所有系統包含爬蟲、網站、API 均在 GitHub 上使用 MIT 授權","milestone1":"1. 裁判書查詢之 API 使用申請，透過 GitHub 註冊/登入後，可取得兩組 access token \n，一組用於測試環境，另外一組用於正式環境。\n2. 使用者可以重置 access token。\n3. 透過 access token 取得裁判書資料 (JSON)，其中包含 raw_html (會提供另外一個 endpoint 取得）、裁判內文（另外的 endpoint）、各屬性資料，例如：法院、年度、字號、案號、判決日期、獨立分享網址、司法院網站上之ID、參與法官姓名、參與律師姓名等。\n4. 可以透過 API 取得裁判書各屬性的演算法資料。\n5. 可以提交自己的裁判書分析演算法上去。","milestone2":"1. 演算法自動驗證機制。\n2. 使用者裁判書 API 之限流機制，付費訂閱機制。\n3. 使用者提交演算法經系統驗證過上架後，增加 API 可用流量機制。\n4. 裁判書查詢之前台 Web 系統（免登入）。\n5. 後台管理者 dashboard 。","difficulty":"1. 爬蟲的營運成本較難掌握，司法院的裁判書查詢系統不定時會增加阻擋機制，因此必須隨時掌握系統爬取狀況。若成本過大時，會考慮和 Lawsnote 合作，改透過 Lawsnote 取得裁判書原始資料，並且將爬蟲的成本費用轉移至支付給 Lawsnote\n2. 貢獻「分析演算法」的方式過於簡單或複雜，使得有新參與的開發者也難以分享其成果，這部份的技術開發是本團隊目前在經驗上較為缺乏的，因此在確定技術架構以前，需要多花時間研究相關案例的技術細節。\n3. 「演算法驗證」的成本和公平性之間的平衡。目前的構想：新進來的演算法，會從資料庫中隨機抽樣 n 筆進行驗證，既存的演算法，每隔 x 天抽樣 n 筆進行驗證，當抽樣驗證後的準確度高於 y % 時，就讓該演算法上架，低於 z % 時，則下架。因此上述之構想中，各變數之間的調整需要考慮到一個演算法的驗證會花多久時間才能完成，成本、效率、品質三者之間的最佳化需要透過不斷實驗才能得知。\n4. 整體營運成本經費不足。由於維護裁判書資料需要仰賴穩定且龐大的運算成本，目前的財務估算僅包含近兩年內的所有裁判資料，若未來必須將更久以前的裁判資料也抓取下來儲存的話，有可能會發生收入無法負荷支出的可能。由於我們定期會做財務預估報告，因此在可預見未來已算到財務嚴重不足時，便會再尋找任何補助的可能。此外，網站本身也會放置 donate button。","future":"外部合作:\n\n1. 目前大部分民眾仍是使用政府所提供的裁判書查詢系統，因此最主要會希望能和司法院合作，將此系統之全部或部分功能模組用於現行政府網站裡，例如在查詢系統某處放置連結或直接嵌入，以提供該裁判、案件更完整之資訊，以便於民眾查詢。\n2. Lawsnote 等相關企業公司合作，將本計劃之成果應用於這些公司原本所提供的服務中，加值其原本所提供之服務。\n\n產品:\n\n1. 基於判決書屬性完整化後，可發展國際化標準的 Akoma Ntoso 格式，使其應用的範圍能延伸至國際化程度。\n2. 應用於","otherfund":"抓取裁判書的爬蟲、儲存裁判書資料的主機、提供 API 的主機，目前均由「財團法人民間司法改革基金會」所負擔，本計劃確定核准後，便會改由「伍樓專業資訊工作室」負擔大部分的主機成本，司改會則基於使用裁判書資料，負擔少部分的成本。  \n  \n本計劃的目的在於讓系統能夠有自給自足的營運模式，在上線後司改會也能夠成為本系統的付費使用者之一。","category":"開放資料","slide":"","related":"「司改會」的「司法陽光網」 https://sunshine.jrf.org.tw/\n此專案中有一部分的功能需要實作出「司法院裁判書的爬取」、「裁判書內文資料分析」、「以\n API 開放資料」，本次提案之計畫亦是承襲此三項功能之成果，繼續累積更進階的功能上去。\n","nonos":"否","role":"- Mars Chen, CEO @ https://5fpro.com, 9 年後端開發  \n- Jude Wang, CEO @ https://jude.asia, 6 年前端開發","detailUser":"裁判書分析","detailSolution":"裁判書屬性分析","detailProblem":"結構化程度低落","detailService":"裁判書查詢系統","detailCompetitor":"Lawsnote 七法 - 法學資料庫","detailCompare":"屬性分析演算法的開放程度","_id":"5a61d538900e86001bf9f49d"},{"timestamp":"2018-01-19T11:23:57.831Z","money":500000,"desc":"從司法院網站所提供的裁判書內文中，將其屬性分析所用的詞庫和規則，以開放資料的形式提供，任何人皆可取得完整的裁判書分析演算法，也同時可以貢獻自己的裁判書分析演算法。透過眾人之力的累積，使裁判書屬性分析能愈加精準、豐富。","motivation":"約一年多前，受到由司改會委外開發的「司法陽光網」，因而開始寫爬蟲爬司法院的裁判書，發現蠻多人都在做同樣的事情，我希望透過開源、開放的方式，讓相同目的的工作能盡量的減少，去年我們完成了裁判書的爬取，並且將其開放，今年我們想要更進一步的也把裁判書分析的部份也用同樣的方式完成，然後就會開始把資源慢慢轉向行銷、合作的方向，讓做完的專案能開始在社會中發酵、持續提供價值。","existed":"是的。  \n公開網站: https://sunshine.jrf.org.tw/  \n原始碼: https://github.com/JRF-tw/sunshine.jrf.org.tw  ","problem":"目前司法院所提供的裁判書開放資料結構化程度低，且也不是最原始的 raw data，使得裁判書資料取得成本極高。此外，裁判書的每一項屬性分析都需要大量的分析規則和詞庫，才能達到完全的精準，主因在於目前裁判書的書寫格式規範仍會因不同法院、不同法官而有所差異，而且也會隨時間改變，相同的分析演算法或詞庫，也必須因應書寫格式的改變而更新。  \n  \n本計劃的目標在於:  \n\n1. 解決裁判書原始資料和結構化資料取得的不易。\n2. 提昇裁判書屬性分析的準確性。\n3. 開放裁判書屬性分析背後的所有演算法資料，讓任何人皆可運用其成果。","solution":"1. 裁判書查詢提供 API 和 Web console，以期望要取用裁判資料的個人或組織可以不用再花時間寫爬蟲。\n2. 裁判書查詢的條件包含「司法院裁判書查詢系統」內的所有欄位，除「全文檢索語詞」之外。\n3. 承 `2.` 。另提供案由、法官姓名、律師姓名等查詢，查詢條件可視系統屬性分析規則的演進而增加。\n4. 提供裁判書各屬性所使用的規則（正規表示法）和詞庫 API ，同時包含其目前的準確度，以期望進行裁判書分析的個人或組織有現成的分析規則可直接使用。\n5. 承 `4.` 。API 亦包含「增加屬性」、「增加屬性下的規則或詞庫」等行為，所增加的屬性和規則，系統會自動排程計算其準確度，準確度到達一個程度後便可成為 `4.` 所提供的資料內容之一。\n6. Web console 的部份會獨立一個專案，使用上述的 API 來開發，做為 API 使用的示範性應用。\n7. 定期掃描每個演算法的近期準確度，低於一個門檻值時，會以 Email 通知系統人員和貢獻者。藉此減輕維護者的維護成本。","why":"裁判書分析的演算法在不同領域和組織都有其自己的解決方式，我們的方法最主要是希望透過制定簡易的標準化格式，讓這些演算法能夠累積在同一個平台上，並且開放給所有人使用。透過開放的方式，裁判書分析才能夠隨著時間累積跟上環境的變化，並且愈加精準。  \n為了提供動力給參與改進的個人或組織，我們同時要求參與改進的貢獻者提供其背景資料（也可選擇匿名），讓使用分析規則詞庫的人也可以知道哪些演算法是來自由哪些提供者，藉此增加貢獻者的曝光度。","ta":"此計畫的目標對象可分為兩類：資料使用者和演算法使用者。兩者均可透過 API 和 Web interface 進行。  \n  \n資料使用者：依裁判書屬性取得裁判書資料，例如引用判決、引用法規、法官姓名關鍵字、律師姓名關鍵字、法院等，所取得的資料包含「司法院原始內文連結」、「原始連結內容之 raw html」、「裁判書內文 raw data」以及裁判書分析後的各項屬性。此情境用於使用者依特定目的查詢裁判書。  \n  \n演算法使用者: 可取得裁判書分析的各項屬性，其中每一項屬性下都有各個「演算法規則資料」，每一「演算法規則資料」又會再包含「已驗證資料數」、「準確度」、「演算法提供者」等。另可新增屬性，或在特定屬性下新增「演算法規則資料」。此情境用於當資料使用者發現透過本計劃之平台取得的裁判書資料分析結果內容有問題時，可貢獻自己的「演算法規則資料」，藉此修正本計畫之平台所提供的資料內容。","growth":"API 使用者都必須註冊後（github oauth）取得 access token 才能使用，每位使用者的使用記錄和 Email 都會存在平台的資料庫內，所以平台會定期寄送 Email ，摘要資料庫更新的統計數據，以及功能更新，寄送條件僅限於有意願訂閱 Email 的使用者。另外，本計劃也會新增 FB 粉絲專頁，提供無技術背景使用者也有管道可給予指教。而有技術背景的使用者除了粉絲專頁外，我們也會另闢 gitter 或 Slack 等頻道予以討論，問題回報或功能追加請求則採用 github issue 來蒐集意見。","similar":"相似專案可參考「司改會」的「司法陽光網」https://sunshine.jrf.org.tw/\n原始碼: https://github.com/JRF-tw/sunshine.jrf.org.tw （以下稱「陽光網」）。陽光網內的「案件查詢」https://sunshine.jrf.org.tw/search 即為去年 g0v grant 所補助的對象之一，包含裁判書的爬取和 API 資料開放。\n而本計劃亦是承襲此專案之成果和資料，繼續開發出分析判決書用的演算法資料開放，其差異性如下:\n1. API 使用必須註冊，且使用者依不同付費等級有不同的使用量等級\n2. 提供測試環境給 API 使用者\n3. 提供詞庫和演算法內容的 API \n4. 司法院資料爬取的數據統計 API\n5. 裁判書 API 提供更細的資料結構\n6. 演算法和詞庫貢獻者透過成功貢獻，可獲得 API 資料使用量的贈送\n","refdesign":"裁判書查詢系統示意網站 https://sunshine.jrf.org.tw/ \n","pastprj":"- https://github.com/5fpro/gaia\n  - 縣市鄉鎮郵遞區號選擇器\n- https://github.com/5fpro/lita-aws\n  - AWS 命令列的聊天機器人版本\n- https://github.com/marsz/twd97\n  - 座標系統單位轉換器\n- https://github.com/5fpro/sqldesigner-rails\n  - 畫 ERD 的工具整合成後台管理系統","cowork":"- 民間團體:\n  - 財團法人民間司法改革基金會\n- 政府:\n  - 司法院\n- 司法相關企業:\n  - Lawsnote (尚未洽談)","usetime":"1. 10 HRs - 系統評估\n2. 20 HRs - App platform 系統架構研究與 prototype\n3. 10 HRs - 文件，包含流程圖、story 等\n4. 2 HRs - 開源專案相關設定: CI, Code Climate, Coverage 等\n5. 50 HRs - 繼承之開源專案系統內容重寫，包含爬蟲與 API\n6. 10 HRs - 網站基本 Layout 與拉皮\n7. 80 HRs - API 使用之驗證與申請機制\n8. 60 HRs - 分析演算法資料庫化(app 化)\n9. 40 HRs - 分析演算法驗證機制\n10. 100 HRs - 分析演算法提供機制\n11. 30 HRs - 付費金流系統串接 (Tappay)\n12. 30 HRs - 演算法相關 API\n13. 50 HRs - 系統管理者後台\n14. 10 HRs - API 對外使用文件 (swagger)\n15. 50 HRs - 裁判書查詢之 Web 開發(前端)\n16. 10 HRs - 裁判書查詢之 Web 開發(後端 + 主機)\n\n所有開發工時共 562 小時。\n不含通勤、吃飯、午睡、上廁所等非系統開發相關之時數。Daily work hour 可以 5 小時計算，因此共 113 個工作天，除以 20 約 5.5 個月，財務預估約 7 個人月，因此餘下的 1.5 個人月可做為開發緩衝和行銷推廣用的時間。","spending":"- 77% 全端工程師: 包含繼承之開源專案的修改以及本計劃內容之所有開發工程。 $65000 TWD * 6 個人月 = $390000 TWD\n- 12% 前端工程師: 用於開發簡易版 web console 以及系統有關 web 部分的基本樣式的設計，一個人月已夠。$60000 TWD\n- 2% 雜支: 包含交通、網域（一年）\b約 $10000 TWD 內\n- 9% 開發期間主機成本: 參考此 AWS calculator 之計算結果\n (https://calculator.s3.amazonaws.com/index.html#r=NRT&key=\ncalc-57C18228-18E5-44DB-9C5F-81B30DC955FA) ，每個月 $250 USD ， 6 個月共 $1500 UDS => $45000 TWD\n","feedback":"Github Issue / Gitter 給技術背景和專案參與者參與。\n粉絲專頁\ng0v 相關討論平台等","product":"所有系統包含爬蟲、網站、API 均在 GitHub 上使用 MIT 授權","milestone1":"1. 裁判書查詢之 API 使用申請，透過 GitHub 註冊/登入後，可取得兩組 access token \n，一組用於測試環境，另外一組用於正式環境。\n2. 使用者可以重置 access token。\n3. 透過 access token 取得裁判書資料 (JSON)，其中包含 raw_html (會提供另外一個 endpoint 取得）、裁判內文（另外的 endpoint）、各屬性資料，例如：法院、年度、字號、案號、判決日期、獨立分享網址、司法院網站上之ID、參與法官姓名、參與律師姓名等。\n4. 可以透過 API 取得裁判書各屬性的演算法資料。\n5. 可以提交自己的裁判書分析演算法上去。","milestone2":"1. 演算法自動驗證機制。\n2. 使用者裁判書 API 之限流機制，付費訂閱機制。\n3. 使用者提交演算法經系統驗證過上架後，增加 API 可用流量機制。\n4. 裁判書查詢之前台 Web 系統（免登入）。\n5. 後台管理者 dashboard 。","difficulty":"1. 爬蟲的營運成本較難掌握，司法院的裁判書查詢系統不定時會增加阻擋機制，因此必須隨時掌握系統爬取狀況。若成本過大時，會考慮和 Lawsnote 合作，改透過 Lawsnote 取得裁判書原始資料，並且將爬蟲的成本費用轉移至支付給 Lawsnote\n2. 貢獻「分析演算法」的方式過於簡單或複雜，使得有新參與的開發者也難以分享其成果，這部份的技術開發是本團隊目前在經驗上較為缺乏的，因此在確定技術架構以前，需要多花時間研究相關案例的技術細節。\n3. 「演算法驗證」的成本和公平性之間的平衡。目前的構想：新進來的演算法，會從資料庫中隨機抽樣 n 筆進行驗證，既存的演算法，每隔 x 天抽樣 n 筆進行驗證，當抽樣驗證後的準確度高於 y % 時，就讓該演算法上架，低於 z % 時，則下架。因此上述之構想中，各變數之間的調整需要考慮到一個演算法的驗證會花多久時間才能完成，成本、效率、品質三者之間的最佳化需要透過不斷實驗才能得知。\n4. 整體營運成本經費不足。由於維護裁判書資料需要仰賴穩定且龐大的運算成本，目前的財務估算僅包含近兩年內的所有裁判資料，若未來必須將更久以前的裁判資料也抓取下來儲存的話，有可能會發生收入無法負荷支出的可能。由於我們定期會做財務預估報告，因此在可預見未來已算到財務嚴重不足時，便會再尋找任何補助的可能。此外，網站本身也會放置 donate button。","future":"外部合作:\n\n1. 目前大部分民眾仍是使用政府所提供的裁判書查詢系統，因此最主要會希望能和司法院合作，將此系統之全部或部分功能模組用於現行政府網站裡，例如在查詢系統某處放置連結或直接嵌入，以提供該裁判、案件更完整之資訊，以便於民眾查詢。\n2. Lawsnote 等相關企業公司合作，將本計劃之成果應用於這些公司原本所提供的服務中，加值其原本所提供之服務。\n\n產品:\n\n1. 基於判決書屬性完整化後，可發展國際化標準的 Akoma Ntoso 格式，使其應用的範圍能延伸至國際化程度。\n2. 應用於","otherfund":"抓取裁判書的爬蟲、儲存裁判書資料的主機、提供 API 的主機，目前均由「財團法人民間司法改革基金會」所負擔，本計劃確定核准後，便會改由「伍樓專業資訊工作室」負擔大部分的主機成本，司改會則基於使用裁判書資料，負擔少部分的成本。  \n  \n本計劃的目的在於讓系統能夠有自給自足的營運模式，在上線後司改會也能夠成為本系統的付費使用者之一。","category":"開放資料","slide":"","related":"「司改會」的「司法陽光網」 https://sunshine.jrf.org.tw/\n此專案中有一部分的功能需要實作出「司法院裁判書的爬取」、「裁判書內文資料分析」、「以\n API 開放資料」，本次提案之計畫亦是承襲此三項功能之成果，繼續累積更進階的功能上去。\n","nonos":"否","role":"- Mars Chen, CEO @ https://5fpro.com, 9 年後端開發  \n- Jude Wang, CEO @ https://jude.asia, 6 年前端開發","detailUser":"裁判書分析","detailSolution":"裁判書屬性分析","detailProblem":"結構化程度低落","detailService":"裁判書查詢系統","detailCompetitor":"Lawsnote 七法 - 法學資料庫","detailCompare":"屬性分析演算法的開放程度","_id":"5a61d54d900e86001bf9f49e"},{"timestamp":"2018-01-19T19:11:31.728Z","money":500000,"desc":"從司法院網站所提供的裁判書內文中，將其屬性分析所用的詞庫和規則，以開放資料的形式提供，任何人皆可取得完整的裁判書分析演算法，也同時可以貢獻自己的裁判書分析演算法。透過眾人之力的累積，使裁判書屬性分析能愈加精準、豐富。","motivation":"約一年多前，受到由司改會委外開發的「司法陽光網」，因而開始寫爬蟲爬司法院的裁判書，發現蠻多人都在做同樣的事情，我希望透過開源、開放的方式，讓相同目的的工作能盡量的減少，去年我們完成了裁判書的爬取，並且將其開放，今年我們想要更進一步的也把裁判書分析的部份也用同樣的方式完成，然後就會開始把資源慢慢轉向行銷、合作的方向，讓做完的專案能開始在社會中發酵、持續提供價值。","existed":"是的。  \n公開網站: https://sunshine.jrf.org.tw/  \n原始碼: https://github.com/JRF-tw/sunshine.jrf.org.tw  ","problem":"目前司法院所提供的裁判書開放資料結構化程度低，且也不是最原始的 raw data，使得裁判書資料取得成本極高。此外，裁判書的每一項屬性分析都需要大量的分析規則和詞庫，才能達到完全的精準，主因在於目前裁判書的書寫格式規範仍會因不同法院、不同法官而有所差異，而且也會隨時間改變，相同的分析演算法或詞庫，也必須因應書寫格式的改變而更新。  \n  \n本計劃的目標在於:  \n\n1. 解決裁判書原始資料和結構化資料取得的不易。\n2. 提昇裁判書屬性分析的準確性。\n3. 開放裁判書屬性分析背後的所有演算法資料，讓任何人皆可運用其成果。","solution":"1. 裁判書查詢提供 API 和 Web console，以期望要取用裁判資料的個人或組織可以不用再花時間寫爬蟲。\n2. 裁判書查詢的條件包含「司法院裁判書查詢系統」內的所有欄位，除「全文檢索語詞」之外。\n3. 承 `2.` 。另提供案由、法官姓名、律師姓名等查詢，查詢條件可視系統屬性分析規則的演進而增加。\n4. 提供裁判書各屬性所使用的規則（正規表示法）和詞庫 API ，同時包含其目前的準確度，以期望進行裁判書分析的個人或組織有現成的分析規則可直接使用。\n5. 承 `4.` 。API 亦包含「增加屬性」、「增加屬性下的規則或詞庫」等行為，所增加的屬性和規則，系統會自動排程計算其準確度，準確度到達一個程度後便可成為 `4.` 所提供的資料內容之一。\n6. Web console 的部份會獨立一個專案，使用上述的 API 來開發，做為 API 使用的示範性應用。\n7. 定期掃描每個演算法的近期準確度，低於一個門檻值時，會以 Email 通知系統人員和貢獻者。藉此減輕維護者的維護成本。","why":"裁判書分析的演算法在不同領域和組織都有其自己的解決方式，我們的方法最主要是希望透過制定簡易的標準化格式，讓這些演算法能夠累積在同一個平台上，並且開放給所有人使用。透過開放的方式，裁判書分析才能夠隨著時間累積跟上環境的變化，並且愈加精準。  \n為了提供動力給參與改進的個人或組織，我們同時要求參與改進的貢獻者提供其背景資料（也可選擇匿名），讓使用分析規則詞庫的人也可以知道哪些演算法是來自由哪些提供者，藉此增加貢獻者的曝光度。","ta":"此計畫的目標對象可分為兩類：資料使用者和演算法使用者。兩者均可透過 API 和 Web interface 進行。  \n  \n資料使用者：依裁判書屬性取得裁判書資料，例如引用判決、引用法規、法官姓名關鍵字、律師姓名關鍵字、法院等，所取得的資料包含「司法院原始內文連結」、「原始連結內容之 raw html」、「裁判書內文 raw data」以及裁判書分析後的各項屬性。此情境用於使用者依特定目的查詢裁判書。  \n  \n演算法使用者: 可取得裁判書分析的各項屬性，其中每一項屬性下都有各個「演算法規則資料」，每一「演算法規則資料」又會再包含「已驗證資料數」、「準確度」、「演算法提供者」等。另可新增屬性，或在特定屬性下新增「演算法規則資料」。此情境用於當資料使用者發現透過本計劃之平台取得的裁判書資料分析結果內容有問題時，可貢獻自己的「演算法規則資料」，藉此修正本計畫之平台所提供的資料內容。","growth":"API 使用者都必須註冊後（github oauth）取得 access token 才能使用，每位使用者的使用記錄和 Email 都會存在平台的資料庫內，所以平台會定期寄送 Email ，摘要資料庫更新的統計數據，以及功能更新，寄送條件僅限於有意願訂閱 Email 的使用者。另外，本計劃也會新增 FB 粉絲專頁，提供無技術背景使用者也有管道可給予指教。而有技術背景的使用者除了粉絲專頁外，我們也會另闢 gitter 或 Slack 等頻道予以討論，問題回報或功能追加請求則採用 github issue 來蒐集意見。","similar":"相似專案可參考「司改會」的「司法陽光網」https://sunshine.jrf.org.tw/\n原始碼: https://github.com/JRF-tw/sunshine.jrf.org.tw （以下稱「陽光網」）。陽光網內的「案件查詢」https://sunshine.jrf.org.tw/search 即為去年 g0v grant 所補助的對象之一，包含裁判書的爬取和 API 資料開放。\n而本計劃亦是承襲此專案之成果和資料，繼續開發出分析判決書用的演算法資料開放，其差異性如下:\n1. API 使用必須註冊，且使用者依不同付費等級有不同的使用量等級\n2. 提供測試環境給 API 使用者\n3. 提供詞庫和演算法內容的 API \n4. 司法院資料爬取的數據統計 API\n5. 裁判書 API 提供更細的資料結構\n6. 演算法和詞庫貢獻者透過成功貢獻，可獲得 API 資料使用量的贈送\n","refdesign":"裁判書查詢系統示意網站 https://sunshine.jrf.org.tw/ \n","pastprj":"- https://github.com/5fpro/gaia\n  - 縣市鄉鎮郵遞區號選擇器\n- https://github.com/5fpro/lita-aws\n  - AWS 命令列的聊天機器人版本\n- https://github.com/marsz/twd97\n  - 座標系統單位轉換器\n- https://github.com/5fpro/sqldesigner-rails\n  - 畫 ERD 的工具整合成後台管理系統","cowork":"- 民間團體:\n  - 財團法人民間司法改革基金會\n- 政府:\n  - 司法院\n- 司法相關企業:\n  - Lawsnote (尚未洽談)","usetime":"1. 10 HRs - 系統評估\n2. 20 HRs - App platform 系統架構研究與 prototype\n3. 10 HRs - 文件，包含流程圖、story 等\n4. 2 HRs - 開源專案相關設定: CI, Code Climate, Coverage 等\n5. 50 HRs - 繼承之開源專案系統內容重寫，包含爬蟲與 API\n6. 10 HRs - 網站基本 Layout 與拉皮\n7. 80 HRs - API 使用之驗證與申請機制\n8. 60 HRs - 分析演算法資料庫化(app 化)\n9. 40 HRs - 分析演算法驗證機制\n10. 100 HRs - 分析演算法提供機制\n11. 30 HRs - 付費金流系統串接 (Tappay)\n12. 30 HRs - 演算法相關 API\n13. 50 HRs - 系統管理者後台\n14. 10 HRs - API 對外使用文件 (swagger)\n15. 50 HRs - 裁判書查詢之 Web 開發(前端)\n16. 10 HRs - 裁判書查詢之 Web 開發(後端 + 主機)\n\n所有開發工時共 562 小時。\n不含通勤、吃飯、午睡、上廁所等非系統開發相關之時數。Daily work hour 可以 5 小時計算，因此共 113 個工作天，除以 20 約 5.5 個月，財務預估約 7 個人月，因此餘下的 1.5 個人月可做為開發緩衝和行銷推廣用的時間。","spending":"- 77% 全端工程師: 包含繼承之開源專案的修改以及本計劃內容之所有開發工程。 $65000 TWD * 6 個人月 = $390000 TWD\n- 12% 前端工程師: 用於開發簡易版 web console 以及系統有關 web 部分的基本樣式的設計，一個人月已夠。$60000 TWD\n- 2% 雜支: 包含交通、網域（一年）\b約 $10000 TWD 內\n- 9% 開發期間主機成本: 參考此 AWS calculator 之計算結果\n (https://calculator.s3.amazonaws.com/index.html#r=NRT&key=\ncalc-57C18228-18E5-44DB-9C5F-81B30DC955FA) ，每個月 $250 USD ， 6 個月共 $1500 UDS => $45000 TWD\n","feedback":"Github Issue / Gitter 給技術背景和專案參與者參與。\n粉絲專頁\ng0v 相關討論平台等","product":"所有系統包含爬蟲、網站、API 均在 GitHub 上使用 MIT 授權","milestone1":"1. 裁判書查詢之 API 使用申請，透過 GitHub 註冊/登入後，可取得兩組 access token \n，一組用於測試環境，另外一組用於正式環境。\n2. 使用者可以重置 access token。\n3. 透過 access token 取得裁判書資料 (JSON)，其中包含 raw_html (會提供另外一個 endpoint 取得）、裁判內文（另外的 endpoint）、各屬性資料，例如：法院、年度、字號、案號、判決日期、獨立分享網址、司法院網站上之ID、參與法官姓名、參與律師姓名等。\n4. 可以透過 API 取得裁判書各屬性的演算法資料。\n5. 可以提交自己的裁判書分析演算法上去。","milestone2":"1. 演算法自動驗證機制。\n2. 使用者裁判書 API 之限流機制，付費訂閱機制。\n3. 使用者提交演算法經系統驗證過上架後，增加 API 可用流量機制。\n4. 裁判書查詢之前台 Web 系統（免登入）。\n5. 後台管理者 dashboard 。","difficulty":"1. 爬蟲的營運成本較難掌握，司法院的裁判書查詢系統不定時會增加阻擋機制，因此必須隨時掌握系統爬取狀況。若成本過大時，會考慮和 Lawsnote 合作，改透過 Lawsnote 取得裁判書原始資料，並且將爬蟲的成本費用轉移至支付給 Lawsnote\n2. 貢獻「分析演算法」的方式過於簡單或複雜，使得有新參與的開發者也難以分享其成果，這部份的技術開發是本團隊目前在經驗上較為缺乏的，因此在確定技術架構以前，需要多花時間研究相關案例的技術細節。\n3. 「演算法驗證」的成本和公平性之間的平衡。目前的構想：新進來的演算法，會從資料庫中隨機抽樣 n 筆進行驗證，既存的演算法，每隔 x 天抽樣 n 筆進行驗證，當抽樣驗證後的準確度高於 y % 時，就讓該演算法上架，低於 z % 時，則下架。因此上述之構想中，各變數之間的調整需要考慮到一個演算法的驗證會花多久時間才能完成，成本、效率、品質三者之間的最佳化需要透過不斷實驗才能得知。\n4. 整體營運成本經費不足。由於維護裁判書資料需要仰賴穩定且龐大的運算成本，目前的財務估算僅包含近兩年內的所有裁判資料，若未來必須將更久以前的裁判資料也抓取下來儲存的話，有可能會發生收入無法負荷支出的可能。由於我們定期會做財務預估報告，因此在可預見未來已算到財務嚴重不足時，便會再尋找任何補助的可能。此外，網站本身也會放置 donate button。","future":"外部合作:\n\n1. 目前大部分民眾仍是使用政府所提供的裁判書查詢系統，因此最主要會希望能和司法院合作，將此系統之全部或部分功能模組用於現行政府網站裡，例如在查詢系統某處放置連結或直接嵌入，以提供該裁判、案件更完整之資訊，以便於民眾查詢。\n2. Lawsnote 等相關企業公司合作，將本計劃之成果應用於這些公司原本所提供的服務中，加值其原本所提供之服務。\n\n產品:\n\n1. 基於判決書屬性完整化後，可發展國際化標準的 Akoma Ntoso 格式，使其應用的範圍能延伸至國際化程度。\n2. 應用於","otherfund":"抓取裁判書的爬蟲、儲存裁判書資料的主機、提供 API 的主機，目前均由「財團法人民間司法改革基金會」所負擔，本計劃確定核准後，便會改由「伍樓專業資訊工作室」負擔大部分的主機成本，司改會則基於使用裁判書資料，負擔少部分的成本。  \n  \n本計劃的目的在於讓系統能夠有自給自足的營運模式，在上線後司改會也能夠成為本系統的付費使用者之一。","category":"開放資料","slide":"","related":"「司改會」的「司法陽光網」 https://sunshine.jrf.org.tw/\n此專案中有一部分的功能需要實作出「司法院裁判書的爬取」、「裁判書內文資料分析」、「以\n API 開放資料」，本次提案之計畫亦是承襲此三項功能之成果，繼續累積更進階的功能上去。\n","nonos":"否","role":"- Mars Chen, CEO @ https://5fpro.com, 9 年後端開發  \n- Jude Wang, CEO @ https://jude.asia, 6 年前端開發","detailUser":"裁判書分析","detailSolution":"裁判書屬性分析","detailProblem":"結構化程度低落","detailService":"裁判書查詢系統","detailCompetitor":"Lawsnote 七法 - 法學資料庫","detailCompare":"屬性分析演算法的開放程度","_id":"5a6242e3900e86001bf9f4b9"},{"timestamp":"2018-01-19T19:13:22.041Z","money":500000,"desc":"從司法院網站所提供的裁判書內文中，將其屬性分析所用的詞庫和規則，以開放資料的形式提供，任何人皆可取得完整的裁判書分析演算法，也同時可以貢獻自己的裁判書分析演算法。透過眾人之力的累積，使裁判書屬性分析能愈加精準、豐富。","motivation":"約一年多前，受到由司改會委外開發的「司法陽光網」，因而開始寫爬蟲爬司法院的裁判書，發現蠻多人都在做同樣的事情，我希望透過開源、開放的方式，讓相同目的的工作能盡量的減少，去年我們完成了裁判書的爬取，並且將其開放，今年我們想要更進一步的也把裁判書分析的部份也用同樣的方式完成，然後就會開始把資源慢慢轉向行銷、合作的方向，讓做完的專案能開始在社會中發酵、持續提供價值。","existed":"是的。  \n公開網站: https://sunshine.jrf.org.tw/  \n原始碼: https://github.com/JRF-tw/sunshine.jrf.org.tw  ","problem":"目前司法院所提供的裁判書開放資料結構化程度低，且也不是最原始的 raw data，使得裁判書資料取得成本極高。此外，裁判書的每一項屬性分析都需要大量的分析規則和詞庫，才能達到完全的精準，主因在於目前裁判書的書寫格式規範仍會因不同法院、不同法官而有所差異，而且也會隨時間改變，相同的分析演算法或詞庫，也必須因應書寫格式的改變而更新。  \n  \n本計劃的目標在於:  \n\n1. 解決裁判書原始資料和結構化資料取得的不易。\n2. 提昇裁判書屬性分析的準確性。\n3. 開放裁判書屬性分析背後的所有演算法資料，讓任何人皆可運用其成果。","solution":"1. 裁判書查詢提供 API 和 Web console，以期望要取用裁判資料的個人或組織可以不用再花時間寫爬蟲。\n2. 裁判書查詢的條件包含「司法院裁判書查詢系統」內的所有欄位，除「全文檢索語詞」之外。\n3. 承 `2.` 。另提供案由、法官姓名、律師姓名等查詢，查詢條件可視系統屬性分析規則的演進而增加。\n4. 提供裁判書各屬性所使用的規則（正規表示法）和詞庫 API ，同時包含其目前的準確度，以期望進行裁判書分析的個人或組織有現成的分析規則可直接使用。\n5. 承 `4.` 。API 亦包含「增加屬性」、「增加屬性下的規則或詞庫」等行為，所增加的屬性和規則，系統會自動排程計算其準確度，準確度到達一個程度後便可成為 `4.` 所提供的資料內容之一。\n6. Web console 的部份會獨立一個專案，使用上述的 API 來開發，做為 API 使用的示範性應用。\n7. 定期掃描每個演算法的近期準確度，低於一個門檻值時，會以 Email 通知系統人員和貢獻者。藉此減輕維護者的維護成本。","why":"裁判書分析的演算法在不同領域和組織都有其自己的解決方式，我們的方法最主要是希望透過制定簡易的標準化格式，讓這些演算法能夠累積在同一個平台上，並且開放給所有人使用。透過開放的方式，裁判書分析才能夠隨著時間累積跟上環境的變化，並且愈加精準。  \n為了提供動力給參與改進的個人或組織，我們同時要求參與改進的貢獻者提供其背景資料（也可選擇匿名），讓使用分析規則詞庫的人也可以知道哪些演算法是來自由哪些提供者，藉此增加貢獻者的曝光度。","ta":"此計畫的目標對象可分為兩類：資料使用者和演算法使用者。兩者均可透過 API 和 Web interface 進行。  \n  \n資料使用者：依裁判書屬性取得裁判書資料，例如引用判決、引用法規、法官姓名關鍵字、律師姓名關鍵字、法院等，所取得的資料包含「司法院原始內文連結」、「原始連結內容之 raw html」、「裁判書內文 raw data」以及裁判書分析後的各項屬性。此情境用於使用者依特定目的查詢裁判書。  \n  \n演算法使用者: 可取得裁判書分析的各項屬性，其中每一項屬性下都有各個「演算法規則資料」，每一「演算法規則資料」又會再包含「已驗證資料數」、「準確度」、「演算法提供者」等。另可新增屬性，或在特定屬性下新增「演算法規則資料」。此情境用於當資料使用者發現透過本計劃之平台取得的裁判書資料分析結果內容有問題時，可貢獻自己的「演算法規則資料」，藉此修正本計畫之平台所提供的資料內容。","growth":"API 使用者都必須註冊後（github oauth）取得 access token 才能使用，每位使用者的使用記錄和 Email 都會存在平台的資料庫內，所以平台會定期寄送 Email ，摘要資料庫更新的統計數據，以及功能更新，寄送條件僅限於有意願訂閱 Email 的使用者。另外，本計劃也會新增 FB 粉絲專頁，提供無技術背景使用者也有管道可給予指教。而有技術背景的使用者除了粉絲專頁外，我們也會另闢 gitter 或 Slack 等頻道予以討論，問題回報或功能追加請求則採用 github issue 來蒐集意見。","similar":"相似專案可參考「司改會」的「司法陽光網」https://sunshine.jrf.org.tw/\n原始碼: https://github.com/JRF-tw/sunshine.jrf.org.tw （以下稱「陽光網」）。陽光網內的「案件查詢」https://sunshine.jrf.org.tw/search 即為去年 g0v grant 所補助的對象之一，包含裁判書的爬取和 API 資料開放。\n而本計劃亦是承襲此專案之成果和資料，繼續開發出分析判決書用的演算法資料開放，其差異性如下:\n\n1. API 使用必須註冊，且使用者依不同付費等級有不同的使用量等級\n2. 提供測試環境給 API 使用者\n3. 提供詞庫和演算法內容的 API \n4. 司法院資料爬取的數據統計 API\n5. 裁判書 API 提供更細的資料結構\n6. 演算法和詞庫貢獻者透過成功貢獻，可獲得 API 資料使用量的贈送\n","refdesign":"裁判書查詢系統示意網站 https://sunshine.jrf.org.tw/ \n","pastprj":"- https://github.com/5fpro/gaia\n  - 縣市鄉鎮郵遞區號選擇器\n- https://github.com/5fpro/lita-aws\n  - AWS 命令列的聊天機器人版本\n- https://github.com/marsz/twd97\n  - 座標系統單位轉換器\n- https://github.com/5fpro/sqldesigner-rails\n  - 畫 ERD 的工具整合成後台管理系統","cowork":"- 民間團體:\n  - 財團法人民間司法改革基金會\n- 政府:\n  - 司法院\n- 司法相關企業:\n  - Lawsnote (尚未洽談)","usetime":"1. 10 HRs - 系統評估\n2. 20 HRs - App platform 系統架構研究與 prototype\n3. 10 HRs - 文件，包含流程圖、story 等\n4. 2 HRs - 開源專案相關設定: CI, Code Climate, Coverage 等\n5. 50 HRs - 繼承之開源專案系統內容重寫，包含爬蟲與 API\n6. 10 HRs - 網站基本 Layout 與拉皮\n7. 80 HRs - API 使用之驗證與申請機制\n8. 60 HRs - 分析演算法資料庫化(app 化)\n9. 40 HRs - 分析演算法驗證機制\n10. 100 HRs - 分析演算法提供機制\n11. 30 HRs - 付費金流系統串接 (Tappay)\n12. 30 HRs - 演算法相關 API\n13. 50 HRs - 系統管理者後台\n14. 10 HRs - API 對外使用文件 (swagger)\n15. 50 HRs - 裁判書查詢之 Web 開發(前端)\n16. 10 HRs - 裁判書查詢之 Web 開發(後端 + 主機)\n\n所有開發工時共 562 小時。\n不含通勤、吃飯、午睡、上廁所等非系統開發相關之時數。Daily work hour 可以 5 小時計算，因此共 113 個工作天，除以 20 約 5.5 個月，財務預估約 7 個人月，因此餘下的 1.5 個人月可做為開發緩衝和行銷推廣用的時間。","spending":"- 77% 全端工程師: 包含繼承之開源專案的修改以及本計劃內容之所有開發工程。 $65000 TWD * 6 個人月 = $390000 TWD\n- 12% 前端工程師: 用於開發簡易版 web console 以及系統有關 web 部分的基本樣式的設計，一個人月已夠。$60000 TWD\n- 2% 雜支: 包含交通、網域（一年）\b約 $10000 TWD 內\n- 9% 開發期間主機成本: 參考[AWS calculator 之計算結果](https://calculator.s3.amazonaws.com/index.html#r=NRT&key=\ncalc-57C18228-18E5-44DB-9C5F-81B30DC955FA) ，每個月 $250 USD ， 6 個月共 $1500 UDS => $45000 TWD\n","feedback":"Github Issue / Gitter 給技術背景和專案參與者參與。\n粉絲專頁\ng0v 相關討論平台等","product":"所有系統包含爬蟲、網站、API 均在 GitHub 上使用 MIT 授權","milestone1":"1. 裁判書查詢之 API 使用申請，透過 GitHub 註冊/登入後，可取得兩組 access token \n，一組用於測試環境，另外一組用於正式環境。\n2. 使用者可以重置 access token。\n3. 透過 access token 取得裁判書資料 (JSON)，其中包含 raw_html (會提供另外一個 endpoint 取得）、裁判內文（另外的 endpoint）、各屬性資料，例如：法院、年度、字號、案號、判決日期、獨立分享網址、司法院網站上之ID、參與法官姓名、參與律師姓名等。\n4. 可以透過 API 取得裁判書各屬性的演算法資料。\n5. 可以提交自己的裁判書分析演算法上去。","milestone2":"1. 演算法自動驗證機制。\n2. 使用者裁判書 API 之限流機制，付費訂閱機制。\n3. 使用者提交演算法經系統驗證過上架後，增加 API 可用流量機制。\n4. 裁判書查詢之前台 Web 系統（免登入）。\n5. 後台管理者 dashboard 。","difficulty":"1. 爬蟲的營運成本較難掌握，司法院的裁判書查詢系統不定時會增加阻擋機制，因此必須隨時掌握系統爬取狀況。若成本過大時，會考慮和 Lawsnote 合作，改透過 Lawsnote 取得裁判書原始資料，並且將爬蟲的成本費用轉移至支付給 Lawsnote\n2. 貢獻「分析演算法」的方式過於簡單或複雜，使得有新參與的開發者也難以分享其成果，這部份的技術開發是本團隊目前在經驗上較為缺乏的，因此在確定技術架構以前，需要多花時間研究相關案例的技術細節。\n3. 「演算法驗證」的成本和公平性之間的平衡。目前的構想：新進來的演算法，會從資料庫中隨機抽樣 n 筆進行驗證，既存的演算法，每隔 x 天抽樣 n 筆進行驗證，當抽樣驗證後的準確度高於 y % 時，就讓該演算法上架，低於 z % 時，則下架。因此上述之構想中，各變數之間的調整需要考慮到一個演算法的驗證會花多久時間才能完成，成本、效率、品質三者之間的最佳化需要透過不斷實驗才能得知。\n4. 整體營運成本經費不足。由於維護裁判書資料需要仰賴穩定且龐大的運算成本，目前的財務估算僅包含近兩年內的所有裁判資料，若未來必須將更久以前的裁判資料也抓取下來儲存的話，有可能會發生收入無法負荷支出的可能。由於我們定期會做財務預估報告，因此在可預見未來已算到財務嚴重不足時，便會再尋找任何補助的可能。此外，網站本身也會放置 donate button。","future":"外部合作:\n\n1. 目前大部分民眾仍是使用政府所提供的裁判書查詢系統，因此最主要會希望能和司法院合作，將此系統之全部或部分功能模組用於現行政府網站裡，例如在查詢系統某處放置連結或直接嵌入，以提供該裁判、案件更完整之資訊，以便於民眾查詢。\n2. Lawsnote 等相關企業公司合作，將本計劃之成果應用於這些公司原本所提供的服務中，加值其原本所提供之服務。\n\n產品:\n\n1. 基於判決書屬性完整化後，可發展國際化標準的 Akoma Ntoso 格式，使其應用的範圍能延伸至國際化程度。\n2. 應用於","otherfund":"抓取裁判書的爬蟲、儲存裁判書資料的主機、提供 API 的主機，目前均由「財團法人民間司法改革基金會」所負擔，本計劃確定核准後，便會改由「伍樓專業資訊工作室」負擔大部分的主機成本，司改會則基於使用裁判書資料，負擔少部分的成本。  \n  \n本計劃的目的在於讓系統能夠有自給自足的營運模式，在上線後司改會也能夠成為本系統的付費使用者之一。","category":"開放資料","slide":"","related":"「司改會」的「司法陽光網」 https://sunshine.jrf.org.tw/\n此專案中有一部分的功能需要實作出「司法院裁判書的爬取」、「裁判書內文資料分析」、「以\n API 開放資料」，本次提案之計畫亦是承襲此三項功能之成果，繼續累積更進階的功能上去。\n","nonos":"否","role":"- Mars Chen, CEO @ https://5fpro.com, 9 年後端開發  \n- Jude Wang, CEO @ https://jude.asia, 6 年前端開發","detailUser":"裁判書分析","detailSolution":"裁判書屬性分析","detailProblem":"結構化程度低落","detailService":"裁判書查詢系統","detailCompetitor":"Lawsnote 七法 - 法學資料庫","detailCompare":"屬性分析演算法的開放程度","_id":"5a624352900e86001bf9f4ba"},{"timestamp":"2018-01-20T05:48:33.305Z","money":500000,"desc":"從司法院網站所提供的裁判書內文中，將其屬性分析所用的詞庫和規則，以開放資料的形式提供，任何人皆可取得完整的裁判書分析演算法，也同時可以貢獻自己的裁判書分析演算法。透過眾人之力的累積，使裁判書屬性分析能愈加精準、豐富。","motivation":"約一年多前，受到由司改會委外開發的「司法陽光網」，因而開始寫爬蟲爬司法院的裁判書，發現蠻多人都在做同樣的事情，我希望透過開源、開放的方式，讓相同目的的工作能盡量的減少，去年我們完成了裁判書的爬取，並且將其開放，今年我們想要更進一步的也把裁判書分析的部份也用同樣的方式完成，然後就會開始把資源慢慢轉向行銷、合作的方向，讓做完的專案能開始在社會中發酵、持續提供價值。","existed":"是的。  \n公開網站: https://sunshine.jrf.org.tw/  \n原始碼: https://github.com/JRF-tw/sunshine.jrf.org.tw  ","problem":"目前司法院所提供的裁判書開放資料結構化程度低，且也不是最原始的 raw data，使得裁判書資料取得成本極高。此外，裁判書的每一項屬性分析都需要大量的分析規則和詞庫，才能達到完全的精準，主因在於目前裁判書的書寫格式規範仍會因不同法院、不同法官而有所差異，而且也會隨時間改變，相同的分析演算法或詞庫，也必須因應書寫格式的改變而更新。  \n  \n本計劃的目標在於:  \n\n1. 解決裁判書原始資料和結構化資料取得的不易。\n2. 提昇裁判書屬性分析的準確性。\n3. 開放裁判書屬性分析背後的所有演算法資料，讓任何人皆可運用其成果。","solution":"1. 裁判書查詢提供 API 和 Web console，以期望要取用裁判資料的個人或組織可以不用再花時間寫爬蟲。\n2. 裁判書查詢的條件包含「司法院裁判書查詢系統」內的所有欄位，除「全文檢索語詞」之外。\n3. 承 `2.` 。另提供案由、法官姓名、律師姓名等查詢，查詢條件可視系統屬性分析規則的演進而增加。\n4. 提供裁判書各屬性所使用的規則（正規表示法）和詞庫 API ，同時包含其目前的準確度，以期望進行裁判書分析的個人或組織有現成的分析規則可直接使用。\n5. 承 `4.` 。API 亦包含「增加屬性」、「增加屬性下的規則或詞庫」等行為，所增加的屬性和規則，系統會自動排程計算其準確度，準確度到達一個程度後便可成為 `4.` 所提供的資料內容之一。\n6. Web console 的部份會獨立一個專案，使用上述的 API 來開發，做為 API 使用的示範性應用。\n7. 定期掃描每個演算法的近期準確度，低於一個門檻值時，會以 Email 通知系統人員和貢獻者。藉此減輕維護者的維護成本。","why":"裁判書分析的演算法在不同領域和組織都有其自己的解決方式，我們的方法最主要是希望透過制定簡易的標準化格式，讓這些演算法能夠累積在同一個平台上，並且開放給所有人使用。透過開放的方式，裁判書分析才能夠隨著時間累積跟上環境的變化，並且愈加精準。  \n為了提供動力給參與改進的個人或組織，我們同時要求參與改進的貢獻者提供其背景資料（也可選擇匿名），讓使用分析規則詞庫的人也可以知道哪些演算法是來自由哪些提供者，藉此增加貢獻者的曝光度。","ta":"此計畫的目標對象可分為兩類：資料使用者和演算法使用者。兩者均可透過 API 和 Web interface 進行。  \n  \n資料使用者：依裁判書屬性取得裁判書資料，例如引用判決、引用法規、法官姓名關鍵字、律師姓名關鍵字、法院等，所取得的資料包含「司法院原始內文連結」、「原始連結內容之 raw html」、「裁判書內文 raw data」以及裁判書分析後的各項屬性。此情境用於使用者依特定目的查詢裁判書。  \n  \n演算法使用者: 可取得裁判書分析的各項屬性，其中每一項屬性下都有各個「演算法規則資料」，每一「演算法規則資料」又會再包含「已驗證資料數」、「準確度」、「演算法提供者」等。另可新增屬性，或在特定屬性下新增「演算法規則資料」。此情境用於當資料使用者發現透過本計劃之平台取得的裁判書資料分析結果內容有問題時，可貢獻自己的「演算法規則資料」，藉此修正本計畫之平台所提供的資料內容。","growth":"API 使用者都必須註冊後（github oauth）取得 access token 才能使用，每位使用者的使用記錄和 Email 都會存在平台的資料庫內，所以平台會定期寄送 Email ，摘要資料庫更新的統計數據，以及功能更新，寄送條件僅限於有意願訂閱 Email 的使用者。另外，本計劃也會新增 FB 粉絲專頁，提供無技術背景使用者也有管道可給予指教。而有技術背景的使用者除了粉絲專頁外，我們也會另闢 gitter 或 Slack 等頻道予以討論，問題回報或功能追加請求則採用 github issue 來蒐集意見。","similar":"相似專案可參考「司改會」的「司法陽光網」https://sunshine.jrf.org.tw/\n原始碼: https://github.com/JRF-tw/sunshine.jrf.org.tw （以下稱「陽光網」）。陽光網內的「案件查詢」https://sunshine.jrf.org.tw/search 即為去年 g0v grant 所補助的對象之一，包含裁判書的爬取和 API 資料開放。\n而本計劃亦是承襲此專案之成果和資料，繼續開發出分析判決書用的演算法資料開放，其差異性如下:\n\n1. API 使用必須註冊，且使用者依不同付費等級有不同的使用量等級\n2. 提供測試環境給 API 使用者\n3. 提供詞庫和演算法內容的 API \n4. 司法院資料爬取的數據統計 API\n5. 裁判書 API 提供更細的資料結構\n6. 演算法和詞庫貢獻者透過成功貢獻，可獲得 API 資料使用量的贈送\n","refdesign":"裁判書查詢系統示意網站 https://sunshine.jrf.org.tw/ \n","pastprj":"- https://github.com/5fpro/gaia\n  - 縣市鄉鎮郵遞區號選擇器\n- https://github.com/5fpro/lita-aws\n  - AWS 命令列的聊天機器人版本\n- https://github.com/marsz/twd97\n  - 座標系統單位轉換器\n- https://github.com/5fpro/sqldesigner-rails\n  - 畫 ERD 的工具整合成後台管理系統","cowork":"- 民間團體:\n  - 財團法人民間司法改革基金會\n- 政府:\n  - 司法院\n- 司法相關企業:\n  - Lawsnote (尚未洽談)","usetime":"1. 10 HRs - 系統評估\n2. 20 HRs - App platform 系統架構研究與 prototype\n3. 10 HRs - 文件，包含流程圖、story 等\n4. 2 HRs - 開源專案相關設定: CI, Code Climate, Coverage 等\n5. 50 HRs - 繼承之開源專案系統內容重寫，包含爬蟲與 API\n6. 10 HRs - 網站基本 Layout 與拉皮\n7. 80 HRs - API 使用之驗證與申請機制\n8. 60 HRs - 分析演算法資料庫化(app 化)\n9. 40 HRs - 分析演算法驗證機制\n10. 100 HRs - 分析演算法提供機制\n11. 30 HRs - 付費金流系統串接 (Tappay)\n12. 30 HRs - 演算法相關 API\n13. 50 HRs - 系統管理者後台\n14. 10 HRs - API 對外使用文件 (swagger)\n15. 50 HRs - 裁判書查詢之 Web 開發(前端)\n16. 10 HRs - 裁判書查詢之 Web 開發(後端 + 主機)\n\n所有開發工時共 562 小時。\n不含通勤、吃飯、午睡、上廁所等非系統開發相關之時數。Daily work hour 可以 5 小時計算，因此共 113 個工作天，除以 20 約 5.5 個月，財務預估約 7 個人月，因此餘下的 1.5 個人月可做為開發緩衝和行銷推廣用的時間。","spending":"- 77% 全端工程師: 包含繼承之開源專案的修改以及本計劃內容之所有開發工程。 $65000 TWD * 6 個人月 = $390000 TWD\n- 12% 前端工程師: 用於開發簡易版 web console 以及系統有關 web 部分的基本樣式的設計，一個人月已夠。$60000 TWD\n- 2% 雜支: 包含交通、網域（一年）\b約 $10000 TWD 內\n- 9% 開發期間主機成本: 參考[AWS calculator 之計算結果](https://calculator.s3.amazonaws.com/index.html#r=NRT&key=calc-57C18228-18E5-44DB-9C5F-81B30DC955FA) ，每個月 $250 USD ， 6 個月共 $1500 UDS => $45000 TWD\n","feedback":"Github Issue / Gitter 給技術背景和專案參與者參與。\n粉絲專頁\ng0v 相關討論平台等","product":"所有系統包含爬蟲、網站、API 均在 GitHub 上使用 MIT 授權","milestone1":"1. 裁判書查詢之 API 使用申請，透過 GitHub 註冊/登入後，可取得兩組 access token \n，一組用於測試環境，另外一組用於正式環境。\n2. 使用者可以重置 access token。\n3. 透過 access token 取得裁判書資料 (JSON)，其中包含 raw_html (會提供另外一個 endpoint 取得）、裁判內文（另外的 endpoint）、各屬性資料，例如：法院、年度、字號、案號、判決日期、獨立分享網址、司法院網站上之ID、參與法官姓名、參與律師姓名等。\n4. 可以透過 API 取得裁判書各屬性的演算法資料。\n5. 可以提交自己的裁判書分析演算法上去。","milestone2":"1. 演算法自動驗證機制。\n2. 使用者裁判書 API 之限流機制，付費訂閱機制。\n3. 使用者提交演算法經系統驗證過上架後，增加 API 可用流量機制。\n4. 裁判書查詢之前台 Web 系統（免登入）。\n5. 後台管理者 dashboard 。","difficulty":"1. 爬蟲的營運成本較難掌握，司法院的裁判書查詢系統不定時會增加阻擋機制，因此必須隨時掌握系統爬取狀況。若成本過大時，會考慮和 Lawsnote 合作，改透過 Lawsnote 取得裁判書原始資料，並且將爬蟲的成本費用轉移至支付給 Lawsnote\n2. 貢獻「分析演算法」的方式過於簡單或複雜，使得有新參與的開發者也難以分享其成果，這部份的技術開發是本團隊目前在經驗上較為缺乏的，因此在確定技術架構以前，需要多花時間研究相關案例的技術細節。\n3. 「演算法驗證」的成本和公平性之間的平衡。目前的構想：新進來的演算法，會從資料庫中隨機抽樣 n 筆進行驗證，既存的演算法，每隔 x 天抽樣 n 筆進行驗證，當抽樣驗證後的準確度高於 y % 時，就讓該演算法上架，低於 z % 時，則下架。因此上述之構想中，各變數之間的調整需要考慮到一個演算法的驗證會花多久時間才能完成，成本、效率、品質三者之間的最佳化需要透過不斷實驗才能得知。\n4. 整體營運成本經費不足。由於維護裁判書資料需要仰賴穩定且龐大的運算成本，目前的財務估算僅包含近兩年內的所有裁判資料，若未來必須將更久以前的裁判資料也抓取下來儲存的話，有可能會發生收入無法負荷支出的可能。由於我們定期會做財務預估報告，因此在可預見未來已算到財務嚴重不足時，便會再尋找任何補助的可能。此外，網站本身也會放置 donate button。","future":"外部合作:\n\n1. 目前大部分民眾仍是使用政府所提供的裁判書查詢系統，因此最主要會希望能和司法院合作，將此系統之全部或部分功能模組用於現行政府網站裡，例如在查詢系統某處放置連結或直接嵌入，以提供該裁判、案件更完整之資訊，以便於民眾查詢。\n2. Lawsnote 等相關企業公司合作，將本計劃之成果應用於這些公司原本所提供的服務中，加值其原本所提供之服務。\n\n產品:\n\n1. 基於判決書屬性完整化後，可發展國際化標準的 Akoma Ntoso 格式，使其應用的範圍能延伸至國際化程度。\n2. 應用於","otherfund":"抓取裁判書的爬蟲、儲存裁判書資料的主機、提供 API 的主機，目前均由「財團法人民間司法改革基金會」所負擔，本計劃確定核准後，便會改由「伍樓專業資訊工作室」負擔大部分的主機成本，司改會則基於使用裁判書資料，負擔少部分的成本。  \n  \n本計劃的目的在於讓系統能夠有自給自足的營運模式，在上線後司改會也能夠成為本系統的付費使用者之一。","category":"開放資料","slide":"","related":"「司改會」的「司法陽光網」 https://sunshine.jrf.org.tw/\n此專案中有一部分的功能需要實作出「司法院裁判書的爬取」、「裁判書內文資料分析」、「以\n API 開放資料」，本次提案之計畫亦是承襲此三項功能之成果，繼續累積更進階的功能上去。\n","nonos":"否","role":"- Mars Chen, CEO @ https://5fpro.com , 9 年後端開發  \n- Jude Wang, CEO @ https://jude.asia , 6 年前端開發\n- Sean Wang, Developer @ https://5fpro.com , 4 年後端開發經驗","detailUser":"裁判書分析","detailSolution":"裁判書屬性分析","detailProblem":"結構化程度低落","detailService":"裁判書查詢系統","detailCompetitor":"Lawsnote 七法 - 法學資料庫","detailCompare":"屬性分析演算法的開放程度","_id":"5a62d831900e86001bf9f4ca"},{"timestamp":"2018-01-21T03:40:23.069Z","money":500000,"desc":"從司法院網站所提供的裁判書內文中，將其屬性分析所用的詞庫和規則，以開放資料的形式提供，任何人皆可取得完整的裁判書分析演算法，也同時可以貢獻自己的裁判書分析演算法。透過眾人之力的累積，使裁判書屬性分析能愈加精準、豐富。","motivation":"約一年多前，受到由司改會委外開發的「司法陽光網」，因而開始寫爬蟲爬司法院的裁判書，發現蠻多人都在做同樣的事情，我希望透過開源、開放的方式，讓相同目的的工作能盡量的減少，去年我們完成了裁判書的爬取，並且將其開放，今年我們想要更進一步的也把裁判書分析的部份也用同樣的方式完成，然後就會開始把資源慢慢轉向行銷、合作的方向，讓做完的專案能開始在社會中發酵、持續提供價值。","existed":"是的。  \n公開網站: https://sunshine.jrf.org.tw/  \n原始碼: https://github.com/JRF-tw/sunshine.jrf.org.tw  ","problem":"目前司法院所提供的裁判書開放資料結構化程度低，且也不是最原始的 raw data，使得裁判書資料取得成本極高。此外，裁判書的每一項屬性分析都需要大量的分析規則和詞庫，才能達到完全的精準，主因在於目前裁判書的書寫格式規範仍會因不同法院、不同法官而有所差異，而且也會隨時間改變，相同的分析演算法或詞庫，也必須因應書寫格式的改變而更新。  \n  \n本計劃的目標在於:  \n\n1. 解決裁判書原始資料和結構化資料取得的不易。\n2. 提昇裁判書屬性分析的準確性。\n3. 開放裁判書屬性分析背後的所有演算法資料，讓任何人皆可運用其成果。","solution":"1. 裁判書查詢提供 API 和 Web console，以期望要取用裁判資料的個人或組織可以不用再花時間寫爬蟲。\n2. 裁判書查詢的條件包含「司法院裁判書查詢系統」內的所有欄位，除「全文檢索語詞」之外。\n3. 承 `2.` 。另提供案由、法官姓名、律師姓名等查詢，查詢條件可視系統屬性分析規則的演進而增加。\n4. 提供裁判書各屬性所使用的規則（正規表示法）和詞庫 API ，同時包含其目前的準確度，以期望進行裁判書分析的個人或組織有現成的分析規則可直接使用。\n5. 承 `4.` 。API 亦包含「增加屬性」、「增加屬性下的規則或詞庫」等行為，所增加的屬性和規則，系統會自動排程計算其準確度，準確度到達一個程度後便可成為 `4.` 所提供的資料內容之一。\n6. Web console 的部份會獨立一個專案，使用上述的 API 來開發，做為 API 使用的示範性應用。\n7. 定期掃描每個演算法的近期準確度，低於一個門檻值時，會以 Email 通知系統人員和貢獻者。藉此減輕維護者的維護成本。","why":"裁判書分析的演算法在不同領域和組織都有其自己的解決方式，我們的方法最主要是希望透過制定簡易的標準化格式，讓這些演算法能夠累積在同一個平台上，並且開放給所有人使用。透過開放的方式，裁判書分析才能夠隨著時間累積跟上環境的變化，並且愈加精準。  \n為了提供動力給參與改進的個人或組織，我們同時要求參與改進的貢獻者提供其背景資料（也可選擇匿名），讓使用分析規則詞庫的人也可以知道哪些演算法是來自由哪些提供者，藉此增加貢獻者的曝光度。","ta":"此計畫的目標對象可分為兩類：資料使用者和演算法使用者。兩者均可透過 API 和 Web interface 進行。  \n  \n資料使用者：依裁判書屬性取得裁判書資料，例如引用判決、引用法規、法官姓名關鍵字、律師姓名關鍵字、法院等，所取得的資料包含「司法院原始內文連結」、「原始連結內容之 raw html」、「裁判書內文 raw data」以及裁判書分析後的各項屬性。此情境用於使用者依特定目的查詢裁判書。  \n  \n演算法使用者: 可取得裁判書分析的各項屬性，其中每一項屬性下都有各個「演算法規則資料」，每一「演算法規則資料」又會再包含「已驗證資料數」、「準確度」、「演算法提供者」等。另可新增屬性，或在特定屬性下新增「演算法規則資料」。此情境用於當資料使用者發現透過本計劃之平台取得的裁判書資料分析結果內容有問題時，可貢獻自己的「演算法規則資料」，藉此修正本計畫之平台所提供的資料內容。","growth":"API 使用者都必須註冊後（github oauth）取得 access token 才能使用，每位使用者的使用記錄和 Email 都會存在平台的資料庫內，所以平台會定期寄送 Email ，摘要資料庫更新的統計數據，以及功能更新，寄送條件僅限於有意願訂閱 Email 的使用者。另外，本計劃也會新增 FB 粉絲專頁，提供無技術背景使用者也有管道可給予指教。而有技術背景的使用者除了粉絲專頁外，我們也會另闢 gitter 或 Slack 等頻道予以討論，問題回報或功能追加請求則採用 github issue 來蒐集意見。","similar":"相似專案可參考「司改會」的「司法陽光網」https://sunshine.jrf.org.tw/\n原始碼: https://github.com/JRF-tw/sunshine.jrf.org.tw （以下稱「陽光網」）。陽光網內的「案件查詢」https://sunshine.jrf.org.tw/search 即為去年 g0v grant 所補助的對象之一，包含裁判書的爬取和 API 資料開放。\n而本計劃亦是承襲此專案之成果和資料，繼續開發出分析判決書用的演算法資料開放，其差異性如下:\n\n1. API 使用必須註冊，且使用者依不同付費等級有不同的使用量等級\n2. 提供測試環境給 API 使用者\n3. 提供詞庫和演算法內容的 API \n4. 司法院資料爬取的數據統計 API\n5. 裁判書 API 提供更細的資料結構\n6. 演算法和詞庫貢獻者透過成功貢獻，可獲得 API 資料使用量的贈送\n","refdesign":"裁判書查詢系統示意網站 https://sunshine.jrf.org.tw/ \n","pastprj":"- https://github.com/5fpro/gaia\n  - 縣市鄉鎮郵遞區號選擇器\n- https://github.com/5fpro/lita-aws\n  - AWS 命令列的聊天機器人版本\n- https://github.com/marsz/twd97\n  - 座標系統單位轉換器\n- https://github.com/5fpro/sqldesigner-rails\n  - 畫 ERD 的工具整合成後台管理系統","cowork":"- 民間團體:\n  - 財團法人民間司法改革基金會\n- 政府:\n  - 司法院\n- 司法相關企業:\n  - Lawsnote (尚未洽談)","usetime":"1. 10 HRs - 系統評估\n2. 20 HRs - App platform 系統架構研究與 prototype\n3. 10 HRs - 文件，包含流程圖、story 等\n4. 2 HRs - 開源專案相關設定: CI, Code Climate, Coverage 等\n5. 50 HRs - 繼承之開源專案系統內容重寫，包含爬蟲與 API\n6. 10 HRs - 網站基本 Layout 與拉皮\n7. 80 HRs - API 使用之驗證與申請機制\n8. 60 HRs - 分析演算法資料庫化(app 化)\n9. 40 HRs - 分析演算法驗證機制\n10. 100 HRs - 分析演算法提供機制\n11. 30 HRs - 付費金流系統串接 (Tappay)\n12. 30 HRs - 演算法相關 API\n13. 50 HRs - 系統管理者後台\n14. 10 HRs - API 對外使用文件 (swagger)\n15. 50 HRs - 裁判書查詢之 Web 開發(前端)\n16. 10 HRs - 裁判書查詢之 Web 開發(後端 + 主機)\n\n所有開發工時共 562 小時。\n不含通勤、吃飯、午睡、上廁所等非系統開發相關之時數。Daily work hour 可以 5 小時計算，因此共 113 個工作天，除以 20 約 5.5 個月，財務預估約 7 個人月，因此餘下的 1.5 個人月可做為開發緩衝和行銷推廣用的時間。","spending":"- 77% 全端工程師: 包含繼承之開源專案的修改以及本計劃內容之所有開發工程。 $65000 TWD * 6 個人月 = $390000 TWD\n- 12% 前端工程師: 用於開發簡易版 web console 以及系統有關 web 部分的基本樣式的設計，一個人月已夠。$60000 TWD\n- 2% 雜支: 包含交通、網域（一年）\b約 $10000 TWD 內\n- 9% 開發期間主機成本: 參考[AWS calculator 之計算結果](https://calculator.s3.amazonaws.com/index.html#r=NRT&key=calc-57C18228-18E5-44DB-9C5F-81B30DC955FA) ，每個月 $250 USD ， 6 個月共 $1500 UDS => $45000 TWD\n","feedback":"Github Issue / Gitter 給技術背景和專案參與者參與。\n粉絲專頁\ng0v 相關討論平台等","product":"所有系統包含爬蟲、網站、API 均在 GitHub 上使用 MIT 授權","milestone1":"1. 裁判書查詢之 API 使用申請，透過 GitHub 註冊/登入後，可取得兩組 access token \n，一組用於測試環境，另外一組用於正式環境。\n2. 使用者可以重置 access token。\n3. 透過 access token 取得裁判書資料 (JSON)，其中包含 raw_html (會提供另外一個 endpoint 取得）、裁判內文（另外的 endpoint）、各屬性資料，例如：法院、年度、字號、案號、判決日期、獨立分享網址、司法院網站上之ID、參與法官姓名、參與律師姓名等。\n4. 可以透過 API 取得裁判書各屬性的演算法資料。\n5. 可以提交自己的裁判書分析演算法上去。","milestone2":"1. 演算法自動驗證機制。\n2. 使用者裁判書 API 之限流機制，付費訂閱機制。\n3. 使用者提交演算法經系統驗證過上架後，增加 API 可用流量機制。\n4. 裁判書查詢之前台 Web 系統（免登入）。\n5. 後台管理者 dashboard 。","difficulty":"1. 爬蟲的營運成本較難掌握，司法院的裁判書查詢系統不定時會增加阻擋機制，因此必須隨時掌握系統爬取狀況。若成本過大時，會考慮和 Lawsnote 合作，改透過 Lawsnote 取得裁判書原始資料，並且將爬蟲的成本費用轉移至支付給 Lawsnote\n2. 貢獻「分析演算法」的方式過於簡單或複雜，使得有新參與的開發者也難以分享其成果，這部份的技術開發是本團隊目前在經驗上較為缺乏的，因此在確定技術架構以前，需要多花時間研究相關案例的技術細節。\n3. 「演算法驗證」的成本和公平性之間的平衡。目前的構想：新進來的演算法，會從資料庫中隨機抽樣 n 筆進行驗證，既存的演算法，每隔 x 天抽樣 n 筆進行驗證，當抽樣驗證後的準確度高於 y % 時，就讓該演算法上架，低於 z % 時，則下架。因此上述之構想中，各變數之間的調整需要考慮到一個演算法的驗證會花多久時間才能完成，成本、效率、品質三者之間的最佳化需要透過不斷實驗才能得知。\n4. 整體營運成本經費不足。由於維護裁判書資料需要仰賴穩定且龐大的運算成本，目前的財務估算僅包含近兩年內的所有裁判資料，若未來必須將更久以前的裁判資料也抓取下來儲存的話，有可能會發生收入無法負荷支出的可能。由於我們定期會做財務預估報告，因此在可預見未來已算到財務嚴重不足時，便會再尋找任何補助的可能。此外，網站本身也會放置 donate button。","future":"外部合作:\n\n1. 目前大部分民眾仍是使用政府所提供的裁判書查詢系統，因此最主要會希望能和司法院合作，將此系統之全部或部分功能模組用於現行政府網站裡，例如在查詢系統某處放置連結或直接嵌入，以提供該裁判、案件更完整之資訊，以便於民眾查詢。\n2. Lawsnote 等相關企業公司合作，將本計劃之成果應用於這些公司原本所提供的服務中，加值其原本所提供之服務。\n\n產品:\n\n1. 基於判決書屬性完整化後，可發展國際化標準的 Akoma Ntoso 格式，使其應用的範圍能延伸至國際化程度。","otherfund":"抓取裁判書的爬蟲、儲存裁判書資料的主機、提供 API 的主機，目前均由「財團法人民間司法改革基金會」所負擔，本計劃確定核准後，便會改由「伍樓專業資訊工作室」負擔大部分的主機成本，司改會則基於使用裁判書資料，負擔少部分的成本。  \n  \n本計劃的目的在於讓系統能夠有自給自足的營運模式，在上線後司改會也能夠成為本系統的付費使用者之一。","category":"開放資料","slide":"","related":"「司改會」的「司法陽光網」 https://sunshine.jrf.org.tw/\n此專案中有一部分的功能需要實作出「司法院裁判書的爬取」、「裁判書內文資料分析」、「以\n API 開放資料」，本次提案之計畫亦是承襲此三項功能之成果，繼續累積更進階的功能上去。\n","nonos":"否","role":"- Mars Chen, CEO @ https://5fpro.com , 9 年後端開發  \n- Jude Wang, CEO @ https://jude.asia , 6 年前端開發\n- Sean Wang, Developer @ https://5fpro.com , 4 年後端開發經驗","detailUser":"裁判書分析","detailSolution":"裁判書屬性分析","detailProblem":"結構化程度低落","detailService":"裁判書查詢系統","detailCompetitor":"Lawsnote 七法 - 法學資料庫","detailCompare":"屬性分析演算法的開放程度","_id":"5a640ba7900e86001bf9f50b"},{"timestamp":"2018-01-21T03:46:36.661Z","money":500000,"desc":"從司法院網站所提供的裁判書內文中，將其屬性分析所用的詞庫和規則，以開放資料的形式提供，任何人皆可取得完整的裁判書分析演算法，也同時可以貢獻自己的裁判書分析演算法。透過眾人之力的累積，使裁判書屬性分析能愈加精準、豐富。","motivation":"約一年多前，受到由司改會委外開發的「司法陽光網」，因而開始寫爬蟲爬司法院的裁判書，發現蠻多人都在做同樣的事情，我希望透過開源、開放的方式，讓相同目的的工作能盡量的減少，去年我們完成了裁判書的爬取，並且將其開放，今年我們想要更進一步的也把裁判書分析的部份也用同樣的方式完成，然後就會開始把資源慢慢轉向行銷、合作的方向，讓做完的專案能開始在社會中發酵、持續提供價值。","existed":"是的。  \n公開網站: https://sunshine.jrf.org.tw/  \n原始碼: https://github.com/JRF-tw/sunshine.jrf.org.tw  ","problem":"目前司法院所提供的裁判書開放資料結構化程度低，且也不是最原始的 raw data，使得裁判書資料取得成本極高。此外，裁判書的每一項屬性分析都需要大量的分析規則和詞庫，才能達到完全的精準，主因在於目前裁判書的書寫格式規範仍會因不同法院、不同法官而有所差異，而且也會隨時間改變，相同的分析演算法或詞庫，也必須因應書寫格式的改變而更新。  \n  \n本計劃的目標在於:  \n\n1. 解決裁判書原始資料和結構化資料取得的不易。\n2. 提昇裁判書屬性分析的準確性。\n3. 開放裁判書屬性分析背後的所有演算法資料，讓任何人皆可運用其成果。","solution":"1. 裁判書查詢提供 API 和 Web console，以期望要取用裁判資料的個人或組織可以不用再花時間寫爬蟲。\n2. 裁判書查詢的條件包含「司法院裁判書查詢系統」內的所有欄位，除「全文檢索語詞」之外。\n3. 承 `2.` 。另提供案由、法官姓名、律師姓名等查詢，查詢條件可視系統屬性分析規則的演進而增加。\n4. 提供裁判書各屬性所使用的規則（正規表示法）和詞庫 API ，同時包含其目前的準確度，以期望進行裁判書分析的個人或組織有現成的分析規則可直接使用。\n5. 承 `4.` 。API 亦包含「增加屬性」、「增加屬性下的規則或詞庫」等行為，所增加的屬性和規則，系統會自動排程計算其準確度，準確度到達一個程度後便可成為 `4.` 所提供的資料內容之一。\n6. Web console 的部份會獨立一個專案，使用上述的 API 來開發，做為 API 使用的示範性應用。\n7. 定期掃描每個演算法的近期準確度，低於一個門檻值時，會以 Email 通知系統人員和貢獻者。藉此減輕維護者的維護成本。","why":"裁判書分析的演算法在不同領域和組織都有其自己的解決方式，我們的方法最主要是希望透過制定簡易的標準化格式，讓這些演算法能夠累積在同一個平台上，並且開放給所有人使用。透過開放的方式，裁判書分析才能夠隨著時間累積跟上環境的變化，並且愈加精準。  \n為了提供動力給參與改進的個人或組織，我們同時要求參與改進的貢獻者提供其背景資料（也可選擇匿名），讓使用分析規則詞庫的人也可以知道哪些演算法是來自由哪些提供者，藉此增加貢獻者的曝光度。","ta":"此計畫的目標對象可分為兩類：資料使用者和演算法使用者。兩者均可透過 API 和 Web interface 進行。  \n  \n資料使用者：依裁判書屬性取得裁判書資料，例如引用判決、引用法規、法官姓名關鍵字、律師姓名關鍵字、法院等，所取得的資料包含「司法院原始內文連結」、「原始連結內容之 raw html」、「裁判書內文 raw data」以及裁判書分析後的各項屬性。此情境用於使用者依特定目的查詢裁判書。  \n  \n演算法使用者: 可取得裁判書分析的各項屬性，其中每一項屬性下都有各個「演算法規則資料」，每一「演算法規則資料」又會再包含「已驗證資料數」、「準確度」、「演算法提供者」等。另可新增屬性，或在特定屬性下新增「演算法規則資料」。此情境用於當資料使用者發現透過本計劃之平台取得的裁判書資料分析結果內容有問題時，可貢獻自己的「演算法規則資料」，藉此修正本計畫之平台所提供的資料內容。","growth":"API 使用者都必須註冊後（github oauth）取得 access token 才能使用，每位使用者的使用記錄和 Email 都會存在平台的資料庫內，所以平台會定期寄送 Email ，摘要資料庫更新的統計數據，以及功能更新，寄送條件僅限於有意願訂閱 Email 的使用者。另外，本計劃也會新增 FB 粉絲專頁，提供無技術背景使用者也有管道可給予指教。而有技術背景的使用者除了粉絲專頁外，我們也會另闢 gitter 或 Slack 等頻道予以討論，問題回報或功能追加請求則採用 github issue 來蒐集意見。","similar":"相似專案可參考「司改會」的「司法陽光網」https://sunshine.jrf.org.tw/\n原始碼: https://github.com/JRF-tw/sunshine.jrf.org.tw （以下稱「陽光網」）。陽光網內的「案件查詢」https://sunshine.jrf.org.tw/search 即為去年 g0v grant 所補助的對象之一，包含裁判書的爬取和 API 資料開放。\n而本計劃亦是承襲此專案之成果和資料，繼續開發出分析判決書用的演算法資料開放，其差異性如下:\n\n1. API 使用必須註冊，且使用者依不同付費等級有不同的使用量等級\n2. 提供測試環境給 API 使用者\n3. 提供詞庫和演算法內容的 API \n4. 司法院資料爬取的數據統計 API\n5. 裁判書 API 提供更細的資料結構\n6. 演算法和詞庫貢獻者透過成功貢獻，可獲得 API 資料使用量的贈送\n","refdesign":"裁判書查詢系統示意網站 https://sunshine.jrf.org.tw/ \n","pastprj":"- https://github.com/5fpro/gaia\n  - 縣市鄉鎮郵遞區號選擇器\n- https://github.com/5fpro/lita-aws\n  - AWS 命令列的聊天機器人版本\n- https://github.com/marsz/twd97\n  - 座標系統單位轉換器\n- https://github.com/5fpro/sqldesigner-rails\n  - 畫 ERD 的工具整合成後台管理系統","cowork":"- 民間團體:\n  - 財團法人民間司法改革基金會\n- 政府:\n  - 司法院\n- 司法相關企業:\n  - Lawsnote (尚未洽談)","usetime":"1. 10 HRs - 系統評估\n2. 20 HRs - App platform 系統架構研究與 prototype\n3. 10 HRs - 文件，包含流程圖、story 等\n4. 2 HRs - 開源專案相關設定: CI, Code Climate, Coverage 等\n5. 50 HRs - 繼承之開源專案系統內容重寫，包含爬蟲與 API\n6. 10 HRs - 網站基本 Layout 與拉皮\n7. 80 HRs - API 使用之驗證與申請機制\n8. 60 HRs - 分析演算法資料庫化(app 化)\n9. 40 HRs - 分析演算法驗證機制\n10. 100 HRs - 分析演算法提供機制\n11. 30 HRs - 付費金流系統串接 (Tappay)\n12. 30 HRs - 演算法相關 API\n13. 50 HRs - 系統管理者後台\n14. 10 HRs - API 對外使用文件 (swagger)\n15. 50 HRs - 裁判書查詢之 Web 開發(前端)\n16. 10 HRs - 裁判書查詢之 Web 開發(後端 + 主機)\n\n所有開發工時共 562 小時。\n不含通勤、吃飯、午睡、上廁所等非系統開發相關之時數。Daily work hour 可以 5 小時計算，因此共 113 個工作天，除以 20 約 5.5 個月，財務預估約 7 個人月，因此餘下的 1.5 個人月可做為開發緩衝和行銷推廣用的時間。","spending":"- 77% 全端工程師: 包含繼承之開源專案的修改以及本計劃內容之所有開發工程。 $65000 TWD * 6 個人月 = $390000 TWD\n- 12% 前端工程師: 用於開發簡易版 web console 以及系統有關 web 部分的基本樣式的設計，一個人月已夠。$60000 TWD\n- 2% 雜支: 包含交通、網域（一年）\b約 $10000 TWD 內\n- 9% 開發期間主機成本: 參考[AWS calculator 之計算結果](https://calculator.s3.amazonaws.com/index.html#r=NRT&key=calc-57C18228-18E5-44DB-9C5F-81B30DC955FA) ，每個月 $250 USD ， 6 個月共 $1500 UDS => $45000 TWD\n","feedback":"Github Issue / Gitter 給技術背景和專案參與者參與。\n粉絲專頁\ng0v 相關討論平台等","product":"所有系統包含爬蟲、網站、API 均在 GitHub 上使用 MIT 授權","milestone1":"1. 裁判書查詢之 API 使用申請，透過 GitHub 註冊/登入後，可取得兩組 access token \n，一組用於測試環境，另外一組用於正式環境。\n2. 使用者可以重置 access token。\n3. 透過 access token 取得裁判書資料 (JSON)，其中包含 raw_html (會提供另外一個 endpoint 取得）、裁判內文（另外的 endpoint）、各屬性資料，例如：法院、年度、字號、案號、判決日期、獨立分享網址、司法院網站上之ID、參與法官姓名、參與律師姓名等。\n4. 可以透過 API 取得裁判書各屬性的演算法資料。\n5. 可以提交自己的裁判書分析演算法上去。","milestone2":"1. 演算法自動驗證機制。\n2. 使用者裁判書 API 之限流機制，付費訂閱機制。\n3. 使用者提交演算法經系統驗證過上架後，增加 API 可用流量機制。\n4. 裁判書查詢之前台 Web 系統（免登入）。\n5. 後台管理者 dashboard 。","difficulty":"1. 爬蟲的營運成本較難掌握，司法院的裁判書查詢系統不定時會增加阻擋機制，因此必須隨時掌握系統爬取狀況。若成本過大時，會考慮和 Lawsnote 合作，改透過 Lawsnote 取得裁判書原始資料，並且將爬蟲的成本費用轉移至支付給 Lawsnote\n2. 貢獻「分析演算法」的方式過於簡單或複雜，使得有新參與的開發者也難以分享其成果，這部份的技術開發是本團隊目前在經驗上較為缺乏的，因此在確定技術架構以前，需要多花時間研究相關案例的技術細節。\n3. 「演算法驗證」的成本和公平性之間的平衡。目前的構想：新進來的演算法，會從資料庫中隨機抽樣 n 筆進行驗證，既存的演算法，每隔 x 天抽樣 n 筆進行驗證，當抽樣驗證後的準確度高於 y % 時，就讓該演算法上架，低於 z % 時，則下架。因此上述之構想中，各變數之間的調整需要考慮到一個演算法的驗證會花多久時間才能完成，成本、效率、品質三者之間的最佳化需要透過不斷實驗才能得知。\n4. 整體營運成本經費不足。由於維護裁判書資料需要仰賴穩定且龐大的運算成本，目前的財務估算僅包含近兩年內的所有裁判資料，若未來必須將更久以前的裁判資料也抓取下來儲存的話，有可能會發生收入無法負荷支出的可能。由於我們定期會做財務預估報告，因此在可預見未來已算到財務嚴重不足時，便會再尋找任何補助的可能。此外，網站本身也會放置 donate button。","future":"外部合作:\n\n1. 目前大部分民眾仍是使用政府所提供的裁判書查詢系統，因此最主要會希望能和司法院合作，將此系統之全部或部分功能模組用於現行政府網站裡，例如在查詢系統某處放置連結或直接嵌入，以提供該裁判、案件更完整之資訊，以便於民眾查詢。\n2. Lawsnote 等相關企業公司合作，將本計劃之成果應用於這些公司原本所提供的服務中，加值其原本所提供之服務。\n\n產品:\n\n1. 基於判決書屬性完整化後，可發展國際化標準的 Akoma Ntoso 格式，使其應用的範圍能延伸至國際化程度。","otherfund":"抓取裁判書的爬蟲、儲存裁判書資料的主機、提供 API 的主機，目前均由「財團法人民間司法改革基金會」所負擔，本計劃確定核准後，便會改由「伍樓專業資訊工作室」負擔大部分的主機成本，司改會則基於使用裁判書資料，負擔少部分的成本。  \n  \n本計劃的目的在於讓系統能夠有自給自足的營運模式，在上線後司改會也能夠成為本系統的付費使用者之一。","category":"開放資料","slide":"","related":"「司改會」的「司法陽光網」 https://sunshine.jrf.org.tw/\n此專案中有一部分的功能需要實作出「司法院裁判書的爬取」、「裁判書內文資料分析」、「以\n API 開放資料」，本次提案之計畫亦是承襲此三項功能之成果，繼續累積更進階的功能上去。\n","nonos":"否","role":"| 名稱 | 角色 | 背景 |\n| -- | -- | -- |\n| Mars Chen | PM + Developer |  CEO @ https://5fpro.com , 9 年後端開發 |\n| Jude Wang |  F2E + Designer | CEO @ https://jude.asia , 6 年前端開發 |\n| Sean Wang | Backend Developer | Developer @ https://5fpro.com , 4 年後端開發經驗 |\n\n我們都是在公司上班一段時間後，自己出來接案子當自由工作者，早期的專案類型不拘，近三年開始只做電子商務類型的專案，包含線上購物、開店平台、售票、募姿等，舉凡有購物車、訂單、金流等功能，皆為我們的目標專案。","detailUser":"裁判書分析","detailSolution":"裁判書屬性分析","detailProblem":"結構化程度低落","detailService":"裁判書查詢系統","detailCompetitor":"Lawsnote 七法 - 法學資料庫","detailCompare":"屬性分析演算法的開放程度","_id":"5a640d1c900e86001bf9f50d"},{"timestamp":"2018-01-21T03:47:00.712Z","money":500000,"desc":"從司法院網站所提供的裁判書內文中，將其屬性分析所用的詞庫和規則，以開放資料的形式提供，任何人皆可取得完整的裁判書分析演算法，也同時可以貢獻自己的裁判書分析演算法。透過眾人之力的累積，使裁判書屬性分析能愈加精準、豐富。","motivation":"約一年多前，受到由司改會委外開發的「司法陽光網」，因而開始寫爬蟲爬司法院的裁判書，發現蠻多人都在做同樣的事情，我希望透過開源、開放的方式，讓相同目的的工作能盡量的減少，去年我們完成了裁判書的爬取，並且將其開放，今年我們想要更進一步的也把裁判書分析的部份也用同樣的方式完成，然後就會開始把資源慢慢轉向行銷、合作的方向，讓做完的專案能開始在社會中發酵、持續提供價值。","existed":"是的。  \n公開網站: https://sunshine.jrf.org.tw/  \n原始碼: https://github.com/JRF-tw/sunshine.jrf.org.tw  ","problem":"目前司法院所提供的裁判書開放資料結構化程度低，且也不是最原始的 raw data，使得裁判書資料取得成本極高。此外，裁判書的每一項屬性分析都需要大量的分析規則和詞庫，才能達到完全的精準，主因在於目前裁判書的書寫格式規範仍會因不同法院、不同法官而有所差異，而且也會隨時間改變，相同的分析演算法或詞庫，也必須因應書寫格式的改變而更新。  \n  \n本計劃的目標在於:  \n\n1. 解決裁判書原始資料和結構化資料取得的不易。\n2. 提昇裁判書屬性分析的準確性。\n3. 開放裁判書屬性分析背後的所有演算法資料，讓任何人皆可運用其成果。","solution":"1. 裁判書查詢提供 API 和 Web console，以期望要取用裁判資料的個人或組織可以不用再花時間寫爬蟲。\n2. 裁判書查詢的條件包含「司法院裁判書查詢系統」內的所有欄位，除「全文檢索語詞」之外。\n3. 承 `2.` 。另提供案由、法官姓名、律師姓名等查詢，查詢條件可視系統屬性分析規則的演進而增加。\n4. 提供裁判書各屬性所使用的規則（正規表示法）和詞庫 API ，同時包含其目前的準確度，以期望進行裁判書分析的個人或組織有現成的分析規則可直接使用。\n5. 承 `4.` 。API 亦包含「增加屬性」、「增加屬性下的規則或詞庫」等行為，所增加的屬性和規則，系統會自動排程計算其準確度，準確度到達一個程度後便可成為 `4.` 所提供的資料內容之一。\n6. Web console 的部份會獨立一個專案，使用上述的 API 來開發，做為 API 使用的示範性應用。\n7. 定期掃描每個演算法的近期準確度，低於一個門檻值時，會以 Email 通知系統人員和貢獻者。藉此減輕維護者的維護成本。","why":"裁判書分析的演算法在不同領域和組織都有其自己的解決方式，我們的方法最主要是希望透過制定簡易的標準化格式，讓這些演算法能夠累積在同一個平台上，並且開放給所有人使用。透過開放的方式，裁判書分析才能夠隨著時間累積跟上環境的變化，並且愈加精準。  \n為了提供動力給參與改進的個人或組織，我們同時要求參與改進的貢獻者提供其背景資料（也可選擇匿名），讓使用分析規則詞庫的人也可以知道哪些演算法是來自由哪些提供者，藉此增加貢獻者的曝光度。","ta":"此計畫的目標對象可分為兩類：資料使用者和演算法使用者。兩者均可透過 API 和 Web interface 進行。  \n  \n資料使用者：依裁判書屬性取得裁判書資料，例如引用判決、引用法規、法官姓名關鍵字、律師姓名關鍵字、法院等，所取得的資料包含「司法院原始內文連結」、「原始連結內容之 raw html」、「裁判書內文 raw data」以及裁判書分析後的各項屬性。此情境用於使用者依特定目的查詢裁判書。  \n  \n演算法使用者: 可取得裁判書分析的各項屬性，其中每一項屬性下都有各個「演算法規則資料」，每一「演算法規則資料」又會再包含「已驗證資料數」、「準確度」、「演算法提供者」等。另可新增屬性，或在特定屬性下新增「演算法規則資料」。此情境用於當資料使用者發現透過本計劃之平台取得的裁判書資料分析結果內容有問題時，可貢獻自己的「演算法規則資料」，藉此修正本計畫之平台所提供的資料內容。","growth":"API 使用者都必須註冊後（github oauth）取得 access token 才能使用，每位使用者的使用記錄和 Email 都會存在平台的資料庫內，所以平台會定期寄送 Email ，摘要資料庫更新的統計數據，以及功能更新，寄送條件僅限於有意願訂閱 Email 的使用者。另外，本計劃也會新增 FB 粉絲專頁，提供無技術背景使用者也有管道可給予指教。而有技術背景的使用者除了粉絲專頁外，我們也會另闢 gitter 或 Slack 等頻道予以討論，問題回報或功能追加請求則採用 github issue 來蒐集意見。","similar":"相似專案可參考「司改會」的「司法陽光網」https://sunshine.jrf.org.tw/\n原始碼: https://github.com/JRF-tw/sunshine.jrf.org.tw （以下稱「陽光網」）。陽光網內的「案件查詢」https://sunshine.jrf.org.tw/search 即為去年 g0v grant 所補助的對象之一，包含裁判書的爬取和 API 資料開放。\n而本計劃亦是承襲此專案之成果和資料，繼續開發出分析判決書用的演算法資料開放，其差異性如下:\n\n1. API 使用必須註冊，且使用者依不同付費等級有不同的使用量等級\n2. 提供測試環境給 API 使用者\n3. 提供詞庫和演算法內容的 API \n4. 司法院資料爬取的數據統計 API\n5. 裁判書 API 提供更細的資料結構\n6. 演算法和詞庫貢獻者透過成功貢獻，可獲得 API 資料使用量的贈送\n","refdesign":"裁判書查詢系統示意網站 https://sunshine.jrf.org.tw/ \n","pastprj":"- https://github.com/5fpro/gaia\n  - 縣市鄉鎮郵遞區號選擇器\n- https://github.com/5fpro/lita-aws\n  - AWS 命令列的聊天機器人版本\n- https://github.com/marsz/twd97\n  - 座標系統單位轉換器\n- https://github.com/5fpro/sqldesigner-rails\n  - 畫 ERD 的工具整合成後台管理系統","cowork":"- 民間團體:\n  - 財團法人民間司法改革基金會\n- 政府:\n  - 司法院\n- 司法相關企業:\n  - Lawsnote (尚未洽談)","usetime":"1. 10 HRs - 系統評估\n2. 20 HRs - App platform 系統架構研究與 prototype\n3. 10 HRs - 文件，包含流程圖、story 等\n4. 2 HRs - 開源專案相關設定: CI, Code Climate, Coverage 等\n5. 50 HRs - 繼承之開源專案系統內容重寫，包含爬蟲與 API\n6. 10 HRs - 網站基本 Layout 與拉皮\n7. 80 HRs - API 使用之驗證與申請機制\n8. 60 HRs - 分析演算法資料庫化(app 化)\n9. 40 HRs - 分析演算法驗證機制\n10. 100 HRs - 分析演算法提供機制\n11. 30 HRs - 付費金流系統串接 (Tappay)\n12. 30 HRs - 演算法相關 API\n13. 50 HRs - 系統管理者後台\n14. 10 HRs - API 對外使用文件 (swagger)\n15. 50 HRs - 裁判書查詢之 Web 開發(前端)\n16. 10 HRs - 裁判書查詢之 Web 開發(後端 + 主機)\n\n所有開發工時共 562 小時。\n不含通勤、吃飯、午睡、上廁所等非系統開發相關之時數。Daily work hour 可以 5 小時計算，因此共 113 個工作天，除以 20 約 5.5 個月，財務預估約 7 個人月，因此餘下的 1.5 個人月可做為開發緩衝和行銷推廣用的時間。","spending":"- 77% 全端工程師: 包含繼承之開源專案的修改以及本計劃內容之所有開發工程。 $65000 TWD * 6 個人月 = $390000 TWD\n- 12% 前端工程師: 用於開發簡易版 web console 以及系統有關 web 部分的基本樣式的設計，一個人月已夠。$60000 TWD\n- 2% 雜支: 包含交通、網域（一年）\b約 $10000 TWD 內\n- 9% 開發期間主機成本: 參考[AWS calculator 之計算結果](https://calculator.s3.amazonaws.com/index.html#r=NRT&key=calc-57C18228-18E5-44DB-9C5F-81B30DC955FA) ，每個月 $250 USD ， 6 個月共 $1500 UDS => $45000 TWD\n","feedback":"Github Issue / Gitter 給技術背景和專案參與者參與。\n粉絲專頁\ng0v 相關討論平台等","product":"所有系統包含爬蟲、網站、API 均在 GitHub 上使用 MIT 授權","milestone1":"1. 裁判書查詢之 API 使用申請，透過 GitHub 註冊/登入後，可取得兩組 access token \n，一組用於測試環境，另外一組用於正式環境。\n2. 使用者可以重置 access token。\n3. 透過 access token 取得裁判書資料 (JSON)，其中包含 raw_html (會提供另外一個 endpoint 取得）、裁判內文（另外的 endpoint）、各屬性資料，例如：法院、年度、字號、案號、判決日期、獨立分享網址、司法院網站上之ID、參與法官姓名、參與律師姓名等。\n4. 可以透過 API 取得裁判書各屬性的演算法資料。\n5. 可以提交自己的裁判書分析演算法上去。","milestone2":"1. 演算法自動驗證機制。\n2. 使用者裁判書 API 之限流機制，付費訂閱機制。\n3. 使用者提交演算法經系統驗證過上架後，增加 API 可用流量機制。\n4. 裁判書查詢之前台 Web 系統（免登入）。\n5. 後台管理者 dashboard 。","difficulty":"1. 爬蟲的營運成本較難掌握，司法院的裁判書查詢系統不定時會增加阻擋機制，因此必須隨時掌握系統爬取狀況。若成本過大時，會考慮和 Lawsnote 合作，改透過 Lawsnote 取得裁判書原始資料，並且將爬蟲的成本費用轉移至支付給 Lawsnote\n2. 貢獻「分析演算法」的方式過於簡單或複雜，使得有新參與的開發者也難以分享其成果，這部份的技術開發是本團隊目前在經驗上較為缺乏的，因此在確定技術架構以前，需要多花時間研究相關案例的技術細節。\n3. 「演算法驗證」的成本和公平性之間的平衡。目前的構想：新進來的演算法，會從資料庫中隨機抽樣 n 筆進行驗證，既存的演算法，每隔 x 天抽樣 n 筆進行驗證，當抽樣驗證後的準確度高於 y % 時，就讓該演算法上架，低於 z % 時，則下架。因此上述之構想中，各變數之間的調整需要考慮到一個演算法的驗證會花多久時間才能完成，成本、效率、品質三者之間的最佳化需要透過不斷實驗才能得知。\n4. 整體營運成本經費不足。由於維護裁判書資料需要仰賴穩定且龐大的運算成本，目前的財務估算僅包含近兩年內的所有裁判資料，若未來必須將更久以前的裁判資料也抓取下來儲存的話，有可能會發生收入無法負荷支出的可能。由於我們定期會做財務預估報告，因此在可預見未來已算到財務嚴重不足時，便會再尋找任何補助的可能。此外，網站本身也會放置 donate button。","future":"外部合作:\n\n1. 目前大部分民眾仍是使用政府所提供的裁判書查詢系統，因此最主要會希望能和司法院合作，將此系統之全部或部分功能模組用於現行政府網站裡，例如在查詢系統某處放置連結或直接嵌入，以提供該裁判、案件更完整之資訊，以便於民眾查詢。\n2. Lawsnote 等相關企業公司合作，將本計劃之成果應用於這些公司原本所提供的服務中，加值其原本所提供之服務。\n\n產品:\n\n1. 基於判決書屬性完整化後，可發展國際化標準的 Akoma Ntoso 格式，使其應用的範圍能延伸至國際化程度。","otherfund":"抓取裁判書的爬蟲、儲存裁判書資料的主機、提供 API 的主機，目前均由「財團法人民間司法改革基金會」所負擔，本計劃確定核准後，便會改由「伍樓專業資訊工作室」負擔大部分的主機成本，司改會則基於使用裁判書資料，負擔少部分的成本。  \n  \n本計劃的目的在於讓系統能夠有自給自足的營運模式，在上線後司改會也能夠成為本系統的付費使用者之一。","category":"開放資料","slide":"","related":"「司改會」的「司法陽光網」 https://sunshine.jrf.org.tw/\n此專案中有一部分的功能需要實作出「司法院裁判書的爬取」、「裁判書內文資料分析」、「以\n API 開放資料」，本次提案之計畫亦是承襲此三項功能之成果，繼續累積更進階的功能上去。\n","nonos":"否","role":"| 名稱 | 角色 | 背景經驗 |\n| -- | -- | -- |\n| Mars Chen | PM + Developer |  https://5fpro.com , 9 年後端開發 |\n| Jude Wang |  F2E + Designer | https://jude.asia , 6 年前端開發 |\n| Sean Wang | Backend Developer | https://5fpro.com , 4 年後端開發 |\n\n我們都是在公司上班一段時間後，自己出來接案子當自由工作者，早期的專案類型不拘，近三年開始只做電子商務類型的專案，包含線上購物、開店平台、售票、募姿等，舉凡有購物車、訂單、金流等功能，皆為我們的目標專案。\n\n專案作品:\n\nTHEWALL 這牆音樂: https://thewall.tw\nSTUDIODOE: https://studiodoe.com\n陽光伏特家: https://www.sunnyfounder.com\n愛飯團 (即將上線): http://www.ifuntuan.com/\n司法陽光網: https://sunshine.jrf.org.tw/\n國會無雙: https://musou.tw\nTripMoment: https://tripmoment.com/\n","detailUser":"裁判書分析","detailSolution":"裁判書屬性分析","detailProblem":"結構化程度低落","detailService":"裁判書查詢系統","detailCompetitor":"Lawsnote 七法 - 法學資料庫","detailCompare":"屬性分析演算法的開放程度","_id":"5a640d34900e86001bf9f50e"},{"timestamp":"2018-02-23T11:47:47.625Z","money":500000,"desc":"從司法院網站所提供的裁判書內文中，將其屬性分析所用的詞庫和規則，以開放資料的形式提供，任何人皆可取得完整的裁判書分析演算法，也同時可以貢獻自己的裁判書分析演算法。透過眾人之力的累積，使裁判書屬性分析能愈加精準、豐富。","motivation":"約一年多前，受到由司改會委外開發的「司法陽光網」，因而開始寫爬蟲爬司法院的裁判書，發現蠻多人都在做同樣的事情，我希望透過開源、開放的方式，讓相同目的的工作能盡量的減少，去年我們完成了裁判書的爬取，並且將其開放，今年我們想要更進一步的也把裁判書分析的部份也用同樣的方式完成，然後就會開始把資源慢慢轉向行銷、合作的方向，讓做完的專案能開始在社會中發酵、持續提供價值。","existed":"是的。  \n公開網站: https://sunshine.jrf.org.tw/  \n原始碼: https://github.com/JRF-tw/sunshine.jrf.org.tw  ","problem":"目前司法院所提供的裁判書開放資料結構化程度低，且也不是最原始的 raw data，使得裁判書資料取得成本極高。此外，裁判書的每一項屬性分析都需要大量的分析規則和詞庫，才能達到完全的精準，主因在於目前裁判書的書寫格式規範仍會因不同法院、不同法官而有所差異，而且也會隨時間改變，相同的分析演算法或詞庫，也必須因應書寫格式的改變而更新。  \n  \n本計劃的目標在於:  \n\n1. 解決裁判書原始資料和結構化資料取得的不易。\n2. 提昇裁判書屬性分析的準確性。\n3. 開放裁判書屬性分析背後的所有演算法資料，讓任何人皆可運用其成果。","solution":"1. 裁判書查詢提供 API 和 Web console，以期望要取用裁判資料的個人或組織可以不用再花時間寫爬蟲。\n2. 裁判書查詢的條件包含「司法院裁判書查詢系統」內的所有欄位，除「全文檢索語詞」之外。\n3. 承 `2.` 。另提供案由、法官姓名、律師姓名等查詢，查詢條件可視系統屬性分析規則的演進而增加。\n4. 提供裁判書各屬性所使用的規則（正規表示法）和詞庫 API ，同時包含其目前的準確度，以期望進行裁判書分析的個人或組織有現成的分析規則可直接使用。\n5. 承 `4.` 。API 亦包含「增加屬性」、「增加屬性下的規則或詞庫」等行為，所增加的屬性和規則，系統會自動排程計算其準確度，準確度到達一個程度後便可成為 `4.` 所提供的資料內容之一。\n6. Web console 的部份會獨立一個專案，使用上述的 API 來開發，做為 API 使用的示範性應用。\n7. 定期掃描每個演算法的近期準確度，低於一個門檻值時，會以 Email 通知系統人員和貢獻者。藉此減輕維護者的維護成本。","why":"裁判書分析的演算法在不同領域和組織都有其自己的解決方式，我們的方法最主要是希望透過制定簡易的標準化格式，讓這些演算法能夠累積在同一個平台上，並且開放給所有人使用。透過開放的方式，裁判書分析才能夠隨著時間累積跟上環境的變化，並且愈加精準。  \n為了提供動力給參與改進的個人或組織，我們同時要求參與改進的貢獻者提供其背景資料（也可選擇匿名），讓使用分析規則詞庫的人也可以知道哪些演算法是來自由哪些提供者，藉此增加貢獻者的曝光度。","ta":"此計畫的目標對象可分為兩類：資料使用者和演算法使用者。兩者均可透過 API 和 Web interface 進行。  \n  \n資料使用者：依裁判書屬性取得裁判書資料，例如引用判決、引用法規、法官姓名關鍵字、律師姓名關鍵字、法院等，所取得的資料包含「司法院原始內文連結」、「原始連結內容之 raw html」、「裁判書內文 raw data」以及裁判書分析後的各項屬性。此情境用於使用者依特定目的查詢裁判書。  \n  \n演算法使用者: 可取得裁判書分析的各項屬性，其中每一項屬性下都有各個「演算法規則資料」，每一「演算法規則資料」又會再包含「已驗證資料數」、「準確度」、「演算法提供者」等。另可新增屬性，或在特定屬性下新增「演算法規則資料」。此情境用於當資料使用者發現透過本計劃之平台取得的裁判書資料分析結果內容有問題時，可貢獻自己的「演算法規則資料」，藉此修正本計畫之平台所提供的資料內容。","growth":"API 使用者都必須註冊後（github oauth）取得 access token 才能使用，每位使用者的使用記錄和 Email 都會存在平台的資料庫內，所以平台會定期寄送 Email ，摘要資料庫更新的統計數據，以及功能更新，寄送條件僅限於有意願訂閱 Email 的使用者。另外，本計劃也會新增 FB 粉絲專頁，提供無技術背景使用者也有管道可給予指教。而有技術背景的使用者除了粉絲專頁外，我們也會另闢 gitter 或 Slack 等頻道予以討論，問題回報或功能追加請求則採用 github issue 來蒐集意見。","similar":"相似專案可參考「司改會」的「司法陽光網」https://sunshine.jrf.org.tw/\n原始碼: https://github.com/JRF-tw/sunshine.jrf.org.tw （以下稱「陽光網」）。陽光網內的「案件查詢」https://sunshine.jrf.org.tw/search 即為去年 g0v grant 所補助的對象之一，包含裁判書的爬取和 API 資料開放。\n而本計劃亦是承襲此專案之成果和資料，繼續開發出分析判決書用的演算法資料開放，其差異性如下:\n\n1. API 使用必須註冊，且使用者依不同付費等級有不同的使用量等級\n2. 提供測試環境給 API 使用者\n3. 提供詞庫和演算法內容的 API \n4. 司法院資料爬取的數據統計 API\n5. 裁判書 API 提供更細的資料結構\n6. 演算法和詞庫貢獻者透過成功貢獻，可獲得 API 資料使用量的贈送\n","refdesign":"裁判書查詢系統示意網站 https://sunshine.jrf.org.tw/ \n","pastprj":"- https://github.com/5fpro/gaia\n  - 縣市鄉鎮郵遞區號選擇器\n- https://github.com/5fpro/lita-aws\n  - AWS 命令列的聊天機器人版本\n- https://github.com/marsz/twd97\n  - 座標系統單位轉換器\n- https://github.com/5fpro/sqldesigner-rails\n  - 畫 ERD 的工具整合成後台管理系統","cowork":"- 民間團體:\n  - 財團法人民間司法改革基金會\n- 政府:\n  - 司法院\n- 司法相關企業:\n  - Lawsnote (尚未洽談)","usetime":"1. 10 HRs - 系統評估\n2. 20 HRs - App platform 系統架構研究與 prototype\n3. 10 HRs - 文件，包含流程圖、story 等\n4. 2 HRs - 開源專案相關設定: CI, Code Climate, Coverage 等\n5. 50 HRs - 繼承之開源專案系統內容重寫，包含爬蟲與 API\n6. 10 HRs - 網站基本 Layout 與拉皮\n7. 80 HRs - API 使用之驗證與申請機制\n8. 60 HRs - 分析演算法資料庫化(app 化)\n9. 40 HRs - 分析演算法驗證機制\n10. 100 HRs - 分析演算法提供機制\n11. 30 HRs - 付費金流系統串接 (Tappay)\n12. 30 HRs - 演算法相關 API\n13. 50 HRs - 系統管理者後台\n14. 10 HRs - API 對外使用文件 (swagger)\n15. 50 HRs - 裁判書查詢之 Web 開發(前端)\n16. 10 HRs - 裁判書查詢之 Web 開發(後端 + 主機)\n\n所有開發工時共 562 小時。\n不含通勤、吃飯、午睡、上廁所等非系統開發相關之時數。Daily work hour 可以 5 小時計算，因此共 113 個工作天，除以 20 約 5.5 個月，財務預估約 7 個人月，因此餘下的 1.5 個人月可做為開發緩衝和行銷推廣用的時間。","spending":"- 77% 全端工程師: 包含繼承之開源專案的修改以及本計劃內容之所有開發工程。 $65000 TWD * 6 個人月 = $390000 TWD\n- 12% 前端工程師: 用於開發簡易版 web console 以及系統有關 web 部分的基本樣式的設計，一個人月已夠。$60000 TWD\n- 2% 雜支: 包含交通、網域（一年）\b約 $10000 TWD 內\n- 9% 開發期間主機成本: 參考[AWS calculator 之計算結果](https://calculator.s3.amazonaws.com/index.html#r=NRT&key=calc-57C18228-18E5-44DB-9C5F-81B30DC955FA) ，每個月 $250 USD ， 6 個月共 $1500 UDS => $45000 TWD\n","feedback":"Github Issue / Gitter 給技術背景和專案參與者參與。\n粉絲專頁\ng0v 相關討論平台等","product":"所有系統包含爬蟲、網站、API 均在 GitHub 上使用 MIT 授權","milestone1":"1. 裁判書查詢之 API 使用申請，透過 GitHub 註冊/登入後，可取得兩組 access token \n，一組用於測試環境，另外一組用於正式環境。\n2. 使用者可以重置 access token。\n3. 透過 access token 取得裁判書資料 (JSON)，其中包含 raw_html (會提供另外一個 endpoint 取得）、裁判內文（另外的 endpoint）、各屬性資料，例如：法院、年度、字號、案號、判決日期、獨立分享網址、司法院網站上之ID、參與法官姓名、參與律師姓名等。\n4. 可以透過 API 取得裁判書各屬性的演算法資料。\n5. 可以提交自己的裁判書分析演算法上去。","milestone2":"1. 演算法自動驗證機制。\n2. 使用者裁判書 API 之限流機制，付費訂閱機制。\n3. 使用者提交演算法經系統驗證過上架後，增加 API 可用流量機制。\n4. 裁判書查詢之前台 Web 系統（免登入）。\n5. 後台管理者 dashboard 。","difficulty":"1. 爬蟲的營運成本較難掌握，司法院的裁判書查詢系統不定時會增加阻擋機制，因此必須隨時掌握系統爬取狀況。若成本過大時，會考慮和 Lawsnote 合作，改透過 Lawsnote 取得裁判書原始資料，並且將爬蟲的成本費用轉移至支付給 Lawsnote\n2. 貢獻「分析演算法」的方式過於簡單或複雜，使得有新參與的開發者也難以分享其成果，這部份的技術開發是本團隊目前在經驗上較為缺乏的，因此在確定技術架構以前，需要多花時間研究相關案例的技術細節。\n3. 「演算法驗證」的成本和公平性之間的平衡。目前的構想：新進來的演算法，會從資料庫中隨機抽樣 n 筆進行驗證，既存的演算法，每隔 x 天抽樣 n 筆進行驗證，當抽樣驗證後的準確度高於 y % 時，就讓該演算法上架，低於 z % 時，則下架。因此上述之構想中，各變數之間的調整需要考慮到一個演算法的驗證會花多久時間才能完成，成本、效率、品質三者之間的最佳化需要透過不斷實驗才能得知。\n4. 整體營運成本經費不足。由於維護裁判書資料需要仰賴穩定且龐大的運算成本，目前的財務估算僅包含近兩年內的所有裁判資料，若未來必須將更久以前的裁判資料也抓取下來儲存的話，有可能會發生收入無法負荷支出的可能。由於我們定期會做財務預估報告，因此在可預見未來已算到財務嚴重不足時，便會再尋找任何補助的可能。此外，網站本身也會放置 donate button。","future":"外部合作:\n\n1. 目前大部分民眾仍是使用政府所提供的裁判書查詢系統，因此最主要會希望能和司法院合作，將此系統之全部或部分功能模組用於現行政府網站裡，例如在查詢系統某處放置連結或直接嵌入，以提供該裁判、案件更完整之資訊，以便於民眾查詢。\n2. Lawsnote 等相關企業公司合作，將本計劃之成果應用於這些公司原本所提供的服務中，加值其原本所提供之服務。\n\n產品:\n\n1. 基於判決書屬性完整化後，可發展國際化標準的 Akoma Ntoso 格式，使其應用的範圍能延伸至國際化程度。","otherfund":"抓取裁判書的爬蟲、儲存裁判書資料的主機、提供 API 的主機，目前均由「財團法人民間司法改革基金會」所負擔，本計劃確定核准後，便會改由「伍樓專業資訊工作室」負擔大部分的主機成本，司改會則基於使用裁判書資料，負擔少部分的成本。  \n  \n本計劃的目的在於讓系統能夠有自給自足的營運模式，在上線後司改會也能夠成為本系統的付費使用者之一。","category":"開放資料","slide":"","related":"「司改會」的「司法陽光網」 https://sunshine.jrf.org.tw/\n此專案中有一部分的功能需要實作出「司法院裁判書的爬取」、「裁判書內文資料分析」、「以\n API 開放資料」，本次提案之計畫亦是承襲此三項功能之成果，繼續累積更進階的功能上去。\n","nonos":"否","role":"| 名稱 | 角色 | 背景經驗 |\n| -- | -- | -- |\n| Mars Chen | PM + Developer |  https://5fpro.com , 9 年後端開發 |\n| Jude Wang |  F2E + Designer | https://jude.asia , 6 年前端開發 |\n| Sean Wang | Backend Developer | https://5fpro.com , 4 年後端開發 |\n\n我們都是在公司上班一段時間後，自己出來接案子當自由工作者，早期的專案類型不拘，近三年開始只做電子商務類型的專案，包含線上購物、開店平台、售票、募姿等，舉凡有購物車、訂單、金流等功能，皆為我們的目標專案。\n\n專案作品:\n\n- THEWALL 這牆音樂: https://thewall.tw\n- STUDIODOE: https://studiodoe.com\n- 陽光伏特家: https://www.sunnyfounder.com\n- 愛飯團 (即將上線): http://www.ifuntuan.com/\n- 司法陽光網: https://sunshine.jrf.org.tw/\n- 國會無雙: https://musou.tw\n- TripMoment: https://tripmoment.com/\n","detailUser":"裁判書分析","detailSolution":"裁判書屬性分析","detailProblem":"結構化程度低落","detailService":"裁判書查詢系統","detailCompetitor":"Lawsnote 七法 - 法學資料庫","detailCompare":"屬性分析演算法的開放程度","_id":"5a8fff63955303001beea945"},{"timestamp":"2018-02-23T11:50:12.647Z","money":500000,"desc":"從司法院網站所提供的裁判書內文中，將其屬性分析所用的詞庫和規則，以開放資料的形式提供，任何人皆可取得完整的裁判書分析演算法，也同時可以貢獻自己的裁判書分析演算法。透過眾人之力的累積，使裁判書屬性分析能愈加精準、豐富。","motivation":"約一年多前，受到由司改會委外開發的「司法陽光網」，因而開始寫爬蟲爬司法院的裁判書，發現蠻多人都在做同樣的事情，我希望透過開源、開放的方式，讓相同目的的工作能盡量的減少，去年我們完成了裁判書的爬取，並且將其開放，今年我們想要更進一步的也把裁判書分析的部份也用同樣的方式完成，然後就會開始把資源慢慢轉向行銷、合作的方向，讓做完的專案能開始在社會中發酵、持續提供價值。","existed":"是的。  \n公開網站: https://sunshine.jrf.org.tw/  \n原始碼: https://github.com/JRF-tw/sunshine.jrf.org.tw  ","problem":"目前司法院所提供的裁判書開放資料結構化程度低，且也不是最原始的 raw data，使得裁判書資料取得成本極高。此外，裁判書的每一項屬性分析都需要大量的分析規則和詞庫，才能達到完全的精準，主因在於目前裁判書的書寫格式規範仍會因不同法院、不同法官而有所差異，而且也會隨時間改變，相同的分析演算法或詞庫，也必須因應書寫格式的改變而更新。  \n  \n本計劃的目標在於:  \n\n1. 解決裁判書原始資料和結構化資料取得的不易。\n2. 提昇裁判書屬性分析的準確性。\n3. 開放裁判書屬性分析背後的所有演算法資料，讓任何人皆可運用其成果。","solution":"1. 裁判書查詢提供 API 和 Web console，以期望要取用裁判資料的個人或組織可以不用再花時間寫爬蟲。\n2. 裁判書查詢的條件包含「司法院裁判書查詢系統」內的所有欄位，除「全文檢索語詞」之外。\n3. 承 `2.` 。另提供案由、法官姓名、律師姓名等查詢，查詢條件可視系統屬性分析規則的演進而增加。\n4. 提供裁判書各屬性所使用的規則（正規表示法）和詞庫 API ，同時包含其目前的準確度，以期望進行裁判書分析的個人或組織有現成的分析規則可直接使用。\n5. 承 `4.` 。API 亦包含「增加屬性」、「增加屬性下的規則或詞庫」等行為，所增加的屬性和規則，系統會自動排程計算其準確度，準確度到達一個程度後便可成為 `4.` 所提供的資料內容之一。\n6. Web console 的部份會獨立一個專案，使用上述的 API 來開發，做為 API 使用的示範性應用。\n7. 定期掃描每個演算法的近期準確度，低於一個門檻值時，會以 Email 通知系統人員和貢獻者。藉此減輕維護者的維護成本。","why":"裁判書分析的演算法在不同領域和組織都有其自己的解決方式，我們的方法最主要是希望透過制定簡易的標準化格式，讓這些演算法能夠累積在同一個平台上，並且開放給所有人使用。透過開放的方式，裁判書分析才能夠隨著時間累積跟上環境的變化，並且愈加精準。  \n為了提供動力給參與改進的個人或組織，我們同時要求參與改進的貢獻者提供其背景資料（也可選擇匿名），讓使用分析規則詞庫的人也可以知道哪些演算法是來自由哪些提供者，藉此增加貢獻者的曝光度。","ta":"此計畫的目標對象可分為兩類：資料使用者和演算法使用者。兩者均可透過 API 和 Web interface 進行。  \n  \n資料使用者：依裁判書屬性取得裁判書資料，例如引用判決、引用法規、法官姓名關鍵字、律師姓名關鍵字、法院等，所取得的資料包含「司法院原始內文連結」、「原始連結內容之 raw html」、「裁判書內文 raw data」以及裁判書分析後的各項屬性。此情境用於使用者依特定目的查詢裁判書。  \n  \n演算法使用者: 可取得裁判書分析的各項屬性，其中每一項屬性下都有各個「演算法規則資料」，每一「演算法規則資料」又會再包含「已驗證資料數」、「準確度」、「演算法提供者」等。另可新增屬性，或在特定屬性下新增「演算法規則資料」。此情境用於當資料使用者發現透過本計劃之平台取得的裁判書資料分析結果內容有問題時，可貢獻自己的「演算法規則資料」，藉此修正本計畫之平台所提供的資料內容。","growth":"API 使用者都必須註冊後（github oauth）取得 access token 才能使用，每位使用者的使用記錄和 Email 都會存在平台的資料庫內，所以平台會定期寄送 Email ，摘要資料庫更新的統計數據，以及功能更新，寄送條件僅限於有意願訂閱 Email 的使用者。另外，本計劃也會新增 FB 粉絲專頁，提供無技術背景使用者也有管道可給予指教。而有技術背景的使用者除了粉絲專頁外，我們也會另闢 gitter 或 Slack 等頻道予以討論，問題回報或功能追加請求則採用 github issue 來蒐集意見。","similar":"相似專案可參考「司改會」的「司法陽光網」https://sunshine.jrf.org.tw/\n原始碼: https://github.com/JRF-tw/sunshine.jrf.org.tw （以下稱「陽光網」）。陽光網內的「案件查詢」https://sunshine.jrf.org.tw/search 即為去年 g0v grant 所補助的對象之一，包含裁判書的爬取和 API 資料開放。\n而本計劃亦是承襲此專案之成果和資料，繼續開發出分析判決書用的演算法資料開放，其差異性如下:\n\n1. API 使用必須註冊，且使用者依不同付費等級有不同的使用量等級\n2. 提供測試環境給 API 使用者\n3. 提供詞庫和演算法內容的 API \n4. 司法院資料爬取的數據統計 API\n5. 裁判書 API 提供更細的資料結構\n6. 演算法和詞庫貢獻者透過成功貢獻，可獲得 API 資料使用量的贈送\n","refdesign":"裁判書查詢系統示意網站 https://sunshine.jrf.org.tw/ \n","pastprj":"- https://github.com/5fpro/gaia\n  - 縣市鄉鎮郵遞區號選擇器\n- https://github.com/5fpro/lita-aws\n  - AWS 命令列的聊天機器人版本\n- https://github.com/marsz/twd97\n  - 座標系統單位轉換器\n- https://github.com/5fpro/sqldesigner-rails\n  - 畫 ERD 的工具整合成後台管理系統","cowork":"- 民間團體:\n  - 財團法人民間司法改革基金會\n- 政府:\n  - 司法院\n- 司法相關企業:\n  - Lawsnote (尚未洽談)","usetime":"1. 10 HRs - 系統評估\n2. 20 HRs - App platform 系統架構研究與 prototype\n3. 10 HRs - 文件，包含流程圖、story 等\n4. 2 HRs - 開源專案相關設定: CI, Code Climate, Coverage 等\n5. 50 HRs - 繼承之開源專案系統內容重寫，包含爬蟲與 API\n6. 10 HRs - 網站基本 Layout 與拉皮\n7. 80 HRs - API 使用之驗證與申請機制\n8. 60 HRs - 分析演算法資料庫化(app 化)\n9. 40 HRs - 分析演算法驗證機制\n10. 100 HRs - 分析演算法提供機制\n11. 30 HRs - 付費金流系統串接 (Tappay)\n12. 30 HRs - 演算法相關 API\n13. 50 HRs - 系統管理者後台\n14. 10 HRs - API 對外使用文件 (swagger)\n15. 50 HRs - 裁判書查詢之 Web 開發(前端)\n16. 10 HRs - 裁判書查詢之 Web 開發(後端 + 主機)\n\n所有開發工時共 562 小時。\n不含通勤、吃飯、午睡、上廁所等非系統開發相關之時數。Daily work hour 可以 5 小時計算，因此共 113 個工作天，除以 20 約 5.5 個月，財務預估約 7 個人月，因此餘下的 1.5 個人月可做為開發緩衝和行銷推廣用的時間。","spending":"- 77% 全端工程師: 包含繼承之開源專案的修改以及本計劃內容之所有開發工程。 $65000 TWD * 6 個人月 = $390000 TWD\n- 12% 前端工程師: 用於開發簡易版 web console 以及系統有關 web 部分的基本樣式的設計，一個人月已夠。$60000 TWD\n- 2% 雜支: 包含交通、網域（一年）\b約 $10000 TWD 內\n- 9% 開發期間主機成本: 參考[AWS calculator 之計算結果](https://calculator.s3.amazonaws.com/index.html#r=NRT&key=calc-57C18228-18E5-44DB-9C5F-81B30DC955FA) ，每個月 $250 USD ， 6 個月共 $1500 UDS => $45000 TWD\n","feedback":"Github Issue / Gitter 給技術背景和專案參與者參與。\n粉絲專頁\ng0v 相關討論平台等","product":"所有系統包含爬蟲、網站、API 均在 GitHub 上使用 MIT 授權","milestone1":"1. 裁判書查詢之 API 使用申請，透過 GitHub 註冊/登入後，可取得兩組 access token \n，一組用於測試環境，另外一組用於正式環境。\n2. 使用者可以重置 access token。\n3. 透過 access token 取得裁判書資料 (JSON)，其中包含 raw_html (會提供另外一個 endpoint 取得）、裁判內文（另外的 endpoint）、各屬性資料，例如：法院、年度、字號、案號、判決日期、獨立分享網址、司法院網站上之ID、參與法官姓名、參與律師姓名等。\n4. 可以透過 API 取得裁判書各屬性的演算法資料。\n5. 可以提交自己的裁判書分析演算法上去。","milestone2":"1. 演算法自動驗證機制。\n2. 使用者裁判書 API 之限流機制，付費訂閱機制。\n3. 使用者提交演算法經系統驗證過上架後，增加 API 可用流量機制。\n4. 裁判書查詢之前台 Web 系統（免登入）。\n5. 後台管理者 dashboard 。","difficulty":"1. 爬蟲的營運成本較難掌握，司法院的裁判書查詢系統不定時會增加阻擋機制，因此必須隨時掌握系統爬取狀況。若成本過大時，會考慮和 Lawsnote 合作，改透過 Lawsnote 取得裁判書原始資料，並且將爬蟲的成本費用轉移至支付給 Lawsnote\n2. 貢獻「分析演算法」的方式過於簡單或複雜，使得有新參與的開發者也難以分享其成果，這部份的技術開發是本團隊目前在經驗上較為缺乏的，因此在確定技術架構以前，需要多花時間研究相關案例的技術細節。\n3. 「演算法驗證」的成本和公平性之間的平衡。目前的構想：新進來的演算法，會從資料庫中隨機抽樣 n 筆進行驗證，既存的演算法，每隔 x 天抽樣 n 筆進行驗證，當抽樣驗證後的準確度高於 y % 時，就讓該演算法上架，低於 z % 時，則下架。因此上述之構想中，各變數之間的調整需要考慮到一個演算法的驗證會花多久時間才能完成，成本、效率、品質三者之間的最佳化需要透過不斷實驗才能得知。\n4. 整體營運成本經費不足。由於維護裁判書資料需要仰賴穩定且龐大的運算成本，目前的財務估算僅包含近兩年內的所有裁判資料，若未來必須將更久以前的裁判資料也抓取下來儲存的話，有可能會發生收入無法負荷支出的可能。由於我們定期會做財務預估報告，因此在可預見未來已算到財務嚴重不足時，便會再尋找任何補助的可能。此外，網站本身也會放置 donate button。\n\n2018/2 更新:\n\n1. 如何解決目前已經公開裁判書但卻相當零散而且不完整的問題？例如大部分法院的裁定書都沒有上網，以及各地方法院與不同層級的法院判定書，均是散落在各處而不是在同一個資料庫中。另外像是簡易法庭的判決書，取得難度更高，請問貴團隊如何能解決資料蒐集的困難。\nA: 目前司法院有開放線上的簡易庭判決書查詢 (http://jirs.judicial.gov.tw/FJUD/FJUDQRY01M_E_1.aspx)  ，就目前司法院所公布的「法學資料檢索開放範圍」( http://jirs.judicial.gov.tw/datascop.asp ) 所有判決書目前均已統整至司法院的判決書查詢系統，若有查詢不到的情況，直接向司法院反應即可。但此階段的計畫內容，基於時間、人力、預算的考量，簡易庭目前沒有在計畫範圍內，我們希望先把主要的判決書做到能解決資料使用者的需求後，再擴張簡易庭爬蟲的部份，理想會希望能在下一階段進行。\n\n2 目前司法院對於裁定書開放採取相當保守甚至不友善的態度。大部分資料都很難直接從開放式資料庫內取得，如何能夠在目前的開放資料之外獲取更多的裁判書，進而超越現在司法陽光網的進展？另此計畫提及將與司法院合作，是否已經取得司法院任何善意回應？\nA: 目前在司法院的開放資料中，最新最完整的屬司法院網站的裁判書查詢系統\n (http://jirs.judicial.gov.tw/FJUD/ ) 十分方便搜尋最新或較早以前的裁判資料，優於目前政府資料開放平台上的資料查詢方式，但目前這些資料僅能透過寫爬蟲的方式取得，並沒有提供相關 API ，而司法院網站本身對於爬蟲的阻擋十分嚴格，因此針對這部份我們經過幾次和司法院的溝通後，目前所取得的回應是他們會在今年嘗試把 API 開放的部份以較小的規模進行公開招標，讓小廠商也有機會能參與司法院的資料開放。總結上述：司法院網站是目前透過資訊化所能取得最完整裁判書資料的管道，但仍礙於開放 API 的缺乏以及對爬蟲的不友善阻擋，我們希望透過和司法院的溝通，能解決上述問題。\n\n3. 如果要透過更多不同的爬蟲程式，去撈取更多的司法院散落在各處的開放資料，那此計劃預算僅規劃6個人月的全端工程師及1個人月的前端工程師，是否足夠處理複雜且需不斷更改的程式需求？\nA: 以目前來說，司法院的資料其實都集中在司法院網站的裁判書查詢系統裡，其散落在各處的開放資料，其實都只是把這個網站所開放的資料一部分丟到不同的開放資料平台上，所以只要專注於取得司法院網站的資料便足夠。維護爬蟲其實是必須要持續進行的，但我們必須在六個月內完成完整的監控更新，以確保司法院網站有更新或提高爬蟲阻擋時，系統能夠即時通知工程人員處理，六個月後的維護成本即可大大降低，且該成本我們是希望能夠過資料使用者的捐款來維持。\n\n4. 本計劃絕大部分預算與工作均是用在工程師。但誠如計劃所言，法院的判決書閱讀不易且毫無結構。此問題司法院也完全清楚，未來也有意要求法官採取較嚴謹而結構式的書寫格式。但在裁判書書寫尚未改革之前，此計畫如何能透過程式設計，就可以把鬆散紊亂的大量判決書格式化並且進一步分析，本計劃應該多做說明。\n5. 承上，此計畫未編列任何預算聘請法律專業人才，恐怕嚴重低估了裁判書書寫格式與資料散落的複雜困難程度。\nA: (兩題一起回答) 本計劃在第一階段期間，有針對判決書內容做了簡易的初步分析，例如分析出法官名字、當事人名稱、律師名稱等，透過分析失敗記錄的數據監控，也逐步改良修正分析方式，以提升分析結果。然而在第一階段結束後，我們意識到單憑我們少數幾人之力是很難在短時間內把裁判書內文分析做到位，且資料使用者的需求也都不同，因此萌生了將分析演算法以平台的方式開放出來，讓人人都可以一起來貢獻參與判決書的內文分析，加速內文分析的完整度和準確性，以 open source 的概念來實作此平台，並且提供每個演算的分析評估數據做為貢獻者的參考。本計劃的主軸在於「如何讓更多開發者更有意願來貢獻自己的裁判書分析演算法」，因此我們在預算安排上，有刻意跳脫出「把成本投入在分析內文」上，因為前一階段的計畫中，我們有感受到投入在內文分析的時間和成本是需要非常多的，所以本計劃將方向轉而擁抱開放模式，讓更多人能投入在內文分析，並且具有累積效益。\n\n6. 此計劃應是奠基在司法陽光網的基礎下。作為第二階段的目標應該寫得更清楚。是否應該鎖定特定類型判決？或是特定法院範圍？或是特定年份或司法人員？目標不能太大且案件量也不能太多，才有可能達成計劃目標，也才可以作為未來第三階的重要基礎。\nA: 由於本計劃只針對司法院的裁判書查詢系統 (http://jirs.judicial.gov.tw/FJUD/) 內的資料爬取，該系統也是目前最新最完整，且也囊括了司法院散落在各開放平台的資料，因此資料的範圍均包含此系統上所涵蓋的範圍，即各法院的刑事、民事、行政、公懲的判決和裁決書，由於本系統從第一階段開始時，是從 105 年的資料開始抓取，所以資料的時間範圍會先縮限在 105 年後的裁判書資料，未來專案能取得更多預算時，再往前把過往資料，包含簡易庭的部份也都抓下來。以最保守的情況來說，若資料量過大，超出原本預估的機器預算時，我們會以 106 年一整年 + 地方法院 + 判決書（不含裁決）的範圍作為最保守的資料範圍。","future":"外部合作:\n\n1. 目前大部分民眾仍是使用政府所提供的裁判書查詢系統，因此最主要會希望能和司法院合作，將此系統之全部或部分功能模組用於現行政府網站裡，例如在查詢系統某處放置連結或直接嵌入，以提供該裁判、案件更完整之資訊，以便於民眾查詢。\n2. Lawsnote 等相關企業公司合作，將本計劃之成果應用於這些公司原本所提供的服務中，加值其原本所提供之服務。\n\n產品:\n\n1. 基於判決書屬性完整化後，可發展國際化標準的 Akoma Ntoso 格式，使其應用的範圍能延伸至國際化程度。","otherfund":"抓取裁判書的爬蟲、儲存裁判書資料的主機、提供 API 的主機，目前均由「財團法人民間司法改革基金會」所負擔，本計劃確定核准後，便會改由「伍樓專業資訊工作室」負擔大部分的主機成本，司改會則基於使用裁判書資料，負擔少部分的成本。  \n  \n本計劃的目的在於讓系統能夠有自給自足的營運模式，在上線後司改會也能夠成為本系統的付費使用者之一。","category":"開放資料","slide":"","related":"「司改會」的「司法陽光網」 https://sunshine.jrf.org.tw/\n此專案中有一部分的功能需要實作出「司法院裁判書的爬取」、「裁判書內文資料分析」、「以\n API 開放資料」，本次提案之計畫亦是承襲此三項功能之成果，繼續累積更進階的功能上去。\n","nonos":"否","role":"| 名稱 | 角色 | 背景經驗 |\n| -- | -- | -- |\n| Mars Chen | PM + Developer |  https://5fpro.com , 9 年後端開發 |\n| Jude Wang |  F2E + Designer | https://jude.asia , 6 年前端開發 |\n| Sean Wang | Backend Developer | https://5fpro.com , 4 年後端開發 |\n\n我們都是在公司上班一段時間後，自己出來接案子當自由工作者，早期的專案類型不拘，近三年開始只做電子商務類型的專案，包含線上購物、開店平台、售票、募姿等，舉凡有購物車、訂單、金流等功能，皆為我們的目標專案。\n\n專案作品:\n\n- THEWALL 這牆音樂: https://thewall.tw\n- STUDIODOE: https://studiodoe.com\n- 陽光伏特家: https://www.sunnyfounder.com\n- 愛飯團 (即將上線): http://www.ifuntuan.com/\n- 司法陽光網: https://sunshine.jrf.org.tw/\n- 國會無雙: https://musou.tw\n- TripMoment: https://tripmoment.com/\n","detailUser":"裁判書分析","detailSolution":"裁判書屬性分析","detailProblem":"結構化程度低落","detailService":"裁判書查詢系統","detailCompetitor":"Lawsnote 七法 - 法學資料庫","detailCompare":"屬性分析演算法的開放程度","_id":"5a8ffff4955303001beea946"}]}